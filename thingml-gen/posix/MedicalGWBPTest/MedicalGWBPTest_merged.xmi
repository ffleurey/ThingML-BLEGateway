<?xml version="1.0" encoding="ASCII"?>
<thingML:ThingMLModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:thingML="http://www.thingml.org/xtext/ThingML">
  <types xsi:type="thingML:Thing" name="Main" includes="//@types.15 //@types.18 //@types.21 //@types.11 //@types.48">
    <annotations name="c_header" value="&#xA;  #include &lt;time.h>&#xA;  #include &lt;math.h>&#xA;  #include &lt;bluetooth/bluetooth.h>&#xA;"/>
    <annotations name="c_global" value="&#xA;  float sfloat_to_float(uint8_t *bytes) {&#xA;    if (bytes[1] == 0x07 &amp;&amp; bytes[0] == 0xFE) return INFINITY;&#xA;    else if (bytes[1] == 0x07 &amp;&amp; bytes[0] == 0xFF) return NAN;&#xA;    else if (bytes[1] == 0x08 &amp;&amp; bytes[0] == 0x00) return NAN;&#xA;    else if (bytes[1] == 0x08 &amp;&amp; bytes[0] == 0x01) return NAN;&#xA;    else if (bytes[1] == 0x08 &amp;&amp; bytes[0] == 0x02) return -INFINITY;&#xA;    else {&#xA;      int8_t exponent = ((int8_t)bytes[1]) >> 4;&#xA;      int16_t mantissa = ((int16_t)(((uint16_t)bytes[1]) &lt;&lt; 12) >> 4) | ((uint16_t)bytes[0]);&#xA;      float f_exp = (float)exponent;&#xA;      float f_man = (float)mantissa;&#xA;      return pow(10,f_exp)*f_man;&#xA;    }&#xA;  }&#xA;"/>
    <messages name="bpsensor_connected"/>
    <messages name="bpsensor_error"/>
    <messages name="bpsensor_disconnected"/>
    <messages name="bpsensor_batterylevel">
      <parameters name="percent">
        <typeRef type="//@types.2"/>
      </parameters>
    </messages>
    <messages name="bpsensor_measurement">
      <parameters name="PressureSystolic">
        <typeRef type="//@types.2"/>
      </parameters>
      <parameters name="PressureDiastolic">
        <typeRef type="//@types.2"/>
      </parameters>
      <parameters name="PressureMean">
        <typeRef type="//@types.2"/>
      </parameters>
      <parameters name="PulseRate">
        <typeRef type="//@types.2"/>
      </parameters>
      <parameters name="IrregularPulse">
        <typeRef type="//@types.6"/>
      </parameters>
    </messages>
    <messages name="bpsensor_gw_ready"/>
    <messages name="bpsensor_gw_exit"/>
    <ports xsi:type="thingML:ProvidedPort" name="tryggi3d" sends="//@types.0/@messages.0 //@types.0/@messages.2 //@types.0/@messages.1 //@types.0/@messages.4 //@types.0/@messages.5 //@types.0/@messages.6 //@types.0/@messages.3"/>
    <ports xsi:type="thingML:RequiredPort" name="Signals" sends="//@types.11/@messages.1" receives="//@types.11/@messages.0"/>
    <properties name="BPAddress">
      <typeRef type="//@types.4"/>
      <init xsi:type="thingML:StringLiteral" stringValue="5C:31:3E:5F:4A:5C"/>
    </properties>
    <properties name="BPAddressBT">
      <typeRef type="//@types.29"/>
    </properties>
    <properties name="ConnectedHandle">
      <typeRef type="//@types.3"/>
    </properties>
    <properties name="BatteryValueHandle">
      <typeRef type="//@types.3"/>
      <init xsi:type="thingML:ExternExpression" expression="0x002B"/>
    </properties>
    <properties name="BloodPressureValueHandle">
      <typeRef type="//@types.3"/>
      <init xsi:type="thingML:ExternExpression" expression="0x0012"/>
    </properties>
    <properties name="BloodPressureConfigurationHandle">
      <typeRef type="//@types.3"/>
      <init xsi:type="thingML:ExternExpression" expression="0x0013"/>
    </properties>
    <functions name="initialize_bt_addr">
      <body xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:ExternStatement" statement="str2ba(">
          <segments xsi:type="thingML:PropertyReference" property="//@types.0/@properties.0"/>
          <segments xsi:type="thingML:ExternExpression" expression=", &amp;">
            <segments xsi:type="thingML:PropertyReference" property="//@types.0/@properties.1"/>
            <segments xsi:type="thingML:ExternExpression" expression=");"/>
          </segments>
        </actions>
      </body>
    </functions>
    <behaviour name="States" initial="//@types.0/@behaviour/@substate.0">
      <entry xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:FunctionCallStatement" function="//@types.0/@functions.0"/>
      </entry>
      <substate name="Initialise">
        <entry xsi:type="thingML:SendAction" port="//@types.15/@ports.0" message="//@types.26/@messages.0"/>
        <outgoing target="//@types.0/@behaviour/@substate.1">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.15/@ports.0" message="//@types.14/@messages.0"/>
        </outgoing>
        <outgoing target="//@types.0/@behaviour/@substate.3">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.15/@ports.0" message="//@types.26/@messages.4"/>
        </outgoing>
        <outgoing target="//@types.0/@behaviour/@substate.4">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.0/@ports.1" message="//@types.11/@messages.0"/>
        </outgoing>
      </substate>
      <substate xsi:type="thingML:CompositeState" name="Standby" initial="//@types.0/@behaviour/@substate.1/@substate.0">
        <outgoing target="//@types.0/@behaviour/@substate.2">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.0/@ports.1" message="//@types.11/@messages.0"/>
        </outgoing>
        <outgoing target="//@types.0/@behaviour/@substate.3">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.15/@ports.0" message="//@types.26/@messages.4"/>
        </outgoing>
        <outgoing target="//@types.0/@behaviour/@substate.3">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.18/@ports.0" message="//@types.26/@messages.4"/>
        </outgoing>
        <outgoing target="//@types.0/@behaviour/@substate.3">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.21/@ports.0" message="//@types.26/@messages.4"/>
        </outgoing>
        <substate name="Scan">
          <entry xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:SendAction" port="//@types.18/@ports.0" message="//@types.26/@messages.0"/>
            <actions xsi:type="thingML:SendAction" port="//@types.0/@ports.0" message="//@types.0/@messages.5"/>
          </entry>
          <outgoing target="//@types.0/@behaviour/@substate.1/@substate.1">
            <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.18/@ports.0" message="//@types.17/@messages.0"/>
            <guard xsi:type="thingML:ExpressionGroup">
              <term xsi:type="thingML:AndExpression">
                <lhs xsi:type="thingML:EqualsExpression">
                  <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.0/@behaviour/@substate.1/@substate.0/@outgoing.0/@event" parameter="//@types.17/@messages.0/@parameters.0"/>
                  <rhs xsi:type="thingML:EnumLiteralRef" enum="//@types.34" literal="//@types.34/@literals.0"/>
                </lhs>
                <rhs xsi:type="thingML:ExternExpression" expression="bacmp(&amp;">
                  <segments xsi:type="thingML:EventReference" receiveMsg="//@types.0/@behaviour/@substate.1/@substate.0/@outgoing.0/@event" parameter="//@types.17/@messages.0/@parameters.1"/>
                  <segments xsi:type="thingML:ExternExpression" expression=", &amp;">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.0/@properties.1"/>
                    <segments xsi:type="thingML:EqualsExpression">
                      <lhs xsi:type="thingML:ExternExpression" expression=")"/>
                      <rhs xsi:type="thingML:IntegerLiteral"/>
                    </segments>
                  </segments>
                </rhs>
              </term>
            </guard>
            <action xsi:type="thingML:ActionBlock">
              <actions xsi:type="thingML:SendAction" port="//@types.18/@ports.0" message="//@types.26/@messages.1"/>
              <actions xsi:type="thingML:ExternStatement" statement="printf(&quot;Blood Pressure Sensor wants to connect (%2.2X:%2.2X:%2.2X:%2.2X:%2.2X:%2.2X)\n&quot;, ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.0/@behaviour/@substate.1/@substate.0/@outgoing.0/@event" parameter="//@types.17/@messages.0/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=".b[5],">
                  <segments xsi:type="thingML:EventReference" receiveMsg="//@types.0/@behaviour/@substate.1/@substate.0/@outgoing.0/@event" parameter="//@types.17/@messages.0/@parameters.1"/>
                  <segments xsi:type="thingML:ExternExpression" expression=".b[4],">
                    <segments xsi:type="thingML:EventReference" receiveMsg="//@types.0/@behaviour/@substate.1/@substate.0/@outgoing.0/@event" parameter="//@types.17/@messages.0/@parameters.1"/>
                    <segments xsi:type="thingML:ExternExpression" expression=".b[3],">
                      <segments xsi:type="thingML:EventReference" receiveMsg="//@types.0/@behaviour/@substate.1/@substate.0/@outgoing.0/@event" parameter="//@types.17/@messages.0/@parameters.1"/>
                      <segments xsi:type="thingML:ExternExpression" expression=".b[2],">
                        <segments xsi:type="thingML:EventReference" receiveMsg="//@types.0/@behaviour/@substate.1/@substate.0/@outgoing.0/@event" parameter="//@types.17/@messages.0/@parameters.1"/>
                        <segments xsi:type="thingML:ExternExpression" expression=".b[1],">
                          <segments xsi:type="thingML:EventReference" receiveMsg="//@types.0/@behaviour/@substate.1/@substate.0/@outgoing.0/@event" parameter="//@types.17/@messages.0/@parameters.1"/>
                          <segments xsi:type="thingML:ExternExpression" expression=".b[0]);"/>
                        </segments>
                      </segments>
                    </segments>
                  </segments>
                </segments>
              </actions>
            </action>
          </outgoing>
        </substate>
        <substate name="Connect">
          <entry xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:PrintAction">
              <msg xsi:type="thingML:StringLiteral" stringValue="Connecting to Blood Presure Sensor...\n"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.21/@ports.0" message="//@types.20/@messages.2">
              <parameters xsi:type="thingML:EnumLiteralRef" enum="//@types.34" literal="//@types.34/@literals.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.0/@properties.1"/>
            </actions>
          </entry>
          <outgoing target="//@types.0/@behaviour/@substate.1/@substate.2">
            <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.21/@ports.0" message="//@types.20/@messages.3"/>
            <action xsi:type="thingML:ActionBlock">
              <actions xsi:type="thingML:VariableAssignment" property="//@types.0/@properties.2">
                <expression xsi:type="thingML:EventReference" receiveMsg="//@types.0/@behaviour/@substate.1/@substate.1/@outgoing.0/@event" parameter="//@types.20/@messages.3/@parameters.0"/>
              </actions>
              <actions xsi:type="thingML:SendAction" port="//@types.0/@ports.0" message="//@types.0/@messages.0"/>
              <actions xsi:type="thingML:PrintAction">
                <msg xsi:type="thingML:StringLiteral" stringValue="Blood Pressure Sensor Connected\n"/>
              </actions>
            </action>
          </outgoing>
        </substate>
        <substate name="Connected">
          <entry xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:PrintAction">
              <msg xsi:type="thingML:StringLiteral" stringValue="Connected to Blood Pressure Sensor.\n"/>
            </actions>
          </entry>
          <outgoing target="//@types.0/@behaviour/@substate.1/@substate.5">
            <event xsi:type="thingML:ReceiveMessage" port="//@types.21/@ports.0" message="//@types.26/@messages.3"/>
          </outgoing>
          <outgoing target="//@types.0/@behaviour/@substate.1/@substate.3">
            <event xsi:type="thingML:ReceiveMessage" port="//@types.21/@ports.0" message="//@types.20/@messages.5"/>
          </outgoing>
        </substate>
        <substate name="Encrypted">
          <entry xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:PrintAction">
              <msg xsi:type="thingML:StringLiteral" stringValue="Encrypted Connection to Blood Pressure Sensor.\n"/>
            </actions>
          </entry>
          <outgoing target="//@types.0/@behaviour/@substate.1/@substate.4"/>
        </substate>
        <substate xsi:type="thingML:CompositeState" name="Sync" initial="//@types.0/@behaviour/@substate.1/@substate.4/@substate.0">
          <entry xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:PrintAction">
              <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Syncing with A&amp;D UA-651BLE...\n"/>
            </actions>
          </entry>
          <outgoing target="//@types.0/@behaviour/@substate.1/@substate.5">
            <event xsi:type="thingML:ReceiveMessage" port="//@types.21/@ports.0" message="//@types.26/@messages.3"/>
          </outgoing>
          <substate name="ReadBattery">
            <entry xsi:type="thingML:ActionBlock">
              <actions xsi:type="thingML:PrintAction">
                <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Reading battery percentage...\n"/>
              </actions>
              <actions xsi:type="thingML:SendAction" port="//@types.48/@ports.0" message="//@types.51/@messages.6">
                <parameters xsi:type="thingML:PropertyReference" property="//@types.0/@properties.2"/>
                <parameters xsi:type="thingML:PropertyReference" property="//@types.0/@properties.3"/>
              </actions>
            </entry>
            <internal>
              <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.48/@ports.0" message="//@types.51/@messages.8"/>
              <guard xsi:type="thingML:ExpressionGroup">
                <term xsi:type="thingML:EqualsExpression">
                  <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.0/@behaviour/@substate.1/@substate.4/@substate.0/@internal.0/@event" parameter="//@types.51/@messages.8/@parameters.0"/>
                  <rhs xsi:type="thingML:PropertyReference" property="//@types.0/@properties.2"/>
                </term>
              </guard>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:PrintAction">
                  <msg xsi:type="thingML:StringLiteral" stringValue="[ERROR]: Could not read battery percentage!\n"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.21/@ports.0" message="//@types.26/@messages.1"/>
              </action>
            </internal>
            <outgoing target="//@types.0/@behaviour/@substate.1/@substate.4/@substate.1">
              <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.48/@ports.0" message="//@types.51/@messages.7"/>
              <guard xsi:type="thingML:ExpressionGroup">
                <term xsi:type="thingML:EqualsExpression">
                  <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.0/@behaviour/@substate.1/@substate.4/@substate.0/@outgoing.0/@event" parameter="//@types.51/@messages.7/@parameters.0"/>
                  <rhs xsi:type="thingML:PropertyReference" property="//@types.0/@properties.2"/>
                </term>
              </guard>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:LocalVariable" name="Percent">
                  <typeRef type="//@types.1"/>
                  <init xsi:type="thingML:ExternExpression" expression="">
                    <segments xsi:type="thingML:EventReference" receiveMsg="//@types.0/@behaviour/@substate.1/@substate.4/@substate.0/@outgoing.0/@event" parameter="//@types.51/@messages.7/@parameters.1"/>
                    <segments xsi:type="thingML:ExternExpression" expression=".bytes[0]"/>
                  </init>
                </actions>
                <actions xsi:type="thingML:ExternStatement" statement="printf(&quot;[INFO]: Got battery percentage - %u%%\n&quot;, ">
                  <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.0/@outgoing.0/@action/@actions.0"/>
                  <segments xsi:type="thingML:ExternExpression" expression=");"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.0/@ports.0" message="//@types.0/@messages.3">
                  <parameters xsi:type="thingML:CastExpression" type="//@types.2">
                    <term xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.0/@outgoing.0/@action/@actions.0"/>
                  </parameters>
                </actions>
              </action>
            </outgoing>
          </substate>
          <substate name="TimeSync">
            <entry xsi:type="thingML:ActionBlock">
              <actions xsi:type="thingML:PrintAction">
                <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Synchronizing the time...\n"/>
              </actions>
              <actions xsi:type="thingML:LocalVariable" name="AttributeValue">
                <typeRef type="//@types.59"/>
              </actions>
              <actions xsi:type="thingML:ExternStatement" statement="&#xA;            time_t utc = time(NULL);&#xA;            struct tm *ptm = gmtime(&amp;utc);&#xA;          "/>
              <actions xsi:type="thingML:ExternStatement" statement="&#xA;            ">
                <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.1/@entry/@actions.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=".length = 7;&#xA;            *((uint16_t*)&amp;">
                  <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.1/@entry/@actions.1"/>
                  <segments xsi:type="thingML:ExternExpression" expression=".bytes[0]) = ptm->tm_year+1900;&#xA;            *((uint8_t*)&amp;">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.1/@entry/@actions.1"/>
                    <segments xsi:type="thingML:ExternExpression" expression=".bytes[2]) = ptm->tm_mon+1;&#xA;            *((uint8_t*)&amp;">
                      <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.1/@entry/@actions.1"/>
                      <segments xsi:type="thingML:ExternExpression" expression=".bytes[3]) = ptm->tm_mday;&#xA;            *((uint8_t*)&amp;">
                        <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.1/@entry/@actions.1"/>
                        <segments xsi:type="thingML:ExternExpression" expression=".bytes[4]) = ptm->tm_hour;&#xA;            *((uint8_t*)&amp;">
                          <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.1/@entry/@actions.1"/>
                          <segments xsi:type="thingML:ExternExpression" expression=".bytes[5]) = ptm->tm_min;&#xA;            *((uint8_t*)&amp;">
                            <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.1/@entry/@actions.1"/>
                            <segments xsi:type="thingML:ExternExpression" expression=".bytes[6]) = ptm->tm_sec;&#xA;          "/>
                          </segments>
                        </segments>
                      </segments>
                    </segments>
                  </segments>
                </segments>
              </actions>
              <actions xsi:type="thingML:SendAction" port="//@types.48/@ports.0" message="//@types.51/@messages.12">
                <parameters xsi:type="thingML:PropertyReference" property="//@types.0/@properties.2"/>
                <parameters xsi:type="thingML:ExternExpression" expression="0x0017"/>
                <parameters xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.1/@entry/@actions.1"/>
              </actions>
            </entry>
            <internal>
              <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.48/@ports.0" message="//@types.51/@messages.14"/>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:PrintAction">
                  <msg xsi:type="thingML:StringLiteral" stringValue="[ERROR]: Time synchronization failed. Error code: "/>
                </actions>
                <actions xsi:type="thingML:ExternStatement" statement="printf(&quot;%2.2X&quot;, ">
                  <segments xsi:type="thingML:EventReference" receiveMsg="//@types.0/@behaviour/@substate.1/@substate.4/@substate.1/@internal.0/@event" parameter="//@types.51/@messages.14/@parameters.2"/>
                  <segments xsi:type="thingML:ExternExpression" expression=");"/>
                </actions>
                <actions xsi:type="thingML:PrintAction">
                  <msg xsi:type="thingML:StringLiteral" stringValue="!!\n"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.21/@ports.0" message="//@types.26/@messages.1"/>
              </action>
            </internal>
            <outgoing target="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2">
              <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.48/@ports.0" message="//@types.51/@messages.13"/>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:PrintAction">
                  <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Time synchronization successfull!\n"/>
                </actions>
              </action>
            </outgoing>
          </substate>
          <substate name="GetValues">
            <entry xsi:type="thingML:ActionBlock">
              <actions xsi:type="thingML:PrintAction">
                <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Requesting indications of Blood Pressure Measurement...\n"/>
              </actions>
              <actions xsi:type="thingML:LocalVariable" name="AttributeValue">
                <typeRef type="//@types.59"/>
              </actions>
              <actions xsi:type="thingML:ExternStatement" statement="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@entry/@actions.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=".length = 2;"/>
              </actions>
              <actions xsi:type="thingML:ExternStatement" statement="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@entry/@actions.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=".bytes[0] = 0x02;"/>
              </actions>
              <actions xsi:type="thingML:ExternStatement" statement="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@entry/@actions.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=".bytes[1] = 0x00;"/>
              </actions>
              <actions xsi:type="thingML:SendAction" port="//@types.48/@ports.0" message="//@types.51/@messages.12">
                <parameters xsi:type="thingML:PropertyReference" property="//@types.0/@properties.2"/>
                <parameters xsi:type="thingML:PropertyReference" property="//@types.0/@properties.5"/>
                <parameters xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@entry/@actions.1"/>
              </actions>
            </entry>
            <internal>
              <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.48/@ports.0" message="//@types.51/@messages.14"/>
              <guard xsi:type="thingML:ExpressionGroup">
                <term xsi:type="thingML:EqualsExpression">
                  <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.0/@event" parameter="//@types.51/@messages.14/@parameters.0"/>
                  <rhs xsi:type="thingML:PropertyReference" property="//@types.0/@properties.2"/>
                </term>
              </guard>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:PrintAction">
                  <msg xsi:type="thingML:StringLiteral" stringValue="[ERROR]: Could not set indications of Blood Pressure Measurement!\n"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.21/@ports.0" message="//@types.26/@messages.1"/>
              </action>
            </internal>
            <internal>
              <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.48/@ports.0" message="//@types.51/@messages.17"/>
              <guard xsi:type="thingML:ExpressionGroup">
                <term xsi:type="thingML:AndExpression">
                  <lhs xsi:type="thingML:EqualsExpression">
                    <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@event" parameter="//@types.51/@messages.17/@parameters.0"/>
                    <rhs xsi:type="thingML:PropertyReference" property="//@types.0/@properties.2"/>
                  </lhs>
                  <rhs xsi:type="thingML:EqualsExpression">
                    <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@event" parameter="//@types.51/@messages.17/@parameters.1"/>
                    <rhs xsi:type="thingML:PropertyReference" property="//@types.0/@properties.4"/>
                  </rhs>
                </term>
              </guard>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:ExternStatement" statement="&#xA;            uint8_t length = ">
                  <segments xsi:type="thingML:EventReference" receiveMsg="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@event" parameter="//@types.51/@messages.17/@parameters.2"/>
                  <segments xsi:type="thingML:ExternExpression" expression=".length;&#xA;            uint8_t *data  = ">
                    <segments xsi:type="thingML:EventReference" receiveMsg="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@event" parameter="//@types.51/@messages.17/@parameters.2"/>
                    <segments xsi:type="thingML:ExternExpression" expression=".bytes;&#xA;            uint8_t index = 7;&#xA;          "/>
                  </segments>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="UnitsKPA">
                  <typeRef type="//@types.6"/>
                  <init xsi:type="thingML:ExternExpression" expression="data[0] &amp; 0x01"/>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="HasTimestamp">
                  <typeRef type="//@types.6"/>
                  <init xsi:type="thingML:ExternExpression" expression="(data[0] &amp; 0x02) >> 1"/>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="HasPulseRate">
                  <typeRef type="//@types.6"/>
                  <init xsi:type="thingML:ExternExpression" expression="(data[0] &amp; 0x04) >> 2"/>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="HasUserID">
                  <typeRef type="//@types.6"/>
                  <init xsi:type="thingML:ExternExpression" expression="(data[0] &amp; 0x08) >> 3"/>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="HasMeasurementStatus">
                  <typeRef type="//@types.6"/>
                  <init xsi:type="thingML:ExternExpression" expression="(data[0] &amp; 0x10) >> 4"/>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="Systolic">
                  <typeRef type="//@types.7"/>
                  <init xsi:type="thingML:ExternExpression" expression="sfloat_to_float(&amp;data[1])"/>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="Diastolic">
                  <typeRef type="//@types.7"/>
                  <init xsi:type="thingML:ExternExpression" expression="sfloat_to_float(&amp;data[3])"/>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="MeanArterial">
                  <typeRef type="//@types.7"/>
                  <init xsi:type="thingML:ExternExpression" expression="sfloat_to_float(&amp;data[5])"/>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="Year">
                  <typeRef type="//@types.3"/>
                  <init xsi:type="thingML:IntegerLiteral"/>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="Month">
                  <typeRef type="//@types.1"/>
                  <init xsi:type="thingML:IntegerLiteral"/>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="Day">
                  <typeRef type="//@types.1"/>
                  <init xsi:type="thingML:IntegerLiteral"/>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="Hour">
                  <typeRef type="//@types.1"/>
                  <init xsi:type="thingML:IntegerLiteral"/>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="Minute">
                  <typeRef type="//@types.1"/>
                  <init xsi:type="thingML:IntegerLiteral"/>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="Second">
                  <typeRef type="//@types.1"/>
                  <init xsi:type="thingML:IntegerLiteral"/>
                </actions>
                <actions xsi:type="thingML:ConditionalAction">
                  <condition xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.2"/>
                  <action xsi:type="thingML:ActionBlock">
                    <actions xsi:type="thingML:VariableAssignment" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.9">
                      <expression xsi:type="thingML:ExternExpression" expression="*(uint16_t*)&amp;data[index+0]"/>
                    </actions>
                    <actions xsi:type="thingML:VariableAssignment" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.10">
                      <expression xsi:type="thingML:ExternExpression" expression="data[index+2]"/>
                    </actions>
                    <actions xsi:type="thingML:VariableAssignment" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.11">
                      <expression xsi:type="thingML:ExternExpression" expression="data[index+3]"/>
                    </actions>
                    <actions xsi:type="thingML:VariableAssignment" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.12">
                      <expression xsi:type="thingML:ExternExpression" expression="data[index+4]"/>
                    </actions>
                    <actions xsi:type="thingML:VariableAssignment" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.13">
                      <expression xsi:type="thingML:ExternExpression" expression="data[index+5]"/>
                    </actions>
                    <actions xsi:type="thingML:VariableAssignment" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.14">
                      <expression xsi:type="thingML:ExternExpression" expression="data[index+6]"/>
                    </actions>
                    <actions xsi:type="thingML:ExternStatement" statement="index = index+7;"/>
                  </action>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="Pulse">
                  <typeRef type="//@types.7"/>
                  <init xsi:type="thingML:IntegerLiteral"/>
                </actions>
                <actions xsi:type="thingML:ConditionalAction">
                  <condition xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.3"/>
                  <action xsi:type="thingML:ActionBlock">
                    <actions xsi:type="thingML:VariableAssignment" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.16">
                      <expression xsi:type="thingML:ExternExpression" expression="sfloat_to_float(&amp;data[index])"/>
                    </actions>
                    <actions xsi:type="thingML:ExternStatement" statement="index = index+2;"/>
                  </action>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="UserID">
                  <typeRef type="//@types.1"/>
                  <init xsi:type="thingML:IntegerLiteral"/>
                </actions>
                <actions xsi:type="thingML:ConditionalAction">
                  <condition xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.4"/>
                  <action xsi:type="thingML:ActionBlock">
                    <actions xsi:type="thingML:VariableAssignment" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.18">
                      <expression xsi:type="thingML:ExternExpression" expression="data[index]"/>
                    </actions>
                    <actions xsi:type="thingML:ExternStatement" statement="index = index+1;"/>
                  </action>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="BodyMovement">
                  <typeRef type="//@types.6"/>
                  <init xsi:type="thingML:BooleanLiteral"/>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="CuffFit">
                  <typeRef type="//@types.6"/>
                  <init xsi:type="thingML:BooleanLiteral"/>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="IrregularPulse">
                  <typeRef type="//@types.6"/>
                  <init xsi:type="thingML:BooleanLiteral"/>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="PulseRate">
                  <typeRef type="//@types.1"/>
                  <init xsi:type="thingML:IntegerLiteral"/>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="MeasurementPosition">
                  <typeRef type="//@types.6"/>
                  <init xsi:type="thingML:BooleanLiteral"/>
                </actions>
                <actions xsi:type="thingML:ConditionalAction">
                  <condition xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.5"/>
                  <action xsi:type="thingML:ActionBlock">
                    <actions xsi:type="thingML:VariableAssignment" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.20">
                      <expression xsi:type="thingML:ExternExpression" expression="data[index] &amp; 0x01"/>
                    </actions>
                    <actions xsi:type="thingML:VariableAssignment" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.21">
                      <expression xsi:type="thingML:ExternExpression" expression="(data[index] &amp; 0x02) >> 1"/>
                    </actions>
                    <actions xsi:type="thingML:VariableAssignment" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.22">
                      <expression xsi:type="thingML:ExternExpression" expression="(data[index] &amp; 0x04) >> 2"/>
                    </actions>
                    <actions xsi:type="thingML:VariableAssignment" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.23">
                      <expression xsi:type="thingML:ExternExpression" expression="(data[index] &amp; 0x18) >> 3"/>
                    </actions>
                    <actions xsi:type="thingML:VariableAssignment" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.24">
                      <expression xsi:type="thingML:ExternExpression" expression="(data[index] &amp; 0x20) >> 5"/>
                    </actions>
                  </action>
                </actions>
                <actions xsi:type="thingML:PrintAction">
                  <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Got Blood Pressure measurement - "/>
                </actions>
                <actions xsi:type="thingML:ExternStatement" statement="printf(&quot;%.0f/%.0f (%.0f) &quot;,">
                  <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.6"/>
                  <segments xsi:type="thingML:ExternExpression" expression=", ">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.7"/>
                    <segments xsi:type="thingML:ExternExpression" expression=", ">
                      <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.8"/>
                      <segments xsi:type="thingML:ExternExpression" expression=");"/>
                    </segments>
                  </segments>
                </actions>
                <actions xsi:type="thingML:ConditionalAction">
                  <condition xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.1"/>
                  <action xsi:type="thingML:PrintAction">
                    <msg xsi:type="thingML:StringLiteral" stringValue="kPa "/>
                  </action>
                  <elseAction xsi:type="thingML:PrintAction">
                    <msg xsi:type="thingML:StringLiteral" stringValue="mmHg "/>
                  </elseAction>
                </actions>
                <actions xsi:type="thingML:ConditionalAction">
                  <condition xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.3"/>
                  <action xsi:type="thingML:ActionBlock">
                    <actions xsi:type="thingML:ExternStatement" statement="printf(&quot;%.0fBPM &quot;,">
                      <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.16"/>
                      <segments xsi:type="thingML:ExternExpression" expression=");"/>
                    </actions>
                  </action>
                </actions>
                <actions xsi:type="thingML:ConditionalAction">
                  <condition xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.2"/>
                  <action xsi:type="thingML:ActionBlock">
                    <actions xsi:type="thingML:ExternStatement" statement="printf(&quot;%u.%u.%u %u:%u:%u &quot;,">
                      <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.11"/>
                      <segments xsi:type="thingML:ExternExpression" expression=", ">
                        <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.10"/>
                        <segments xsi:type="thingML:ExternExpression" expression=", ">
                          <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.9"/>
                          <segments xsi:type="thingML:ExternExpression" expression=", ">
                            <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.12"/>
                            <segments xsi:type="thingML:ExternExpression" expression=", ">
                              <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.13"/>
                              <segments xsi:type="thingML:ExternExpression" expression=", ">
                                <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.14"/>
                                <segments xsi:type="thingML:ExternExpression" expression=");"/>
                              </segments>
                            </segments>
                          </segments>
                        </segments>
                      </segments>
                    </actions>
                  </action>
                </actions>
                <actions xsi:type="thingML:ConditionalAction">
                  <condition xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.5"/>
                  <action xsi:type="thingML:ActionBlock">
                    <actions xsi:type="thingML:PrintAction">
                      <msg xsi:type="thingML:StringLiteral" stringValue="- "/>
                    </actions>
                    <actions xsi:type="thingML:ConditionalAction">
                      <condition xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.22"/>
                      <action xsi:type="thingML:PrintAction">
                        <msg xsi:type="thingML:StringLiteral" stringValue="Irregular pulse detected "/>
                      </action>
                      <elseAction xsi:type="thingML:PrintAction">
                        <msg xsi:type="thingML:StringLiteral" stringValue="Normal pulse detected "/>
                      </elseAction>
                    </actions>
                  </action>
                </actions>
                <actions xsi:type="thingML:PrintAction">
                  <msg xsi:type="thingML:StringLiteral" stringValue="\n"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.48/@ports.0" message="//@types.51/@messages.18">
                  <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@event" parameter="//@types.51/@messages.17/@parameters.0"/>
                </actions>
                <actions xsi:type="thingML:ConditionalAction">
                  <condition xsi:type="thingML:AndExpression">
                    <lhs xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.2"/>
                    <rhs xsi:type="thingML:ExternExpression" expression="!isnan(">
                      <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.6"/>
                      <segments xsi:type="thingML:ExternExpression" expression=")"/>
                    </rhs>
                  </condition>
                  <action xsi:type="thingML:ActionBlock">
                    <actions xsi:type="thingML:LocalVariable" name="ObservationTime">
                      <typeRef type="//@types.8"/>
                      <init xsi:type="thingML:IntegerLiteral"/>
                    </actions>
                    <actions xsi:type="thingML:ExternStatement" statement="&#xA;              struct tm timebuf;&#xA;              timebuf.tm_year = ">
                      <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.9"/>
                      <segments xsi:type="thingML:ExternExpression" expression="-1900;&#xA;              timebuf.tm_mon = ">
                        <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.10"/>
                        <segments xsi:type="thingML:ExternExpression" expression="-1;&#xA;              timebuf.tm_mday = ">
                          <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.11"/>
                          <segments xsi:type="thingML:ExternExpression" expression=";&#xA;              timebuf.tm_hour = ">
                            <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.12"/>
                            <segments xsi:type="thingML:ExternExpression" expression=";&#xA;              timebuf.tm_min = ">
                              <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.13"/>
                              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;              timebuf.tm_sec = ">
                                <segments xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.14"/>
                                <segments xsi:type="thingML:ExternExpression" expression=";&#xA;            "/>
                              </segments>
                            </segments>
                          </segments>
                        </segments>
                      </segments>
                    </actions>
                    <actions xsi:type="thingML:VariableAssignment" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.34/@action/@actions.0">
                      <expression xsi:type="thingML:ExternExpression" expression="timegm(&amp;timebuf)"/>
                    </actions>
                    <actions xsi:type="thingML:LocalVariable" name="HealthPressureDiastolic">
                      <typeRef type="//@types.2"/>
                      <init xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.7"/>
                    </actions>
                    <actions xsi:type="thingML:LocalVariable" name="HealthPressureMean">
                      <typeRef type="//@types.2"/>
                      <init xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.8"/>
                    </actions>
                    <actions xsi:type="thingML:LocalVariable" name="HealthPressureSystolic">
                      <typeRef type="//@types.2"/>
                      <init xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.6"/>
                    </actions>
                    <actions xsi:type="thingML:LocalVariable" name="HealthPulseRate">
                      <typeRef type="//@types.2"/>
                      <init xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.16"/>
                    </actions>
                    <actions xsi:type="thingML:SendAction" port="//@types.0/@ports.0" message="//@types.0/@messages.4">
                      <parameters xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.34/@action/@actions.5"/>
                      <parameters xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.34/@action/@actions.3"/>
                      <parameters xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.34/@action/@actions.4"/>
                      <parameters xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.34/@action/@actions.6"/>
                      <parameters xsi:type="thingML:PropertyReference" property="//@types.0/@behaviour/@substate.1/@substate.4/@substate.2/@internal.1/@action/@actions.22"/>
                    </actions>
                  </action>
                </actions>
              </action>
            </internal>
          </substate>
        </substate>
        <substate name="Disconnected">
          <entry xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:SendAction" port="//@types.0/@ports.0" message="//@types.0/@messages.2"/>
            <actions xsi:type="thingML:PrintAction">
              <msg xsi:type="thingML:StringLiteral" stringValue="Disconnected from Blood Pressure Sensor.\n"/>
            </actions>
          </entry>
          <outgoing target="//@types.0/@behaviour/@substate.1/@substate.0"/>
        </substate>
      </substate>
      <substate name="Deinitialise">
        <entry xsi:type="thingML:ActionBlock">
          <actions xsi:type="thingML:PrintAction">
            <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Stopping...\n"/>
          </actions>
          <actions xsi:type="thingML:SendAction" port="//@types.18/@ports.0" message="//@types.26/@messages.1"/>
        </entry>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" port="//@types.18/@ports.0" message="//@types.26/@messages.3"/>
          <action xsi:type="thingML:SendAction" port="//@types.15/@ports.0" message="//@types.26/@messages.1"/>
        </internal>
        <outgoing target="//@types.0/@behaviour/@substate.4">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.15/@ports.0" message="//@types.26/@messages.3"/>
        </outgoing>
        <outgoing target="//@types.0/@behaviour/@substate.3">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.18/@ports.0" message="//@types.26/@messages.4"/>
        </outgoing>
        <outgoing target="//@types.0/@behaviour/@substate.3">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.15/@ports.0" message="//@types.26/@messages.4"/>
        </outgoing>
        <outgoing target="//@types.0/@behaviour/@substate.3">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.0/@ports.1" message="//@types.11/@messages.0"/>
        </outgoing>
      </substate>
      <substate name="Failed">
        <entry xsi:type="thingML:ActionBlock">
          <actions xsi:type="thingML:SendAction" port="//@types.0/@ports.0" message="//@types.0/@messages.1"/>
          <actions xsi:type="thingML:SendAction" port="//@types.0/@ports.0" message="//@types.0/@messages.6"/>
          <actions xsi:type="thingML:PrintAction">
            <msg xsi:type="thingML:StringLiteral" stringValue="[ERROR]: Failed, quitting... !!!\n"/>
          </actions>
          <actions xsi:type="thingML:SendAction" port="//@types.0/@ports.1" message="//@types.11/@messages.1">
            <parameters xsi:type="thingML:IntegerLiteral" intValue="1"/>
          </actions>
        </entry>
      </substate>
      <substate name="Quit">
        <entry xsi:type="thingML:ActionBlock">
          <actions xsi:type="thingML:PrintAction">
            <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Finished, quitting...\n"/>
          </actions>
          <actions xsi:type="thingML:SendAction" port="//@types.0/@ports.0" message="//@types.0/@messages.6"/>
          <actions xsi:type="thingML:SendAction" port="//@types.0/@ports.1" message="//@types.11/@messages.1">
            <parameters xsi:type="thingML:IntegerLiteral"/>
          </actions>
        </entry>
      </substate>
    </behaviour>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="Byte" ByteSize="1">
    <annotations name="c_type" value="uint8_t"/>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="Int" ByteSize="2">
    <annotations name="c_type" value="int16_t"/>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="UInt" ByteSize="2">
    <annotations name="c_type" value="uint16_t"/>
  </types>
  <types xsi:type="thingML:ObjectType" name="String">
    <annotations name="c_type" value="const char *"/>
  </types>
  <types xsi:type="thingML:ObjectType" name="DataPointer">
    <annotations name="c_type" value="uint8_t *"/>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="Boolean" ByteSize="1">
    <annotations name="c_type" value="uint8_t"/>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="Float" ByteSize="4">
    <annotations name="c_type" value="float"/>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="DateTime" ByteSize="4">
    <annotations name="c_type" value="time_t"/>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="NotifierCommand" ByteSize="8">
    <annotations name="c_type" value="notifier_cmd_t"/>
    <annotations name="c_header" value="#ifndef NOTIFIER_CMD_T_H"/>
    <annotations name="c_header" value="#define NOTIFIER_CMD_T_H"/>
    <annotations name="c_header" value="typedef struct { uint8_t bytes[8]; } notifier_cmd_t;"/>
    <annotations name="c_header" value="#endif"/>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="ExitCode" ByteSize="2">
    <annotations name="c_type" value="int16_t"/>
  </types>
  <types xsi:type="thingML:Thing" name="ExitHandlerMsgs" fragment="true">
    <messages name="Interrupt"/>
    <messages name="Quit">
      <parameters name="code">
        <typeRef type="//@types.10"/>
      </parameters>
    </messages>
  </types>
  <types xsi:type="thingML:Thing" name="ExitHandler" includes="//@types.11">
    <annotations name="c_header" value="#include &lt;stdlib.h>"/>
    <annotations name="c_header" value="#include &lt;signal.h>"/>
    <annotations name="c_global" value="struct ExitHandler_Instance *_handler_instance;"/>
    <ports xsi:type="thingML:ProvidedPort" name="Signals" sends="//@types.11/@messages.0" receives="//@types.11/@messages.1"/>
    <functions name="catch_sigint">
      <annotations name="c_prototype" value="void catch_sigint(int sig)"/>
      <annotations name="c_instance_var_name" value="_handler_instance"/>
      <annotations name="SuppressWarnings" value="Call"/>
      <body xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:PrintAction">
          <msg xsi:type="thingML:StringLiteral" stringValue=" Caught SIGINT\n"/>
        </actions>
        <actions xsi:type="thingML:SendAction" port="//@types.12/@ports.0" message="//@types.11/@messages.0"/>
      </body>
    </functions>
    <behaviour name="Handler" initial="//@types.12/@behaviour/@substate.0">
      <substate name="Waiting">
        <annotations name="SuppressWarnings" value="Sink"/>
        <entry xsi:type="thingML:ActionBlock">
          <actions xsi:type="thingML:ExternStatement" statement="_handler_instance = _instance;"/>
          <actions xsi:type="thingML:ExternStatement" statement="signal(SIGINT, catch_sigint);"/>
        </entry>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.12/@ports.0" message="//@types.11/@messages.1"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:PrintAction">
              <msg xsi:type="thingML:StringLiteral" stringValue="Exiting!\n"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="exit(">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.12/@behaviour/@substate.0/@internal.0/@event" parameter="//@types.11/@messages.1/@parameters.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=");"/>
            </actions>
          </action>
        </internal>
      </substate>
    </behaviour>
  </types>
  <types xsi:type="thingML:Thing" name="HCISocketProxyImpl" includes="//@types.25">
    <annotations name="c_header" value="#include &lt;errno.h>"/>
    <annotations name="c_header" value="#include &lt;stdio.h>"/>
    <annotations name="c_header" value="#include &lt;sys/ioctl.h>"/>
    <annotations name="c_header" value="#include &lt;bluetooth/bluetooth.h>"/>
    <annotations name="c_header" value="#include &lt;bluetooth/hci.h>"/>
    <annotations name="c_header" value="#include &lt;bluetooth/hci_lib.h>"/>
    <properties name="DevHandle">
      <typeRef type="//@types.2"/>
      <init xsi:type="thingML:UnaryMinus">
        <term xsi:type="thingML:IntegerLiteral" intValue="1"/>
      </init>
    </properties>
    <functions name="OpenSocket">
      <annotations name="SuppressWarnings" value="Call"/>
      <body xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:ExternStatement" statement="&#xA;      // Find the device ID of address specified&#xA;      int device_id = hci_devid(">
          <segments xsi:type="thingML:PropertyReference" property="//@types.25/@properties.0"/>
          <segments xsi:type="thingML:ExternExpression" expression=");&#xA;      if (device_id &lt; 0) {&#xA;        printf(&quot;[ERROR] Couldn't find device with address &quot;);&#xA;        fflush(stdout);&#xA;        perror(">
            <segments xsi:type="thingML:PropertyReference" property="//@types.25/@properties.0"/>
            <segments xsi:type="thingML:ExternExpression" expression=");&#xA;        return;&#xA;      }&#xA;      // Open the device&#xA;      int handle = hci_open_dev(device_id);&#xA;      if (handle &lt; 0) {&#xA;        perror(&quot;[ERROR] Couldn't open HCI socket&quot;);&#xA;        return;&#xA;      }&#xA;      // Set socket filters to give us all events from the Controller&#xA;      struct hci_filter filt;&#xA;      filt.type_mask = 0xFFFFFFFF;&#xA;      filt.event_mask[0] = 0xFFFFFFFF;&#xA;      filt.event_mask[1] = 0xFFFFFFFF;&#xA;      filt.opcode = 0x0000;&#xA;      if (setsockopt(handle, SOL_HCI, HCI_FILTER, &amp;filt, sizeof(filt)) &lt; 0) {&#xA;        perror(&quot;[ERROR] Couldn't set HCI socket filter&quot;);&#xA;        hci_close_dev(handle);&#xA;        return;&#xA;      }&#xA;      // We are open for business&#xA;      ">
              <segments xsi:type="thingML:PropertyReference" property="//@types.13/@properties.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=" = handle;&#xA;      "/>
            </segments>
          </segments>
        </actions>
        <actions xsi:type="thingML:FunctionCallStatement" function="//@types.13/@functions.6"/>
        <actions xsi:type="thingML:ExternStatement" statement="&#xA;    "/>
      </body>
    </functions>
    <functions name="CloseSocket">
      <annotations name="SuppressWarnings" value="Call"/>
      <body xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:ExternStatement" statement="hci_close_dev(">
          <segments xsi:type="thingML:PropertyReference" property="//@types.13/@properties.0"/>
          <segments xsi:type="thingML:ExternExpression" expression=");"/>
        </actions>
      </body>
    </functions>
    <functions name="SocketIsOpen">
      <annotations name="SuppressWarnings" value="Call"/>
      <typeRef type="//@types.1"/>
      <body xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:ReturnAction">
          <exp xsi:type="thingML:GreaterOrEqualExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.13/@properties.0"/>
            <rhs xsi:type="thingML:IntegerLiteral"/>
          </exp>
        </actions>
      </body>
    </functions>
    <functions name="GetBTAddress">
      <annotations name="SuppressWarnings" value="Call"/>
      <typeRef type="//@types.29"/>
      <body xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:LocalVariable" name="Address">
          <typeRef type="//@types.29"/>
          <init xsi:type="thingML:ExternExpression" expression="{0x00, 0x00, 0x00, 0x00, 0x00, 0x00}"/>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:GreaterOrEqualExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.13/@properties.0"/>
            <rhs xsi:type="thingML:IntegerLiteral"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;        int device_id = hci_devid(">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@properties.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=");&#xA;        if (device_id &lt; 0) {&#xA;          printf(&quot;[ERROR] Couldn't find device with address &quot;);&#xA;          fflush(stdout);&#xA;          perror(">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@properties.0"/>
                <segments xsi:type="thingML:ExternExpression" expression=");&#xA;        }&#xA;        // Get the address&#xA;        hci_devba(device_id, &amp;">
                  <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.3/@body/@actions.0"/>
                  <segments xsi:type="thingML:ExternExpression" expression=");&#xA;      "/>
                </segments>
              </segments>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ReturnAction">
          <exp xsi:type="thingML:PropertyReference" property="//@types.13/@functions.3/@body/@actions.0"/>
        </actions>
      </body>
    </functions>
    <functions name="SendCommand">
      <annotations name="SuppressWarnings" value="Call"/>
      <parameters name="Group">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Command">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Length">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Data">
        <typeRef type="//@types.5"/>
      </parameters>
      <body xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:GreaterOrEqualExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.13/@properties.0"/>
            <rhs xsi:type="thingML:IntegerLiteral"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="printf(&quot;[HCI-CMD Grp:0x%04x Cmd:%04x -> ] &quot;, ">
              <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.4/@parameters.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=", ">
                <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.4/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=");"/>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.6">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.13/@functions.4/@parameters.3"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.13/@functions.4/@parameters.2"/>
            </actions>
            <actions xsi:type="thingML:PrintAction">
              <msg xsi:type="thingML:StringLiteral" stringValue="\n"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;        if (hci_send_cmd(">
              <segments xsi:type="thingML:PropertyReference" property="//@types.13/@properties.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=", ">
                <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.4/@parameters.0"/>
                <segments xsi:type="thingML:ExternExpression" expression=", ">
                  <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.4/@parameters.1"/>
                  <segments xsi:type="thingML:ExternExpression" expression=", ">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.4/@parameters.2"/>
                    <segments xsi:type="thingML:ExternExpression" expression=", ">
                      <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.4/@parameters.3"/>
                      <segments xsi:type="thingML:ExternExpression" expression=") &lt; 0) {&#xA;          // Something went wrong, just close the socket and give up&#xA;          // It will eventually go into closed state and inform others&#xA;          hci_close_dev(">
                        <segments xsi:type="thingML:PropertyReference" property="//@types.13/@properties.0"/>
                        <segments xsi:type="thingML:ExternExpression" expression=");&#xA;          ">
                          <segments xsi:type="thingML:PropertyReference" property="//@types.13/@properties.0"/>
                          <segments xsi:type="thingML:ExternExpression" expression=" = -1;&#xA;        }&#xA;      "/>
                        </segments>
                      </segments>
                    </segments>
                  </segments>
                </segments>
              </segments>
            </actions>
          </action>
        </actions>
      </body>
    </functions>
    <functions name="SendACLData">
      <annotations name="SuppressWarnings" value="Call"/>
      <parameters name="Handle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="CID">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Length">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Data">
        <typeRef type="//@types.5"/>
      </parameters>
      <body xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:GreaterOrEqualExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.13/@properties.0"/>
            <rhs xsi:type="thingML:IntegerLiteral"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="printf(&quot;[HCI-ACL h:0x%04x CID:0x%04x  -> ] &quot;, ">
              <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.5/@parameters.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=", ">
                <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.5/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=");"/>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.6">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.13/@functions.5/@parameters.3"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.13/@functions.5/@parameters.2"/>
            </actions>
            <actions xsi:type="thingML:PrintAction">
              <msg xsi:type="thingML:StringLiteral" stringValue="\n"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;        uint8_t buffer[HCI_MAX_ACL_SIZE];&#xA;        buffer[0] = HCI_ACLDATA_PKT;&#xA;        *((uint16_t*)&amp;buffer[1]) = ">
              <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.5/@parameters.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=" &amp; 0x0FFF;&#xA;        *((uint16_t*)&amp;buffer[3]) = ">
                <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.5/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=" + 4;&#xA;        *((uint16_t*)&amp;buffer[5]) = ">
                  <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.5/@parameters.2"/>
                  <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        *((uint16_t*)&amp;buffer[7]) = ">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.5/@parameters.1"/>
                    <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        memcpy(&amp;buffer[9], ">
                      <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.5/@parameters.3"/>
                      <segments xsi:type="thingML:ExternExpression" expression=", ">
                        <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.5/@parameters.2"/>
                        <segments xsi:type="thingML:ExternExpression" expression=");&#xA;&#xA;        while (write(">
                          <segments xsi:type="thingML:PropertyReference" property="//@types.13/@properties.0"/>
                          <segments xsi:type="thingML:ExternExpression" expression=", buffer, ">
                            <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.5/@parameters.2"/>
                            <segments xsi:type="thingML:ExternExpression" expression="+9) &lt; 0) {&#xA;          if (errno == EAGAIN || errno == EINTR)&#xA;            continue;&#xA;&#xA;          hci_close_dev(">
                              <segments xsi:type="thingML:PropertyReference" property="//@types.13/@properties.0"/>
                              <segments xsi:type="thingML:ExternExpression" expression=");&#xA;          ">
                                <segments xsi:type="thingML:PropertyReference" property="//@types.13/@properties.0"/>
                                <segments xsi:type="thingML:ExternExpression" expression=" = -1;&#xA;        }&#xA;&#xA;      "/>
                              </segments>
                            </segments>
                          </segments>
                        </segments>
                      </segments>
                    </segments>
                  </segments>
                </segments>
              </segments>
            </actions>
          </action>
        </actions>
      </body>
    </functions>
    <functions name="StartSocketReader">
      <annotations name="fork_linux_thread" value="true"/>
      <body xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:LocalVariable" name="MessageType">
          <typeRef type="//@types.1"/>
        </actions>
        <actions xsi:type="thingML:LocalVariable" name="EventType">
          <typeRef type="//@types.1"/>
        </actions>
        <actions xsi:type="thingML:LocalVariable" name="Length">
          <typeRef type="//@types.1"/>
        </actions>
        <actions xsi:type="thingML:LocalVariable" name="Handle">
          <typeRef type="//@types.3"/>
        </actions>
        <actions xsi:type="thingML:LocalVariable" name="PacketBoundary">
          <typeRef type="//@types.43"/>
        </actions>
        <actions xsi:type="thingML:LocalVariable" name="Broadcast">
          <typeRef type="//@types.44"/>
        </actions>
        <actions xsi:type="thingML:LocalVariable" name="LLength">
          <typeRef type="//@types.3"/>
        </actions>
        <actions xsi:type="thingML:LocalVariable" name="Data">
          <typeRef type="//@types.5"/>
        </actions>
        <actions xsi:type="thingML:ExternStatement" statement="&#xA;      int bytes_read = 0;&#xA;      uint8_t buffer[HCI_MAX_FRAME_SIZE];&#xA;    "/>
        <actions xsi:type="thingML:LoopAction">
          <condition xsi:type="thingML:GreaterOrEqualExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.13/@properties.0"/>
            <rhs xsi:type="thingML:IntegerLiteral"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;        bytes_read = read(">
              <segments xsi:type="thingML:PropertyReference" property="//@types.13/@properties.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=", buffer, HCI_MAX_FRAME_SIZE);&#xA;        if (bytes_read &lt; 0) {&#xA;          if (errno == EAGAIN || errno == EINTR) {&#xA;            usleep(1);&#xA;          } else {&#xA;            // Something went wrong, just close the socket and give up&#xA;            // It will eventually go into closed state and inform others&#xA;            hci_close_dev(">
                <segments xsi:type="thingML:PropertyReference" property="//@types.13/@properties.0"/>
                <segments xsi:type="thingML:ExternExpression" expression=");&#xA;            ">
                  <segments xsi:type="thingML:PropertyReference" property="//@types.13/@properties.0"/>
                  <segments xsi:type="thingML:ExternExpression" expression=" = -1;&#xA;            return;&#xA;          }&#xA;        } else {&#xA;          // Decode packet and send appropriate messages&#xA;          ">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.6/@body/@actions.0"/>
                    <segments xsi:type="thingML:ExternExpression" expression=" = buffer[0];&#xA;          switch (">
                      <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.6/@body/@actions.0"/>
                      <segments xsi:type="thingML:ExternExpression" expression=") {&#xA;            case 0x01: // HCL Command&#xA;              //printf(&quot;[WARNING]: Unhandled incoming HCI command!\n&quot;);&#xA;              //TODO: Jakob - why does this even happen??&#xA;              break;&#xA;            case 0x02: // ACL Data&#xA;              ">
                        <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.6/@body/@actions.3"/>
                        <segments xsi:type="thingML:ExternExpression" expression=" = *((uint16_t*)&amp;buffer[1]) &amp; 0x0FFF;&#xA;              ">
                          <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.6/@body/@actions.4"/>
                          <segments xsi:type="thingML:ExternExpression" expression=" = (buffer[2] &amp; 0x30) >> 4;&#xA;              ">
                            <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.6/@body/@actions.5"/>
                            <segments xsi:type="thingML:ExternExpression" expression=" = (buffer[2] &amp; 0xC0) >> 6;&#xA;              ">
                              <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.6/@body/@actions.6"/>
                              <segments xsi:type="thingML:ExternExpression" expression=" = *((uint16_t*)&amp;buffer[3]);&#xA;              ">
                                <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.6/@body/@actions.7"/>
                                <segments xsi:type="thingML:ExternExpression" expression=" = &amp;buffer[5];&#xA;              "/>
                              </segments>
                            </segments>
                          </segments>
                        </segments>
                      </segments>
                    </segments>
                  </segments>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.11">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.13/@functions.6/@body/@actions.3"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.13/@functions.6/@body/@actions.4"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.13/@functions.6/@body/@actions.5"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.13/@functions.6/@body/@actions.6"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.13/@functions.6/@body/@actions.7"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;              break;&#xA;            case 0x03: // SCO Data&#xA;              printf(&quot;[WARNING]: Unhandled incoming SCO data!\n&quot;);&#xA;              break;&#xA;            case 0x04: // HCL Event &#xA;              ">
              <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.6/@body/@actions.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=" = buffer[1];&#xA;              ">
                <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.6/@body/@actions.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=" = buffer[2];&#xA;              ">
                  <segments xsi:type="thingML:PropertyReference" property="//@types.13/@functions.6/@body/@actions.7"/>
                  <segments xsi:type="thingML:ExternExpression" expression=" = &amp;buffer[3];&#xA;              "/>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.7">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.13/@functions.6/@body/@actions.1"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.13/@functions.6/@body/@actions.2"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.13/@functions.6/@body/@actions.7"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;              break;&#xA;            case 0xff: // Vendor Package&#xA;              printf(&quot;[WARNING]: Unhandled incoming vendor package!\n&quot;);&#xA;              break;&#xA;          }&#xA;        }&#xA;      "/>
          </action>
        </actions>
      </body>
    </functions>
  </types>
  <types xsi:type="thingML:Thing" name="BLEInitialiserMsgs" fragment="true">
    <messages name="DeviceInitialised">
      <parameters name="Address">
        <typeRef type="//@types.29"/>
      </parameters>
    </messages>
  </types>
  <types xsi:type="thingML:Thing" name="BLEInitialiser" fragment="true" includes="//@types.26 //@types.14">
    <ports xsi:type="thingML:RequiredPort" name="Initialiser" sends="//@types.26/@messages.0 //@types.26/@messages.1" receives="//@types.26/@messages.2 //@types.26/@messages.3 //@types.26/@messages.4 //@types.14/@messages.0"/>
  </types>
  <types xsi:type="thingML:Thing" name="BLEInitialiserImpl" includes="//@types.26 //@types.14 //@types.24">
    <ports xsi:type="thingML:ProvidedPort" name="Initialiser" sends="//@types.26/@messages.2 //@types.26/@messages.3 //@types.26/@messages.4 //@types.14/@messages.0" receives="//@types.26/@messages.0 //@types.26/@messages.1"/>
    <properties name="DeviceAddress">
      <typeRef type="//@types.29"/>
    </properties>
    <behaviour name="States" initial="//@types.16/@behaviour/@substate.0">
      <substate name="Closed">
        <internal>
          <event xsi:type="thingML:ReceiveMessage" port="//@types.16/@ports.0" message="//@types.26/@messages.1"/>
          <action xsi:type="thingML:SendAction" port="//@types.16/@ports.0" message="//@types.26/@messages.3"/>
        </internal>
        <outgoing target="//@types.16/@behaviour/@substate.1">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.16/@ports.0" message="//@types.26/@messages.0"/>
        </outgoing>
      </substate>
      <substate name="Opening">
        <entry xsi:type="thingML:ActionBlock">
          <actions xsi:type="thingML:PrintAction">
            <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Opening HCI socket...\n"/>
          </actions>
          <actions xsi:type="thingML:SendAction" port="//@types.24/@ports.0" message="//@types.23/@messages.0"/>
        </entry>
        <outgoing target="//@types.16/@behaviour/@substate.2">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.0" message="//@types.23/@messages.2"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:VariableAssignment" property="//@types.16/@properties.0">
              <expression xsi:type="thingML:EventReference" receiveMsg="//@types.16/@behaviour/@substate.1/@outgoing.0/@event" parameter="//@types.23/@messages.2/@parameters.0"/>
            </actions>
          </action>
        </outgoing>
        <outgoing target="//@types.16/@behaviour/@substate.5">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.24/@ports.0" message="//@types.23/@messages.3"/>
        </outgoing>
      </substate>
      <substate name="Initialise">
        <entry xsi:type="thingML:ActionBlock">
          <actions xsi:type="thingML:PrintAction">
            <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Initialising BLE Controller...\n"/>
          </actions>
          <actions xsi:type="thingML:SendAction" port="//@types.24/@ports.1" message="//@types.45/@messages.0"/>
        </entry>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.1"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:EqualsExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.16/@behaviour/@substate.2/@internal.0/@event" parameter="//@types.45/@messages.1/@parameters.1"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
          <action xsi:type="thingML:SendAction" port="//@types.24/@ports.1" message="//@types.45/@messages.3"/>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.4"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:EqualsExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.16/@behaviour/@substate.2/@internal.1/@event" parameter="//@types.45/@messages.4/@parameters.1"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
          <action xsi:type="thingML:SendAction" port="//@types.24/@ports.1" message="//@types.45/@messages.12"/>
        </internal>
        <outgoing target="//@types.16/@behaviour/@substate.5">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.1"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:GreaterExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.16/@behaviour/@substate.2/@outgoing.0/@event" parameter="//@types.45/@messages.1/@parameters.1"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
        </outgoing>
        <outgoing target="//@types.16/@behaviour/@substate.5">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.4"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:GreaterExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.16/@behaviour/@substate.2/@outgoing.1/@event" parameter="//@types.45/@messages.4/@parameters.1"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
        </outgoing>
        <outgoing target="//@types.16/@behaviour/@substate.3">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.13"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:EqualsExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.16/@behaviour/@substate.2/@outgoing.2/@event" parameter="//@types.45/@messages.13/@parameters.1"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
        </outgoing>
        <outgoing target="//@types.16/@behaviour/@substate.5">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.13"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:GreaterExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.16/@behaviour/@substate.2/@outgoing.3/@event" parameter="//@types.45/@messages.13/@parameters.1"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
        </outgoing>
        <outgoing target="//@types.16/@behaviour/@substate.5">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.24/@ports.0" message="//@types.23/@messages.3"/>
        </outgoing>
        <outgoing target="//@types.16/@behaviour/@substate.4">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.16/@ports.0" message="//@types.26/@messages.1"/>
        </outgoing>
      </substate>
      <substate name="Open">
        <entry xsi:type="thingML:ActionBlock">
          <actions xsi:type="thingML:PrintAction">
            <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: HCI Socket initialised...\n"/>
          </actions>
          <actions xsi:type="thingML:SendAction" port="//@types.16/@ports.0" message="//@types.26/@messages.2"/>
          <actions xsi:type="thingML:SendAction" port="//@types.16/@ports.0" message="//@types.14/@messages.0">
            <parameters xsi:type="thingML:PropertyReference" property="//@types.16/@properties.0"/>
          </actions>
        </entry>
        <outgoing target="//@types.16/@behaviour/@substate.5">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.24/@ports.0" message="//@types.23/@messages.3"/>
        </outgoing>
        <outgoing target="//@types.16/@behaviour/@substate.4">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.16/@ports.0" message="//@types.26/@messages.1"/>
        </outgoing>
      </substate>
      <substate name="Closing">
        <entry xsi:type="thingML:ActionBlock">
          <actions xsi:type="thingML:PrintAction">
            <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Closing HCI socket...\n"/>
          </actions>
          <actions xsi:type="thingML:SendAction" port="//@types.24/@ports.0" message="//@types.23/@messages.1"/>
        </entry>
        <outgoing target="//@types.16/@behaviour/@substate.0">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.24/@ports.0" message="//@types.23/@messages.3"/>
          <action xsi:type="thingML:SendAction" port="//@types.16/@ports.0" message="//@types.26/@messages.3"/>
        </outgoing>
      </substate>
      <substate name="Failure">
        <entry xsi:type="thingML:ActionBlock">
          <actions xsi:type="thingML:PrintAction">
            <msg xsi:type="thingML:StringLiteral" stringValue="[ERROR]: BLE_initialiser failed!\n"/>
          </actions>
          <actions xsi:type="thingML:SendAction" port="//@types.24/@ports.0" message="//@types.23/@messages.1"/>
          <actions xsi:type="thingML:SendAction" port="//@types.16/@ports.0" message="//@types.26/@messages.4"/>
        </entry>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" port="//@types.16/@ports.0" message="//@types.26/@messages.1"/>
          <action xsi:type="thingML:SendAction" port="//@types.16/@ports.0" message="//@types.26/@messages.4"/>
        </internal>
        <outgoing target="//@types.16/@behaviour/@substate.1">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.16/@ports.0" message="//@types.26/@messages.0"/>
        </outgoing>
      </substate>
    </behaviour>
  </types>
  <types xsi:type="thingML:Thing" name="BLEScannerMsgs" fragment="true">
    <messages name="ConnectableAdvertisement">
      <parameters name="AddressType">
        <typeRef type="//@types.34"/>
      </parameters>
      <parameters name="Address">
        <typeRef type="//@types.29"/>
      </parameters>
    </messages>
  </types>
  <types xsi:type="thingML:Thing" name="BLEScanner" fragment="true" includes="//@types.26 //@types.17">
    <ports xsi:type="thingML:RequiredPort" name="Scanner" sends="//@types.26/@messages.0 //@types.26/@messages.1" receives="//@types.26/@messages.2 //@types.26/@messages.3 //@types.26/@messages.4 //@types.17/@messages.0"/>
  </types>
  <types xsi:type="thingML:Thing" name="BLEScannerImpl" includes="//@types.26 //@types.17 //@types.24">
    <ports xsi:type="thingML:ProvidedPort" name="Scanner" sends="//@types.26/@messages.2 //@types.26/@messages.3 //@types.26/@messages.4 //@types.17/@messages.0" receives="//@types.26/@messages.0 //@types.26/@messages.1"/>
    <behaviour name="States" initial="//@types.19/@behaviour/@substate.0">
      <substate name="Standby">
        <internal>
          <event xsi:type="thingML:ReceiveMessage" port="//@types.19/@ports.0" message="//@types.26/@messages.1"/>
          <action xsi:type="thingML:SendAction" port="//@types.19/@ports.0" message="//@types.26/@messages.3"/>
        </internal>
        <outgoing target="//@types.19/@behaviour/@substate.1">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.19/@ports.0" message="//@types.26/@messages.0"/>
        </outgoing>
      </substate>
      <substate name="Initiating">
        <entry xsi:type="thingML:ActionBlock">
          <actions xsi:type="thingML:PrintAction">
            <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Setting scan parameters...\n"/>
          </actions>
          <actions xsi:type="thingML:LocalVariable" name="Type">
            <typeRef type="//@types.37"/>
            <init xsi:type="thingML:EnumLiteralRef" enum="//@types.37" literal="//@types.37/@literals.0"/>
          </actions>
          <actions xsi:type="thingML:LocalVariable" name="Interval">
            <typeRef type="//@types.2"/>
            <init xsi:type="thingML:ExternExpression" expression="0x0010"/>
          </actions>
          <actions xsi:type="thingML:LocalVariable" name="Window">
            <typeRef type="//@types.2"/>
            <init xsi:type="thingML:ExternExpression" expression="0x0010"/>
          </actions>
          <actions xsi:type="thingML:LocalVariable" name="OwnAddressType">
            <typeRef type="//@types.34"/>
            <init xsi:type="thingML:EnumLiteralRef" enum="//@types.34" literal="//@types.34/@literals.0"/>
          </actions>
          <actions xsi:type="thingML:LocalVariable" name="FilterPolicy">
            <typeRef type="//@types.38"/>
            <init xsi:type="thingML:EnumLiteralRef" enum="//@types.38" literal="//@types.38/@literals.0"/>
          </actions>
          <actions xsi:type="thingML:SendAction" port="//@types.24/@ports.1" message="//@types.45/@messages.23">
            <parameters xsi:type="thingML:PropertyReference" property="//@types.19/@behaviour/@substate.1/@entry/@actions.1"/>
            <parameters xsi:type="thingML:PropertyReference" property="//@types.19/@behaviour/@substate.1/@entry/@actions.2"/>
            <parameters xsi:type="thingML:PropertyReference" property="//@types.19/@behaviour/@substate.1/@entry/@actions.3"/>
            <parameters xsi:type="thingML:PropertyReference" property="//@types.19/@behaviour/@substate.1/@entry/@actions.4"/>
            <parameters xsi:type="thingML:PropertyReference" property="//@types.19/@behaviour/@substate.1/@entry/@actions.5"/>
          </actions>
        </entry>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.24"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:EqualsExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.19/@behaviour/@substate.1/@internal.0/@event" parameter="//@types.45/@messages.24/@parameters.1"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
          <action xsi:type="thingML:SendAction" port="//@types.24/@ports.1" message="//@types.45/@messages.25">
            <parameters xsi:type="thingML:ExternExpression" expression="0x01"/>
            <parameters xsi:type="thingML:ExternExpression" expression="0x00"/>
          </action>
        </internal>
        <outgoing target="//@types.19/@behaviour/@substate.4">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.24"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:GreaterExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.19/@behaviour/@substate.1/@outgoing.0/@event" parameter="//@types.45/@messages.24/@parameters.1"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
        </outgoing>
        <outgoing target="//@types.19/@behaviour/@substate.2">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.26"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:EqualsExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.19/@behaviour/@substate.1/@outgoing.1/@event" parameter="//@types.45/@messages.26/@parameters.1"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
        </outgoing>
        <outgoing target="//@types.19/@behaviour/@substate.4">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.26"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:GreaterExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.19/@behaviour/@substate.1/@outgoing.2/@event" parameter="//@types.45/@messages.26/@parameters.1"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
        </outgoing>
        <outgoing target="//@types.19/@behaviour/@substate.3">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.19/@ports.0" message="//@types.26/@messages.1"/>
        </outgoing>
      </substate>
      <substate name="Scanning">
        <entry xsi:type="thingML:ActionBlock">
          <actions xsi:type="thingML:PrintAction">
            <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Scanning for incoming connections...\n"/>
          </actions>
          <actions xsi:type="thingML:SendAction" port="//@types.19/@ports.0" message="//@types.26/@messages.2"/>
        </entry>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.22"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:OrExpression">
                <lhs xsi:type="thingML:EqualsExpression">
                  <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.19/@behaviour/@substate.2/@internal.0/@event" parameter="//@types.45/@messages.22/@parameters.0"/>
                  <rhs xsi:type="thingML:EnumLiteralRef" enum="//@types.39" literal="//@types.39/@literals.0"/>
                </lhs>
                <rhs xsi:type="thingML:EqualsExpression">
                  <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.19/@behaviour/@substate.2/@internal.0/@event" parameter="//@types.45/@messages.22/@parameters.0"/>
                  <rhs xsi:type="thingML:EnumLiteralRef" enum="//@types.39" literal="//@types.39/@literals.1"/>
                </rhs>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:SendAction" port="//@types.19/@ports.0" message="//@types.17/@messages.0">
                  <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.19/@behaviour/@substate.2/@internal.0/@event" parameter="//@types.45/@messages.22/@parameters.1"/>
                  <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.19/@behaviour/@substate.2/@internal.0/@event" parameter="//@types.45/@messages.22/@parameters.2"/>
                </actions>
              </action>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" port="//@types.19/@ports.0" message="//@types.26/@messages.0"/>
          <action xsi:type="thingML:SendAction" port="//@types.19/@ports.0" message="//@types.26/@messages.2"/>
        </internal>
        <outgoing target="//@types.19/@behaviour/@substate.3">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.19/@ports.0" message="//@types.26/@messages.1"/>
        </outgoing>
      </substate>
      <substate name="Stopping">
        <entry xsi:type="thingML:ActionBlock">
          <actions xsi:type="thingML:PrintAction">
            <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Stopping scan...\n"/>
          </actions>
          <actions xsi:type="thingML:SendAction" port="//@types.24/@ports.1" message="//@types.45/@messages.25">
            <parameters xsi:type="thingML:ExternExpression" expression="0x00"/>
            <parameters xsi:type="thingML:ExternExpression" expression="0x00"/>
          </actions>
        </entry>
        <outgoing target="//@types.19/@behaviour/@substate.0">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.26"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:EqualsExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.19/@behaviour/@substate.3/@outgoing.0/@event" parameter="//@types.45/@messages.26/@parameters.1"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
          <action xsi:type="thingML:SendAction" port="//@types.19/@ports.0" message="//@types.26/@messages.3"/>
        </outgoing>
        <outgoing target="//@types.19/@behaviour/@substate.4">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.26"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:GreaterExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.19/@behaviour/@substate.3/@outgoing.1/@event" parameter="//@types.45/@messages.26/@parameters.1"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
        </outgoing>
      </substate>
      <substate name="Failure">
        <entry xsi:type="thingML:ActionBlock">
          <actions xsi:type="thingML:PrintAction">
            <msg xsi:type="thingML:StringLiteral" stringValue="[ERROR]: BLE_scanner failed!\n"/>
          </actions>
          <actions xsi:type="thingML:SendAction" port="//@types.19/@ports.0" message="//@types.26/@messages.4"/>
        </entry>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" port="//@types.19/@ports.0" message="//@types.26/@messages.1"/>
          <action xsi:type="thingML:SendAction" port="//@types.19/@ports.0" message="//@types.26/@messages.4"/>
        </internal>
        <outgoing target="//@types.19/@behaviour/@substate.1">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.19/@ports.0" message="//@types.26/@messages.0"/>
        </outgoing>
      </substate>
    </behaviour>
  </types>
  <types xsi:type="thingML:Thing" name="BLEConnecterMsgs" fragment="true">
    <messages name="Connect"/>
    <messages name="ConnectTo">
      <parameters name="AddressType">
        <typeRef type="//@types.34"/>
      </parameters>
      <parameters name="Address">
        <typeRef type="//@types.29"/>
      </parameters>
      <parameters name="LongTermKey">
        <typeRef type="//@types.32"/>
      </parameters>
      <parameters name="EncryptedDiversifier">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="RandomNumber">
        <typeRef type="//@types.31"/>
      </parameters>
    </messages>
    <messages name="ConnectToU">
      <parameters name="AddressType">
        <typeRef type="//@types.34"/>
      </parameters>
      <parameters name="Address">
        <typeRef type="//@types.29"/>
      </parameters>
    </messages>
    <messages name="Connected">
      <parameters name="Handle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="AddressType">
        <typeRef type="//@types.34"/>
      </parameters>
      <parameters name="Address">
        <typeRef type="//@types.29"/>
      </parameters>
    </messages>
    <messages name="Encrypt"/>
    <messages name="Encrypted"/>
  </types>
  <types xsi:type="thingML:Thing" name="BLEConnecter" fragment="true" includes="//@types.26 //@types.20">
    <ports xsi:type="thingML:RequiredPort" name="Connecter" sends="//@types.20/@messages.0 //@types.20/@messages.1 //@types.20/@messages.2 //@types.26/@messages.1 //@types.20/@messages.4" receives="//@types.20/@messages.3 //@types.26/@messages.3 //@types.26/@messages.4 //@types.20/@messages.5"/>
  </types>
  <types xsi:type="thingML:Thing" name="BLEConnecterImpl" includes="//@types.26 //@types.20 //@types.24">
    <ports xsi:type="thingML:ProvidedPort" name="Connecter" sends="//@types.20/@messages.3 //@types.26/@messages.3 //@types.26/@messages.4 //@types.20/@messages.5" receives="//@types.20/@messages.0 //@types.20/@messages.1 //@types.20/@messages.2 //@types.26/@messages.1 //@types.20/@messages.4"/>
    <properties name="ConnectAddress">
      <typeRef type="//@types.4"/>
    </properties>
    <properties name="ConnectAddressBT">
      <typeRef type="//@types.29"/>
    </properties>
    <properties name="ConnectAddressType">
      <typeRef type="//@types.34"/>
    </properties>
    <properties name="LongTermKey">
      <typeRef type="//@types.32"/>
    </properties>
    <properties name="EncryptedDiversifier">
      <typeRef type="//@types.3"/>
    </properties>
    <properties name="RandomNumber">
      <typeRef type="//@types.31"/>
    </properties>
    <properties name="ConnectedHandle">
      <typeRef type="//@types.2"/>
    </properties>
    <properties name="ConnectedAddressType">
      <typeRef type="//@types.34"/>
    </properties>
    <properties name="ConnectedAddress">
      <typeRef type="//@types.29"/>
    </properties>
    <behaviour name="States" initial="//@types.22/@behaviour/@substate.0">
      <substate name="NotConnected">
        <internal>
          <event xsi:type="thingML:ReceiveMessage" port="//@types.22/@ports.0" message="//@types.26/@messages.1"/>
          <action xsi:type="thingML:SendAction" port="//@types.22/@ports.0" message="//@types.26/@messages.3"/>
        </internal>
        <outgoing target="//@types.22/@behaviour/@substate.1">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.22/@ports.0" message="//@types.20/@messages.0"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="str2ba(">
              <segments xsi:type="thingML:PropertyReference" property="//@types.22/@properties.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=",&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.22/@properties.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=");"/>
              </segments>
            </actions>
          </action>
        </outgoing>
        <outgoing target="//@types.22/@behaviour/@substate.1">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.22/@ports.0" message="//@types.20/@messages.2"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:VariableAssignment" property="//@types.22/@properties.2">
              <expression xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.0/@outgoing.1/@event" parameter="//@types.20/@messages.2/@parameters.0"/>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.22/@properties.1">
              <expression xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.0/@outgoing.1/@event" parameter="//@types.20/@messages.2/@parameters.1"/>
            </actions>
          </action>
        </outgoing>
        <outgoing target="//@types.22/@behaviour/@substate.1">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.22/@ports.0" message="//@types.20/@messages.1"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:VariableAssignment" property="//@types.22/@properties.2">
              <expression xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.0/@outgoing.2/@event" parameter="//@types.20/@messages.1/@parameters.0"/>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.22/@properties.1">
              <expression xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.0/@outgoing.2/@event" parameter="//@types.20/@messages.1/@parameters.1"/>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.22/@properties.3">
              <expression xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.0/@outgoing.2/@event" parameter="//@types.20/@messages.1/@parameters.2"/>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.22/@properties.4">
              <expression xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.0/@outgoing.2/@event" parameter="//@types.20/@messages.1/@parameters.3"/>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.22/@properties.5">
              <expression xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.0/@outgoing.2/@event" parameter="//@types.20/@messages.1/@parameters.4"/>
            </actions>
          </action>
        </outgoing>
      </substate>
      <substate name="Connecting">
        <entry xsi:type="thingML:ActionBlock">
          <actions xsi:type="thingML:LocalVariable" name="Interval">
            <typeRef type="//@types.2"/>
            <init xsi:type="thingML:ExternExpression" expression="0x0010"/>
          </actions>
          <actions xsi:type="thingML:LocalVariable" name="Window">
            <typeRef type="//@types.2"/>
            <init xsi:type="thingML:ExternExpression" expression="0x0010"/>
          </actions>
          <actions xsi:type="thingML:LocalVariable" name="FilterPolicy">
            <typeRef type="//@types.40"/>
            <init xsi:type="thingML:EnumLiteralRef" enum="//@types.40" literal="//@types.40/@literals.0"/>
          </actions>
          <actions xsi:type="thingML:LocalVariable" name="PeerAddressType">
            <typeRef type="//@types.34"/>
            <init xsi:type="thingML:PropertyReference" property="//@types.22/@properties.2"/>
          </actions>
          <actions xsi:type="thingML:LocalVariable" name="PeerAddress">
            <typeRef type="//@types.29"/>
            <init xsi:type="thingML:PropertyReference" property="//@types.22/@properties.1"/>
          </actions>
          <actions xsi:type="thingML:LocalVariable" name="OwnAddressType">
            <typeRef type="//@types.34"/>
            <init xsi:type="thingML:EnumLiteralRef" enum="//@types.34" literal="//@types.34/@literals.0"/>
          </actions>
          <actions xsi:type="thingML:LocalVariable" name="ConnIntervalMin">
            <typeRef type="//@types.2"/>
            <init xsi:type="thingML:ExternExpression" expression="0x0006"/>
          </actions>
          <actions xsi:type="thingML:LocalVariable" name="ConnIntervalMax">
            <typeRef type="//@types.2"/>
            <init xsi:type="thingML:ExternExpression" expression="0x000C"/>
          </actions>
          <actions xsi:type="thingML:LocalVariable" name="ConnLatency">
            <typeRef type="//@types.2"/>
            <init xsi:type="thingML:ExternExpression" expression="0x0000"/>
          </actions>
          <actions xsi:type="thingML:LocalVariable" name="SupervisionTimeout">
            <typeRef type="//@types.2"/>
            <init xsi:type="thingML:ExternExpression" expression="0x00c8"/>
          </actions>
          <actions xsi:type="thingML:LocalVariable" name="CELengthMin">
            <typeRef type="//@types.2"/>
            <init xsi:type="thingML:ExternExpression" expression="0x0004"/>
          </actions>
          <actions xsi:type="thingML:LocalVariable" name="CELengthMax">
            <typeRef type="//@types.2"/>
            <init xsi:type="thingML:ExternExpression" expression="0x0006"/>
          </actions>
          <actions xsi:type="thingML:SendAction" port="//@types.24/@ports.1" message="//@types.45/@messages.27">
            <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@behaviour/@substate.1/@entry/@actions.0"/>
            <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@behaviour/@substate.1/@entry/@actions.1"/>
            <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@behaviour/@substate.1/@entry/@actions.2"/>
            <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@behaviour/@substate.1/@entry/@actions.3"/>
            <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@behaviour/@substate.1/@entry/@actions.4"/>
            <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@behaviour/@substate.1/@entry/@actions.5"/>
            <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@behaviour/@substate.1/@entry/@actions.6"/>
            <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@behaviour/@substate.1/@entry/@actions.7"/>
            <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@behaviour/@substate.1/@entry/@actions.8"/>
            <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@behaviour/@substate.1/@entry/@actions.9"/>
            <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@behaviour/@substate.1/@entry/@actions.10"/>
            <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@behaviour/@substate.1/@entry/@actions.11"/>
          </actions>
        </entry>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.28"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:EqualsExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.1/@internal.0/@event" parameter="//@types.45/@messages.28/@parameters.1"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:PrintAction">
              <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Requested connection to "/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          char address[18];&#xA;          bzero(address, 18);&#xA;          ba2str(&amp;">
              <segments xsi:type="thingML:PropertyReference" property="//@types.22/@properties.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=", address);&#xA;          printf(&quot;%s&quot;, address);&#xA;        "/>
            </actions>
            <actions xsi:type="thingML:PrintAction">
              <msg xsi:type="thingML:StringLiteral" stringValue="...\n"/>
            </actions>
          </action>
        </internal>
        <outgoing target="//@types.22/@behaviour/@substate.6">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.28"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:GreaterExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.1/@outgoing.0/@event" parameter="//@types.45/@messages.28/@parameters.1"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
        </outgoing>
        <outgoing target="//@types.22/@behaviour/@substate.2">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.22/@ports.0" message="//@types.26/@messages.1"/>
        </outgoing>
        <outgoing target="//@types.22/@behaviour/@substate.3">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.31"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:EqualsExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.1/@outgoing.2/@event" parameter="//@types.45/@messages.31/@parameters.0"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:VariableAssignment" property="//@types.22/@properties.6">
              <expression xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.1/@outgoing.2/@event" parameter="//@types.45/@messages.31/@parameters.1"/>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.22/@properties.7">
              <expression xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.1/@outgoing.2/@event" parameter="//@types.45/@messages.31/@parameters.3"/>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.22/@properties.8">
              <expression xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.1/@outgoing.2/@event" parameter="//@types.45/@messages.31/@parameters.4"/>
            </actions>
            <actions xsi:type="thingML:PrintAction">
              <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Normal connection complete\n"/>
            </actions>
          </action>
        </outgoing>
        <outgoing target="//@types.22/@behaviour/@substate.6">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.31"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:GreaterExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.1/@outgoing.3/@event" parameter="//@types.45/@messages.31/@parameters.0"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
        </outgoing>
        <outgoing target="//@types.22/@behaviour/@substate.3">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.32"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:EqualsExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.1/@outgoing.4/@event" parameter="//@types.45/@messages.32/@parameters.0"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:VariableAssignment" property="//@types.22/@properties.6">
              <expression xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.1/@outgoing.4/@event" parameter="//@types.45/@messages.32/@parameters.1"/>
            </actions>
            <actions xsi:type="thingML:PrintAction">
              <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Enhanced connection complete\n"/>
            </actions>
          </action>
        </outgoing>
        <outgoing target="//@types.22/@behaviour/@substate.6">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.32"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:GreaterExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.1/@outgoing.5/@event" parameter="//@types.45/@messages.32/@parameters.0"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
        </outgoing>
      </substate>
      <substate name="CancelConnection">
        <entry xsi:type="thingML:SendAction" port="//@types.24/@ports.1" message="//@types.45/@messages.29"/>
        <outgoing target="//@types.22/@behaviour/@substate.6">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.30"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:GreaterExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.2/@outgoing.0/@event" parameter="//@types.45/@messages.30/@parameters.1"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
        </outgoing>
        <outgoing target="//@types.22/@behaviour/@substate.0">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.31"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:EqualsExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.2/@outgoing.1/@event" parameter="//@types.45/@messages.31/@parameters.0"/>
              <rhs xsi:type="thingML:ExternExpression" expression="0x02"/>
            </term>
          </guard>
          <action xsi:type="thingML:SendAction" port="//@types.22/@ports.0" message="//@types.26/@messages.3"/>
        </outgoing>
        <outgoing target="//@types.22/@behaviour/@substate.0">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.32"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:EqualsExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.2/@outgoing.2/@event" parameter="//@types.45/@messages.32/@parameters.0"/>
              <rhs xsi:type="thingML:ExternExpression" expression="0x02"/>
            </term>
          </guard>
          <action xsi:type="thingML:SendAction" port="//@types.22/@ports.0" message="//@types.26/@messages.3"/>
        </outgoing>
      </substate>
      <substate name="Connected">
        <entry xsi:type="thingML:ActionBlock">
          <actions xsi:type="thingML:PrintAction">
            <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Connected!\n"/>
          </actions>
          <actions xsi:type="thingML:SendAction" port="//@types.22/@ports.0" message="//@types.20/@messages.3">
            <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@properties.6"/>
            <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@properties.7"/>
            <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@properties.8"/>
          </actions>
        </entry>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" port="//@types.22/@ports.0" message="//@types.20/@messages.0"/>
          <action xsi:type="thingML:SendAction" port="//@types.22/@ports.0" message="//@types.20/@messages.3">
            <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@properties.6"/>
            <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@properties.7"/>
            <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@properties.8"/>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.22/@ports.0" message="//@types.20/@messages.4"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:SendAction" port="//@types.24/@ports.1" message="//@types.45/@messages.37">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@properties.6"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@properties.5"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@properties.4"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@properties.3"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.38"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:EqualsExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.3/@internal.2/@event" parameter="//@types.45/@messages.38/@parameters.1"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
          <action xsi:type="thingML:PrintAction">
            <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Requested encryption...\n"/>
          </action>
        </internal>
        <outgoing target="//@types.22/@behaviour/@substate.6">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.38"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:GreaterExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.3/@outgoing.0/@event" parameter="//@types.45/@messages.38/@parameters.1"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
          <action xsi:type="thingML:PrintAction">
            <msg xsi:type="thingML:StringLiteral" stringValue="[ERROR]: Start encryption failed!\n"/>
          </action>
        </outgoing>
        <outgoing target="//@types.22/@behaviour/@substate.4">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.10"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:AndExpression">
              <lhs xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.3/@outgoing.1/@event" parameter="//@types.45/@messages.10/@parameters.0"/>
                <rhs xsi:type="thingML:IntegerLiteral"/>
              </lhs>
              <rhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.3/@outgoing.1/@event" parameter="//@types.45/@messages.10/@parameters.2"/>
            </term>
          </guard>
        </outgoing>
        <outgoing target="//@types.22/@behaviour/@substate.6">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.10"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:GreaterExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.3/@outgoing.2/@event" parameter="//@types.45/@messages.10/@parameters.0"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
          <action xsi:type="thingML:PrintAction">
            <msg xsi:type="thingML:StringLiteral" stringValue="[ERROR]: Encryption failed!\n"/>
          </action>
        </outgoing>
        <outgoing target="//@types.22/@behaviour/@substate.0">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.9"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:EqualsExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.3/@outgoing.3/@event" parameter="//@types.45/@messages.9/@parameters.0"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:PrintAction">
              <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Connection closed by remote.\n"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.22/@ports.0" message="//@types.26/@messages.3"/>
          </action>
        </outgoing>
        <outgoing target="//@types.22/@behaviour/@substate.6">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.9"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:GreaterExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.3/@outgoing.4/@event" parameter="//@types.45/@messages.9/@parameters.0"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
        </outgoing>
        <outgoing target="//@types.22/@behaviour/@substate.5">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.22/@ports.0" message="//@types.26/@messages.1"/>
        </outgoing>
      </substate>
      <substate name="Encrypted">
        <entry xsi:type="thingML:ActionBlock">
          <actions xsi:type="thingML:PrintAction">
            <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Connection encrypted!\n"/>
          </actions>
          <actions xsi:type="thingML:SendAction" port="//@types.22/@ports.0" message="//@types.20/@messages.5"/>
        </entry>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" port="//@types.22/@ports.0" message="//@types.20/@messages.0"/>
          <action xsi:type="thingML:SendAction" port="//@types.22/@ports.0" message="//@types.20/@messages.3">
            <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@properties.6"/>
            <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@properties.7"/>
            <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@properties.8"/>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" port="//@types.22/@ports.0" message="//@types.20/@messages.4"/>
          <action xsi:type="thingML:SendAction" port="//@types.22/@ports.0" message="//@types.20/@messages.5"/>
        </internal>
        <outgoing target="//@types.22/@behaviour/@substate.3">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.10"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:AndExpression">
              <lhs xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.4/@outgoing.0/@event" parameter="//@types.45/@messages.10/@parameters.0"/>
                <rhs xsi:type="thingML:IntegerLiteral"/>
              </lhs>
              <rhs xsi:type="thingML:NotExpression">
                <term xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.4/@outgoing.0/@event" parameter="//@types.45/@messages.10/@parameters.2"/>
              </rhs>
            </term>
          </guard>
        </outgoing>
        <outgoing target="//@types.22/@behaviour/@substate.6">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.10"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:GreaterExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.4/@outgoing.1/@event" parameter="//@types.45/@messages.10/@parameters.0"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
          <action xsi:type="thingML:PrintAction">
            <msg xsi:type="thingML:StringLiteral" stringValue="[ERROR]: Encryption failed!\n"/>
          </action>
        </outgoing>
        <outgoing target="//@types.22/@behaviour/@substate.0">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.9"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:EqualsExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.4/@outgoing.2/@event" parameter="//@types.45/@messages.9/@parameters.0"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:PrintAction">
              <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Connection closed by remote.\n"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.22/@ports.0" message="//@types.26/@messages.3"/>
          </action>
        </outgoing>
        <outgoing target="//@types.22/@behaviour/@substate.6">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.9"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:GreaterExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.4/@outgoing.3/@event" parameter="//@types.45/@messages.9/@parameters.0"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
        </outgoing>
        <outgoing target="//@types.22/@behaviour/@substate.5">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.22/@ports.0" message="//@types.26/@messages.1"/>
        </outgoing>
      </substate>
      <substate name="Disconnecting">
        <entry xsi:type="thingML:SendAction" port="//@types.24/@ports.1" message="//@types.45/@messages.7">
          <parameters xsi:type="thingML:PropertyReference" property="//@types.22/@properties.6"/>
          <parameters xsi:type="thingML:EnumLiteralRef" enum="//@types.42" literal="//@types.42/@literals.1"/>
        </entry>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.8"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:EqualsExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.5/@internal.0/@event" parameter="//@types.45/@messages.8/@parameters.1"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:PrintAction">
              <msg xsi:type="thingML:StringLiteral" stringValue="[INFO]: Closing connection...\n"/>
            </actions>
          </action>
        </internal>
        <outgoing target="//@types.22/@behaviour/@substate.6">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.8"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:GreaterExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.5/@outgoing.0/@event" parameter="//@types.45/@messages.8/@parameters.1"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
        </outgoing>
        <outgoing target="//@types.22/@behaviour/@substate.0">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.9"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:EqualsExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.5/@outgoing.1/@event" parameter="//@types.45/@messages.9/@parameters.0"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
          <action xsi:type="thingML:SendAction" port="//@types.22/@ports.0" message="//@types.26/@messages.3"/>
        </outgoing>
        <outgoing target="//@types.22/@behaviour/@substate.6">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.24/@ports.2" message="//@types.45/@messages.9"/>
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:GreaterExpression">
              <lhs xsi:type="thingML:EventReference" receiveMsg="//@types.22/@behaviour/@substate.5/@outgoing.2/@event" parameter="//@types.45/@messages.9/@parameters.0"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
        </outgoing>
      </substate>
      <substate name="Failure">
        <entry xsi:type="thingML:ActionBlock">
          <actions xsi:type="thingML:PrintAction">
            <msg xsi:type="thingML:StringLiteral" stringValue="[ERROR]: BLE_connecter failed :(\n"/>
          </actions>
          <actions xsi:type="thingML:SendAction" port="//@types.22/@ports.0" message="//@types.26/@messages.4"/>
          <actions xsi:type="thingML:SendAction" port="//@types.22/@ports.0" message="//@types.26/@messages.3"/>
        </entry>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" port="//@types.22/@ports.0" message="//@types.26/@messages.1"/>
          <action xsi:type="thingML:SendAction" port="//@types.22/@ports.0" message="//@types.26/@messages.4"/>
        </internal>
        <outgoing target="//@types.22/@behaviour/@substate.1">
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.22/@ports.0" message="//@types.20/@messages.0"/>
        </outgoing>
      </substate>
    </behaviour>
  </types>
  <types xsi:type="thingML:Thing" name="HCISocketMsgs" fragment="true">
    <messages name="Open"/>
    <messages name="Close"/>
    <messages name="Opened">
      <parameters name="Address">
        <typeRef type="//@types.29"/>
      </parameters>
    </messages>
    <messages name="Closed"/>
  </types>
  <types xsi:type="thingML:Thing" name="HCISocket" fragment="true" includes="//@types.23 //@types.45 //@types.46 //@types.48">
    <ports xsi:type="thingML:RequiredPort" name="Socket" sends="//@types.23/@messages.0 //@types.23/@messages.1" receives="//@types.23/@messages.2 //@types.23/@messages.3"/>
    <ports xsi:type="thingML:RequiredPort" name="HCICommands" sends="//@types.45/@messages.0 //@types.45/@messages.2 //@types.45/@messages.3 //@types.45/@messages.5 //@types.45/@messages.7 //@types.45/@messages.11 //@types.45/@messages.12 //@types.45/@messages.14 //@types.45/@messages.16 //@types.45/@messages.18 //@types.45/@messages.20 //@types.45/@messages.23 //@types.45/@messages.25 //@types.45/@messages.27 //@types.45/@messages.29 //@types.45/@messages.33 //@types.45/@messages.35 //@types.45/@messages.37"/>
    <ports xsi:type="thingML:RequiredPort" name="HCIEvents" receives="//@types.45/@messages.1 //@types.45/@messages.4 //@types.45/@messages.6 //@types.45/@messages.8 //@types.45/@messages.9 //@types.45/@messages.13 //@types.45/@messages.15 //@types.45/@messages.17 //@types.45/@messages.19 //@types.45/@messages.21 //@types.45/@messages.24 //@types.45/@messages.26 //@types.45/@messages.22 //@types.45/@messages.28 //@types.45/@messages.30 //@types.45/@messages.31 //@types.45/@messages.32 //@types.45/@messages.34 //@types.45/@messages.36 //@types.45/@messages.10 //@types.45/@messages.38"/>
  </types>
  <types xsi:type="thingML:Thing" name="HCISocketProxy" fragment="true" includes="//@types.23 //@types.45 //@types.47 //@types.49">
    <ports xsi:type="thingML:ProvidedPort" name="Socket" sends="//@types.23/@messages.2 //@types.23/@messages.3" receives="//@types.23/@messages.0 //@types.23/@messages.1"/>
    <ports xsi:type="thingML:ProvidedPort" name="Commands" receives="//@types.45/@messages.0 //@types.45/@messages.2 //@types.45/@messages.3 //@types.45/@messages.5 //@types.45/@messages.7 //@types.45/@messages.11 //@types.45/@messages.12 //@types.45/@messages.14 //@types.45/@messages.16 //@types.45/@messages.18 //@types.45/@messages.20 //@types.45/@messages.23 //@types.45/@messages.25 //@types.45/@messages.27 //@types.45/@messages.29 //@types.45/@messages.33 //@types.45/@messages.35 //@types.45/@messages.37"/>
    <ports xsi:type="thingML:ProvidedPort" name="Events" sends="//@types.45/@messages.1 //@types.45/@messages.4 //@types.45/@messages.6 //@types.45/@messages.8 //@types.45/@messages.9 //@types.45/@messages.13 //@types.45/@messages.15 //@types.45/@messages.17 //@types.45/@messages.19 //@types.45/@messages.21 //@types.45/@messages.24 //@types.45/@messages.26 //@types.45/@messages.22 //@types.45/@messages.28 //@types.45/@messages.30 //@types.45/@messages.31 //@types.45/@messages.32 //@types.45/@messages.34 //@types.45/@messages.36 //@types.45/@messages.10 //@types.45/@messages.38"/>
    <properties name="Device">
      <typeRef type="//@types.4"/>
    </properties>
    <functions name="OpenSocket" abstract="true">
      <annotations name="abstract" value="true"/>
      <annotations name="SuppressWarnings" value="Call"/>
    </functions>
    <functions name="CloseSocket" abstract="true">
      <annotations name="abstract" value="true"/>
      <annotations name="SuppressWarnings" value="Call"/>
    </functions>
    <functions name="SocketIsOpen" abstract="true">
      <annotations name="abstract" value="true"/>
      <annotations name="SuppressWarnings" value="Call"/>
      <typeRef type="//@types.1"/>
    </functions>
    <functions name="GetBTAddress" abstract="true">
      <annotations name="abstract" value="true"/>
      <annotations name="SuppressWarnings" value="Call"/>
      <typeRef type="//@types.29"/>
    </functions>
    <functions name="SendCommand" abstract="true">
      <annotations name="abstract" value="true"/>
      <annotations name="SuppressWarnings" value="Call"/>
      <parameters name="Group">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Command">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Length">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Data">
        <typeRef type="//@types.5"/>
      </parameters>
    </functions>
    <functions name="SendACLData" abstract="true">
      <annotations name="abstract" value="true"/>
      <annotations name="SuppressWarnings" value="Call"/>
      <parameters name="Handle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="CID">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Length">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Data">
        <typeRef type="//@types.5"/>
      </parameters>
    </functions>
    <functions name="printBuffer">
      <parameters name="Data">
        <typeRef type="//@types.5"/>
      </parameters>
      <parameters name="Length">
        <typeRef type="//@types.3"/>
      </parameters>
      <body xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:ExternStatement" statement="&#xA;  &#x9;&#x9;int i = 0;&#xA;  &#x9;&#x9;for (i=0; i&lt;">
          <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.6/@parameters.1"/>
          <segments xsi:type="thingML:ExternExpression" expression=";i++) {&#xA;  &#x9;&#x9;&#x9;printf(&quot;%02x&quot;, ">
            <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.6/@parameters.0"/>
            <segments xsi:type="thingML:ExternExpression" expression="[i]);&#xA;  &#x9;&#x9;&#x9;if (i&lt;">
              <segments xsi:type="thingML:MinusExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.6/@parameters.1"/>
                <rhs xsi:type="thingML:IntegerLiteral" intValue="1"/>
              </segments>
              <segments xsi:type="thingML:ExternExpression" expression=") printf(&quot; &quot;);&#xA;  &#x9;&#x9;}&#xA;  &#x9;&#x9;&#xA;  &#x9;"/>
            </segments>
          </segments>
        </actions>
      </body>
    </functions>
    <functions name="DecodeEvent">
      <parameters name="Event">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Length">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Data">
        <typeRef type="//@types.5"/>
      </parameters>
      <body xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:LocalVariable" name="handled">
          <typeRef type="//@types.6"/>
          <init xsi:type="thingML:BooleanLiteral"/>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x05"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="Status">
              <typeRef type="//@types.1"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[0]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="ConnectionHandle">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="(*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1]) &amp; 0x0FFF)"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="Reason">
              <typeRef type="//@types.42"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[3]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.7/@body/@actions.0">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.25/@ports.2" message="//@types.45/@messages.9">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@body/@actions.1/@action/@actions.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@body/@actions.1/@action/@actions.1"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@body/@actions.1/@action/@actions.2"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x08"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="Status">
              <typeRef type="//@types.1"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[0]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="ConnectionHandle">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="(*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1]) &amp; 0x0FFF)"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="Enabled">
              <typeRef type="//@types.1"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[3]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.7/@body/@actions.0">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.25/@ports.2" message="//@types.45/@messages.10">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@body/@actions.2/@action/@actions.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@body/@actions.2/@action/@actions.1"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@body/@actions.2/@action/@actions.2"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x0E"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="NumberAllowedCommandPackets">
              <typeRef type="//@types.1"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[0]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="Group">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="(*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1]) >> 10)"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="Command">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="(*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1]) &amp; 0x03FF)"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="ReturnData">
              <typeRef type="//@types.5"/>
              <init xsi:type="thingML:ExternExpression" expression="&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[3]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.7/@body/@actions.0">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.8">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@body/@actions.3/@action/@actions.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@body/@actions.3/@action/@actions.1"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@body/@actions.3/@action/@actions.2"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@body/@actions.3/@action/@actions.3"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x0F"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="Status">
              <typeRef type="//@types.1"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[0]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="NumberAllowedCommandPackets">
              <typeRef type="//@types.1"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="Group">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="(*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[2]) >> 10)"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="Command">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="(*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[2]) &amp; 0x03FF)"/>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.7/@body/@actions.0">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.9">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@body/@actions.4/@action/@actions.1"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@body/@actions.4/@action/@actions.2"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@body/@actions.4/@action/@actions.3"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@body/@actions.4/@action/@actions.0"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x3E"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="SubEventCode">
              <typeRef type="//@types.1"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[0]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="NewLength">
              <typeRef type="//@types.1"/>
              <init xsi:type="thingML:MinusExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.1"/>
                <rhs xsi:type="thingML:IntegerLiteral" intValue="1"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="NewData">
              <typeRef type="//@types.5"/>
              <init xsi:type="thingML:ExternExpression" expression="&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.7/@body/@actions.0">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.10">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@body/@actions.5/@action/@actions.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@body/@actions.5/@action/@actions.1"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@body/@actions.5/@action/@actions.2"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:NotExpression">
            <term xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@body/@actions.0"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:PrintAction">
              <msg xsi:type="thingML:StringLiteral" stringValue="[ERROR] Unhandled DecodeEvent \n"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="printf(&quot;  EVENT=0x%02x, LENGTH=0x%02x, DATA=&quot;, ">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=", ">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=" );"/>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.6">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.2"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.7/@parameters.1"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="printf(&quot;\n&quot;);"/>
          </action>
        </actions>
      </body>
    </functions>
    <functions name="OnCommandCompletedEvent">
      <parameters name="NumberAllowedCommandPackets">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Group">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Command">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Data">
        <typeRef type="//@types.5"/>
      </parameters>
      <body xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:LocalVariable" name="handled">
          <typeRef type="//@types.6"/>
          <init xsi:type="thingML:BooleanLiteral"/>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.1"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x03"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.2"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x0003"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:LocalVariable" name="Status">
                  <typeRef type="//@types.1"/>
                  <init xsi:type="thingML:ExternExpression" expression="">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.3"/>
                    <segments xsi:type="thingML:ExternExpression" expression="[0]"/>
                  </init>
                </actions>
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.8/@body/@actions.0">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.25/@ports.2" message="//@types.45/@messages.1">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@body/@actions.1/@action/@actions.0/@action/@actions.0"/>
                </actions>
              </action>
            </actions>
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.2"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x0001"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:LocalVariable" name="Status">
                  <typeRef type="//@types.1"/>
                  <init xsi:type="thingML:ExternExpression" expression="">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.3"/>
                    <segments xsi:type="thingML:ExternExpression" expression="[0]"/>
                  </init>
                </actions>
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.8/@body/@actions.0">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.25/@ports.2" message="//@types.45/@messages.4">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@body/@actions.1/@action/@actions.1/@action/@actions.0"/>
                </actions>
              </action>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.1"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x08"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.2"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x0001"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:LocalVariable" name="Status">
                  <typeRef type="//@types.1"/>
                  <init xsi:type="thingML:ExternExpression" expression="">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.3"/>
                    <segments xsi:type="thingML:ExternExpression" expression="[0]"/>
                  </init>
                </actions>
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.8/@body/@actions.0">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.25/@ports.2" message="//@types.45/@messages.13">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@body/@actions.2/@action/@actions.0/@action/@actions.0"/>
                </actions>
              </action>
            </actions>
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.2"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x0006"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:LocalVariable" name="Status">
                  <typeRef type="//@types.1"/>
                  <init xsi:type="thingML:ExternExpression" expression="">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.3"/>
                    <segments xsi:type="thingML:ExternExpression" expression="[0]"/>
                  </init>
                </actions>
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.8/@body/@actions.0">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.25/@ports.2" message="//@types.45/@messages.15">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@body/@actions.2/@action/@actions.1/@action/@actions.0"/>
                </actions>
              </action>
            </actions>
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.2"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x0008"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:LocalVariable" name="Status">
                  <typeRef type="//@types.1"/>
                  <init xsi:type="thingML:ExternExpression" expression="">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.3"/>
                    <segments xsi:type="thingML:ExternExpression" expression="[0]"/>
                  </init>
                </actions>
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.8/@body/@actions.0">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.25/@ports.2" message="//@types.45/@messages.19">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@body/@actions.2/@action/@actions.2/@action/@actions.0"/>
                </actions>
              </action>
            </actions>
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.2"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x0009"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:LocalVariable" name="Status">
                  <typeRef type="//@types.1"/>
                  <init xsi:type="thingML:ExternExpression" expression="">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.3"/>
                    <segments xsi:type="thingML:ExternExpression" expression="[0]"/>
                  </init>
                </actions>
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.8/@body/@actions.0">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.25/@ports.2" message="//@types.45/@messages.21">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@body/@actions.2/@action/@actions.3/@action/@actions.0"/>
                </actions>
              </action>
            </actions>
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.2"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x000A"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:LocalVariable" name="Status">
                  <typeRef type="//@types.1"/>
                  <init xsi:type="thingML:ExternExpression" expression="">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.3"/>
                    <segments xsi:type="thingML:ExternExpression" expression="[0]"/>
                  </init>
                </actions>
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.8/@body/@actions.0">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.25/@ports.2" message="//@types.45/@messages.17">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@body/@actions.2/@action/@actions.4/@action/@actions.0"/>
                </actions>
              </action>
            </actions>
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.2"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x000B"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:LocalVariable" name="Status">
                  <typeRef type="//@types.1"/>
                  <init xsi:type="thingML:ExternExpression" expression="">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.3"/>
                    <segments xsi:type="thingML:ExternExpression" expression="[0]"/>
                  </init>
                </actions>
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.8/@body/@actions.0">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.25/@ports.2" message="//@types.45/@messages.24">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@body/@actions.2/@action/@actions.5/@action/@actions.0"/>
                </actions>
              </action>
            </actions>
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.2"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x000C"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:LocalVariable" name="Status">
                  <typeRef type="//@types.1"/>
                  <init xsi:type="thingML:ExternExpression" expression="">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.3"/>
                    <segments xsi:type="thingML:ExternExpression" expression="[0]"/>
                  </init>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.25/@ports.2" message="//@types.45/@messages.26">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@body/@actions.2/@action/@actions.6/@action/@actions.0"/>
                </actions>
              </action>
            </actions>
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.2"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x000E"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:LocalVariable" name="Status">
                  <typeRef type="//@types.1"/>
                  <init xsi:type="thingML:ExternExpression" expression="">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.3"/>
                    <segments xsi:type="thingML:ExternExpression" expression="[0]"/>
                  </init>
                </actions>
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.8/@body/@actions.0">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.25/@ports.2" message="//@types.45/@messages.30">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@body/@actions.2/@action/@actions.7/@action/@actions.0"/>
                </actions>
              </action>
            </actions>
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.2"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x0018"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:LocalVariable" name="Status">
                  <typeRef type="//@types.1"/>
                  <init xsi:type="thingML:ExternExpression" expression="">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.3"/>
                    <segments xsi:type="thingML:ExternExpression" expression="[0]"/>
                  </init>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="Random">
                  <typeRef type="//@types.31"/>
                  <init xsi:type="thingML:ExternExpression" expression="*((ble_random_part_t*)&amp;">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.3"/>
                    <segments xsi:type="thingML:ExternExpression" expression="[1])"/>
                  </init>
                </actions>
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.8/@body/@actions.0">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.25/@ports.2" message="//@types.45/@messages.34">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@body/@actions.2/@action/@actions.8/@action/@actions.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@body/@actions.2/@action/@actions.8/@action/@actions.1"/>
                </actions>
              </action>
            </actions>
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.2"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x0017"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:LocalVariable" name="Status">
                  <typeRef type="//@types.1"/>
                  <init xsi:type="thingML:ExternExpression" expression="">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.3"/>
                    <segments xsi:type="thingML:ExternExpression" expression="[0]"/>
                  </init>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="EncryptedData">
                  <typeRef type="//@types.32"/>
                  <init xsi:type="thingML:ExternExpression" expression="*((ble_random_number_t*)&amp;">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.3"/>
                    <segments xsi:type="thingML:ExternExpression" expression="[1])"/>
                  </init>
                </actions>
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.8/@body/@actions.0">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.25/@ports.2" message="//@types.45/@messages.36">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@body/@actions.2/@action/@actions.9/@action/@actions.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@body/@actions.2/@action/@actions.9/@action/@actions.1"/>
                </actions>
              </action>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:NotExpression">
            <term xsi:type="thingML:PropertyReference" property="//@types.25/@functions.8/@body/@actions.0"/>
          </condition>
          <action xsi:type="thingML:PrintAction">
            <msg xsi:type="thingML:StringLiteral" stringValue="[ERROR] Unhandled OnCommandCompletedEvent \n"/>
          </action>
        </actions>
      </body>
    </functions>
    <functions name="OnCommandStatusEvent">
      <parameters name="NumberAllowedCommandPackets">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Group">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Command">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Status">
        <typeRef type="//@types.1"/>
      </parameters>
      <body xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:LocalVariable" name="handled">
          <typeRef type="//@types.6"/>
          <init xsi:type="thingML:BooleanLiteral"/>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.9/@parameters.1"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x01"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.9/@parameters.2"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x0006"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.9/@body/@actions.0">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.25/@ports.2" message="//@types.45/@messages.8">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.9/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.9/@parameters.3"/>
                </actions>
              </action>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.9/@parameters.1"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x08"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.9/@parameters.2"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x000D"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.9/@body/@actions.0">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.25/@ports.2" message="//@types.45/@messages.28">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.9/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.9/@parameters.3"/>
                </actions>
              </action>
            </actions>
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.9/@parameters.2"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x0019"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.9/@body/@actions.0">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.25/@ports.2" message="//@types.45/@messages.38">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.9/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.9/@parameters.3"/>
                </actions>
              </action>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:NotExpression">
            <term xsi:type="thingML:PropertyReference" property="//@types.25/@functions.9/@body/@actions.0"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:PrintAction">
              <msg xsi:type="thingML:StringLiteral" stringValue="[ERROR] Unhandled OnCommandStatusEvent \n"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="printf(&quot;  Group=0x%04x, Command=0x%04x, NumberAllowedCommandPackets=0x%02x, Status=0x%02x\n&quot;, ">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.9/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=", ">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.9/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=", ">
                  <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.9/@parameters.0"/>
                  <segments xsi:type="thingML:ExternExpression" expression=", ">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.9/@parameters.3"/>
                    <segments xsi:type="thingML:ExternExpression" expression=" );"/>
                  </segments>
                </segments>
              </segments>
            </actions>
          </action>
        </actions>
      </body>
    </functions>
    <functions name="OnLEMetaEvent">
      <parameters name="SubEventCode">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Length">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Data">
        <typeRef type="//@types.5"/>
      </parameters>
      <body xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:LocalVariable" name="handled">
          <typeRef type="//@types.6"/>
          <init xsi:type="thingML:BooleanLiteral"/>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@parameters.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x01"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="evt_le_connection_complete* data = &amp;">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@parameters.2"/>
              <segments xsi:type="thingML:ExternExpression" expression="[0];"/>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="Status">
              <typeRef type="//@types.1"/>
              <init xsi:type="thingML:ExternExpression" expression="data->status"/>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="ConnectionHandle">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="data->handle"/>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="Role">
              <typeRef type="//@types.41"/>
              <init xsi:type="thingML:ExternExpression" expression="data->role"/>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="PeerAddressType">
              <typeRef type="//@types.34"/>
              <init xsi:type="thingML:ExternExpression" expression="data->peer_bdaddr_type"/>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="PeerAddress">
              <typeRef type="//@types.29"/>
              <init xsi:type="thingML:ExternExpression" expression="data->peer_bdaddr"/>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="ConnInterval">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="data->interval"/>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="ConnLatency">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="data->latency"/>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="SupervisionTimeout">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="data->supervision_timeout"/>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="MasterClockAccuracy">
              <typeRef type="//@types.1"/>
              <init xsi:type="thingML:ExternExpression" expression="data->master_clock_accuracy"/>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.10/@body/@actions.0">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.25/@ports.2" message="//@types.45/@messages.31">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.1/@action/@actions.1"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.1/@action/@actions.2"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.1/@action/@actions.3"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.1/@action/@actions.4"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.1/@action/@actions.5"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.1/@action/@actions.6"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.1/@action/@actions.7"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.1/@action/@actions.8"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.1/@action/@actions.9"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@parameters.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x02"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="NumReports">
              <typeRef type="//@types.1"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[0]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="Count">
              <typeRef type="//@types.1"/>
              <init xsi:type="thingML:IntegerLiteral"/>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="Index">
              <typeRef type="//@types.1"/>
              <init xsi:type="thingML:IntegerLiteral" intValue="1"/>
            </actions>
            <actions xsi:type="thingML:LoopAction">
              <condition xsi:type="thingML:LowerExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.2/@action/@actions.1"/>
                <rhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.2/@action/@actions.0"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:ExternStatement" statement="le_advertising_info* data = &amp;">
                  <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@parameters.2"/>
                  <segments xsi:type="thingML:ExternExpression" expression="[">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.2/@action/@actions.2"/>
                    <segments xsi:type="thingML:ExternExpression" expression="];"/>
                  </segments>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="Type">
                  <typeRef type="//@types.39"/>
                  <init xsi:type="thingML:ExternExpression" expression="data->evt_type"/>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="AddressType">
                  <typeRef type="//@types.34"/>
                  <init xsi:type="thingML:ExternExpression" expression="data->bdaddr_type"/>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="Address">
                  <typeRef type="//@types.29"/>
                  <init xsi:type="thingML:ExternExpression" expression="data->bdaddr"/>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="ReportLength">
                  <typeRef type="//@types.1"/>
                  <init xsi:type="thingML:ExternExpression" expression="data->length"/>
                </actions>
                <actions xsi:type="thingML:LocalVariable" name="ReportData">
                  <typeRef type="//@types.30"/>
                </actions>
                <actions xsi:type="thingML:ExternStatement" statement="memcpy(&amp;">
                  <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.2/@action/@actions.3/@action/@actions.5"/>
                  <segments xsi:type="thingML:ExternExpression" expression=", &amp;(data->data), ">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.2/@action/@actions.3/@action/@actions.4"/>
                    <segments xsi:type="thingML:ExternExpression" expression=");"/>
                  </segments>
                </actions>
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.10/@body/@actions.0">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.25/@ports.2" message="//@types.45/@messages.22">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.2/@action/@actions.3/@action/@actions.1"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.2/@action/@actions.3/@action/@actions.2"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.2/@action/@actions.3/@action/@actions.3"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.2/@action/@actions.3/@action/@actions.4"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.2/@action/@actions.3/@action/@actions.5"/>
                </actions>
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.10/@body/@actions.2/@action/@actions.2">
                  <expression xsi:type="thingML:PlusExpression">
                    <lhs xsi:type="thingML:PlusExpression">
                      <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.2/@action/@actions.2"/>
                      <rhs xsi:type="thingML:IntegerLiteral" intValue="9"/>
                    </lhs>
                    <rhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.2/@action/@actions.3/@action/@actions.4"/>
                  </expression>
                </actions>
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.10/@body/@actions.2/@action/@actions.1">
                  <expression xsi:type="thingML:PlusExpression">
                    <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.2/@action/@actions.1"/>
                    <rhs xsi:type="thingML:IntegerLiteral" intValue="1"/>
                  </expression>
                </actions>
              </action>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@parameters.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x0A"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="Status">
              <typeRef type="//@types.1"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[0]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="ConnectionHandle">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="Role">
              <typeRef type="//@types.41"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[3]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="PeerAddressType">
              <typeRef type="//@types.34"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[4]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="PeerAddress">
              <typeRef type="//@types.29"/>
              <init xsi:type="thingML:ExternExpression" expression="*((bdaddr_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[5])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="LocalResolvablePrivateAddress">
              <typeRef type="//@types.29"/>
              <init xsi:type="thingML:ExternExpression" expression="*((bdaddr_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[11])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="PeerResolvablePrivateAddress">
              <typeRef type="//@types.29"/>
              <init xsi:type="thingML:ExternExpression" expression="*((bdaddr_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[17])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="ConnInterval">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[23])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="ConnLatency">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[25])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="SupervisionTimeout">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[27])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="MasterClockAccuracy">
              <typeRef type="//@types.1"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[29]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.10/@body/@actions.0">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.25/@ports.2" message="//@types.45/@messages.32">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.3/@action/@actions.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.3/@action/@actions.1"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.3/@action/@actions.2"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.3/@action/@actions.3"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.3/@action/@actions.4"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.3/@action/@actions.5"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.3/@action/@actions.6"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.3/@action/@actions.7"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.3/@action/@actions.8"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.3/@action/@actions.9"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.3/@action/@actions.10"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:NotExpression">
            <term xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@body/@actions.0"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:PrintAction">
              <msg xsi:type="thingML:StringLiteral" stringValue="[ERROR] Unhandled OnLEMetaEvent \n"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="printf(&quot;  SubEventCode=0x%02x, LENGTH=0x%02x, DATA=&quot;, ">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@parameters.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=", ">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=" );"/>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.6">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@parameters.2"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.10/@parameters.1"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="printf(&quot;\n&quot;);"/>
          </action>
        </actions>
      </body>
    </functions>
    <functions name="HandleACLData">
      <parameters name="Handle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="PacketBoundary">
        <typeRef type="//@types.43"/>
      </parameters>
      <parameters name="Broadcast">
        <typeRef type="//@types.44"/>
      </parameters>
      <parameters name="Length">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Data">
        <typeRef type="//@types.5"/>
      </parameters>
      <body xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:AndExpression">
            <lhs xsi:type="thingML:NotEqualsExpression">
              <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.11/@parameters.1"/>
              <rhs xsi:type="thingML:EnumLiteralRef" enum="//@types.43" literal="//@types.43/@literals.2"/>
            </lhs>
            <rhs xsi:type="thingML:NotEqualsExpression">
              <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.11/@parameters.1"/>
              <rhs xsi:type="thingML:EnumLiteralRef" enum="//@types.43" literal="//@types.43/@literals.0"/>
            </rhs>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:PrintAction">
              <msg xsi:type="thingML:StringLiteral" stringValue="[ERROR]: Got an ACL packet what was not the first automatically flushable packet. Implement handling of this!\n"/>
            </actions>
          </action>
          <elseAction xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="handled">
              <typeRef type="//@types.6"/>
              <init xsi:type="thingML:BooleanLiteral"/>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="NLength">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.11/@parameters.4"/>
                <segments xsi:type="thingML:ExternExpression" expression="[0])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="CID">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.11/@parameters.4"/>
                <segments xsi:type="thingML:ExternExpression" expression="[2])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="NData">
              <typeRef type="//@types.5"/>
              <init xsi:type="thingML:ExternExpression" expression="&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.11/@parameters.4"/>
                <segments xsi:type="thingML:ExternExpression" expression="[4]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.11/@body/@actions.0/@elseAction/@actions.2"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x0004"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.11/@body/@actions.0/@elseAction/@actions.0">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.14">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.11/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.11/@body/@actions.0/@elseAction/@actions.1"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.11/@body/@actions.0/@elseAction/@actions.3"/>
                </actions>
              </action>
            </actions>
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.11/@body/@actions.0/@elseAction/@actions.2"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x0005"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.11/@body/@actions.0/@elseAction/@actions.0">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.12">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.11/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.11/@body/@actions.0/@elseAction/@actions.1"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.11/@body/@actions.0/@elseAction/@actions.3"/>
                </actions>
              </action>
            </actions>
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.11/@body/@actions.0/@elseAction/@actions.2"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x0006"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.11/@body/@actions.0/@elseAction/@actions.0">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.13">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.11/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.11/@body/@actions.0/@elseAction/@actions.1"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.11/@body/@actions.0/@elseAction/@actions.3"/>
                </actions>
              </action>
            </actions>
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:AndExpression">
                <lhs xsi:type="thingML:AndExpression">
                  <lhs xsi:type="thingML:NotEqualsExpression">
                    <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.11/@body/@actions.0/@elseAction/@actions.2"/>
                    <rhs xsi:type="thingML:ExternExpression" expression="0x0004"/>
                  </lhs>
                  <rhs xsi:type="thingML:NotEqualsExpression">
                    <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.11/@body/@actions.0/@elseAction/@actions.2"/>
                    <rhs xsi:type="thingML:ExternExpression" expression="0x0005"/>
                  </rhs>
                </lhs>
                <rhs xsi:type="thingML:NotEqualsExpression">
                  <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.11/@body/@actions.0/@elseAction/@actions.2"/>
                  <rhs xsi:type="thingML:ExternExpression" expression="0x0006"/>
                </rhs>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:PrintAction">
                  <msg xsi:type="thingML:StringLiteral" stringValue="[WARNING]: Got an L2CAP packet that was to an non-fixed channel!\n"/>
                </actions>
              </action>
            </actions>
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:NotExpression">
                <term xsi:type="thingML:PropertyReference" property="//@types.25/@functions.11/@body/@actions.0/@elseAction/@actions.0"/>
              </condition>
              <action xsi:type="thingML:PrintAction">
                <msg xsi:type="thingML:StringLiteral" stringValue="[ERROR] Unhandled HandleACLData \n"/>
              </action>
            </actions>
          </elseAction>
        </actions>
      </body>
    </functions>
    <functions name="OnL2CAPData">
      <parameters name="Handle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Length">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Data">
        <typeRef type="//@types.5"/>
      </parameters>
      <body xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:PrintAction">
          <msg xsi:type="thingML:StringLiteral" stringValue="!!! GOT LE L2CAP DATA !!!\n"/>
        </actions>
      </body>
    </functions>
    <functions name="OnSMPData">
      <parameters name="Handle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Length">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Data">
        <typeRef type="//@types.5"/>
      </parameters>
      <body xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:LocalVariable" name="Code">
          <typeRef type="//@types.1"/>
          <init xsi:type="thingML:ExternExpression" expression="">
            <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
            <segments xsi:type="thingML:ExternExpression" expression="[0]"/>
          </init>
        </actions>
        <actions xsi:type="thingML:LocalVariable" name="decoded">
          <typeRef type="//@types.6"/>
          <init xsi:type="thingML:BooleanLiteral"/>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x01"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="IOCapability">
              <typeRef type="//@types.54"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="OOBDataPresent">
              <typeRef type="//@types.6"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[2] == 0x01"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="Bonding">
              <typeRef type="//@types.6"/>
              <init xsi:type="thingML:ExternExpression" expression="((">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[3] &amp; 0x03) == 0x01)"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="MITM">
              <typeRef type="//@types.6"/>
              <init xsi:type="thingML:ExternExpression" expression="((">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[3] &amp; 0x04) > 0)"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="SecureConnection">
              <typeRef type="//@types.6"/>
              <init xsi:type="thingML:ExternExpression" expression="((">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[3] &amp; 0x08) > 0)"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="Keypress">
              <typeRef type="//@types.6"/>
              <init xsi:type="thingML:ExternExpression" expression="((">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[3] &amp; 0x10) > 0)"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="MaximumEncryptionKeySize">
              <typeRef type="//@types.1"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[4]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="InitiatorKeyDistribution">
              <typeRef type="//@types.55"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[5]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="ResponderKeyDistribution">
              <typeRef type="//@types.55"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[6]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.13/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:PrintAction">
              <msg xsi:type="thingML:StringLiteral" stringValue="[DEBUG] SMP!SMPPairingRequest in OnSMPData\n"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.47/@ports.0" message="//@types.50/@messages.0">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.2/@action/@actions.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.2/@action/@actions.1"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.2/@action/@actions.2"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.2/@action/@actions.3"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.2/@action/@actions.4"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.2/@action/@actions.5"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.2/@action/@actions.6"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.2/@action/@actions.7"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.2/@action/@actions.8"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x02"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="IOCapability">
              <typeRef type="//@types.54"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="OOBDataPresent">
              <typeRef type="//@types.6"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[2] == 0x01"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="Bonding">
              <typeRef type="//@types.6"/>
              <init xsi:type="thingML:ExternExpression" expression="((">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[3] &amp; 0x03) == 0x01)"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="MITM">
              <typeRef type="//@types.6"/>
              <init xsi:type="thingML:ExternExpression" expression="((">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[3] &amp; 0x04) > 0)"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="SecureConnection">
              <typeRef type="//@types.6"/>
              <init xsi:type="thingML:ExternExpression" expression="((">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[3] &amp; 0x08) > 0)"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="Keypress">
              <typeRef type="//@types.6"/>
              <init xsi:type="thingML:ExternExpression" expression="((">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[3] &amp; 0x10) > 0)"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="MaximumEncryptionKeySize">
              <typeRef type="//@types.1"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[4]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="InitiatorKeyDistribution">
              <typeRef type="//@types.55"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[5]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="ResponderKeyDistribution">
              <typeRef type="//@types.55"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[6]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.13/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.47/@ports.0" message="//@types.50/@messages.1">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.3/@action/@actions.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.3/@action/@actions.1"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.3/@action/@actions.2"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.3/@action/@actions.3"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.3/@action/@actions.4"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.3/@action/@actions.5"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.3/@action/@actions.6"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.3/@action/@actions.7"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.3/@action/@actions.8"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x03"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="ConfirmValue">
              <typeRef type="//@types.32"/>
              <init xsi:type="thingML:ExternExpression" expression="*((ble_random_number_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.13/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="printf(&quot;[DEBUG] SMP!SMPPairingConfirm HANDLE=0x%02x, LENGTH=0x%02x, DATA=&quot;, ">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=", ">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=" );"/>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.6">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.1"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="printf(&quot;\n&quot;);"/>
            <actions xsi:type="thingML:SendAction" port="//@types.47/@ports.0" message="//@types.50/@messages.2">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.4/@action/@actions.0"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x04"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="RandomValue">
              <typeRef type="//@types.32"/>
              <init xsi:type="thingML:ExternExpression" expression="*((ble_random_number_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.13/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="printf(&quot;[DEBUG] SMP!SMPPairingRandom HANDLE=0x%02x, LENGTH=0x%02x, DATA=&quot;, ">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=", ">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=" );"/>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.6">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.1"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="printf(&quot;\n&quot;);"/>
            <actions xsi:type="thingML:SendAction" port="//@types.47/@ports.0" message="//@types.50/@messages.3">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.5/@action/@actions.0"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x05"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="Reason">
              <typeRef type="//@types.56"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.13/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.47/@ports.0" message="//@types.50/@messages.4">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.6/@action/@actions.0"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x06"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="LongTermKey">
              <typeRef type="//@types.32"/>
              <init xsi:type="thingML:ExternExpression" expression="*((ble_random_number_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.13/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.47/@ports.0" message="//@types.50/@messages.8">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.7/@action/@actions.0"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x07"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="EDIV">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="Rand">
              <typeRef type="//@types.31"/>
              <init xsi:type="thingML:ExternExpression" expression="*((ble_random_part_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[3])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.13/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.47/@ports.0" message="//@types.50/@messages.9">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.8/@action/@actions.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.8/@action/@actions.1"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x08"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="IdentityResolvingKey">
              <typeRef type="//@types.32"/>
              <init xsi:type="thingML:ExternExpression" expression="*((ble_random_number_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.13/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.47/@ports.0" message="//@types.50/@messages.10">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.9/@action/@actions.0"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x09"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="AddressType">
              <typeRef type="//@types.34"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="Address">
              <typeRef type="//@types.29"/>
              <init xsi:type="thingML:ExternExpression" expression="*((bdaddr_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[2])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.13/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.47/@ports.0" message="//@types.50/@messages.11">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.10/@action/@actions.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.10/@action/@actions.1"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x0A"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="SignatureKey">
              <typeRef type="//@types.32"/>
              <init xsi:type="thingML:ExternExpression" expression="*((ble_random_number_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.13/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.47/@ports.0" message="//@types.50/@messages.12">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.11/@action/@actions.0"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x0B"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="Bonding">
              <typeRef type="//@types.6"/>
              <init xsi:type="thingML:ExternExpression" expression="((">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1] &amp; 0x03) == 0x01)"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="MITM">
              <typeRef type="//@types.6"/>
              <init xsi:type="thingML:ExternExpression" expression="((">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1] &amp; 0x04) > 0)"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="SecureConnection">
              <typeRef type="//@types.6"/>
              <init xsi:type="thingML:ExternExpression" expression="((">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1] &amp; 0x08) > 0)"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="Keypress">
              <typeRef type="//@types.6"/>
              <init xsi:type="thingML:ExternExpression" expression="((">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1] &amp; 0x10) > 0)"/>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.13/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.47/@ports.0" message="//@types.50/@messages.13">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.12/@action/@actions.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.12/@action/@actions.1"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.12/@action/@actions.2"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.12/@action/@actions.3"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x0C"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="KeyX">
              <typeRef type="//@types.53"/>
              <init xsi:type="thingML:ExternExpression" expression="*((smp_public_key_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="KeyY">
              <typeRef type="//@types.53"/>
              <init xsi:type="thingML:ExternExpression" expression="*((smp_public_key_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[33])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.13/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.47/@ports.0" message="//@types.50/@messages.5">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.13/@action/@actions.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.13/@action/@actions.1"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x0D"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="DHKeyCheck">
              <typeRef type="//@types.32"/>
              <init xsi:type="thingML:ExternExpression" expression="*((ble_random_number_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.13/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.47/@ports.0" message="//@types.50/@messages.6">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.14/@action/@actions.0"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x0E"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="Type">
              <typeRef type="//@types.57"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.13/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.47/@ports.0" message="//@types.50/@messages.7">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.15/@action/@actions.0"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:NotExpression">
            <term xsi:type="thingML:PropertyReference" property="//@types.25/@functions.13/@body/@actions.1"/>
          </condition>
          <action xsi:type="thingML:PrintAction">
            <msg xsi:type="thingML:StringLiteral" stringValue="[ERROR] Got unknown SMPData packet !!!\n"/>
          </action>
        </actions>
      </body>
    </functions>
    <functions name="OnATTData">
      <parameters name="Handle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Length">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Data">
        <typeRef type="//@types.5"/>
      </parameters>
      <body xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:LocalVariable" name="OpCode">
          <typeRef type="//@types.1"/>
          <init xsi:type="thingML:ExternExpression" expression="">
            <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
            <segments xsi:type="thingML:ExternExpression" expression="[0]"/>
          </init>
        </actions>
        <actions xsi:type="thingML:LocalVariable" name="decoded">
          <typeRef type="//@types.6"/>
          <init xsi:type="thingML:BooleanLiteral"/>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x01"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="RequestOpCode">
              <typeRef type="//@types.1"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="AttributeHandle">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[2])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="Error">
              <typeRef type="//@types.60"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[4]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.2/@action/@actions.0"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x04"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.14/@body/@actions.1">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.49/@ports.0" message="//@types.51/@messages.2">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.2/@action/@actions.1"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.2/@action/@actions.2"/>
                </actions>
              </action>
            </actions>
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.2/@action/@actions.0"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x08"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.14/@body/@actions.1">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.49/@ports.0" message="//@types.51/@messages.5">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.2/@action/@actions.1"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.2/@action/@actions.2"/>
                </actions>
              </action>
            </actions>
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.2/@action/@actions.0"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x0A"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.14/@body/@actions.1">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.49/@ports.0" message="//@types.51/@messages.8">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.2/@action/@actions.1"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.2/@action/@actions.2"/>
                </actions>
              </action>
            </actions>
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.2/@action/@actions.0"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x10"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.14/@body/@actions.1">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.49/@ports.0" message="//@types.51/@messages.11">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.2/@action/@actions.1"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.2/@action/@actions.2"/>
                </actions>
              </action>
            </actions>
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:EqualsExpression">
                <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.2/@action/@actions.0"/>
                <rhs xsi:type="thingML:ExternExpression" expression="0x12"/>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.14/@body/@actions.1">
                  <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
                </actions>
                <actions xsi:type="thingML:SendAction" port="//@types.49/@ports.0" message="//@types.51/@messages.14">
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.0"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.2/@action/@actions.1"/>
                  <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.2/@action/@actions.2"/>
                </actions>
              </action>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x04"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="StartingHandle">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="EndingHandle">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[3])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.14/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.49/@ports.0" message="//@types.51/@messages.0">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.3/@action/@actions.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.3/@action/@actions.1"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x05"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="Format">
              <typeRef type="//@types.1"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="InformationData">
              <typeRef type="//@types.59"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.4/@action/@actions.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=".length = ">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression="-2;"/>
              </segments>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="memcpy(&amp;">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.4/@action/@actions.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=".bytes, &amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[2], ">
                  <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.1"/>
                  <segments xsi:type="thingML:ExternExpression" expression="-2);"/>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.14/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.49/@ports.0" message="//@types.51/@messages.1">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.4/@action/@actions.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.4/@action/@actions.1"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x08"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="StartingHandle">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="EndingHandle">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[3])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="AttributeType">
              <typeRef type="//@types.58"/>
              <init xsi:type="thingML:FunctionCallExpression" function="//@types.52/@functions.0">
                <parameters xsi:type="thingML:MinusExpression">
                  <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.1"/>
                  <rhs xsi:type="thingML:IntegerLiteral" intValue="5"/>
                </parameters>
                <parameters xsi:type="thingML:ExternExpression" expression="&amp;">
                  <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                  <segments xsi:type="thingML:ExternExpression" expression="[5]"/>
                </parameters>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.14/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.49/@ports.0" message="//@types.51/@messages.3">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.5/@action/@actions.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.5/@action/@actions.1"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.5/@action/@actions.2"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x09"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="ALength">
              <typeRef type="//@types.1"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="AttributeDataList">
              <typeRef type="//@types.59"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.6/@action/@actions.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=".length = ">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression="-2;"/>
              </segments>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="memcpy(&amp;">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.6/@action/@actions.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=".bytes, &amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[2], ">
                  <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.1"/>
                  <segments xsi:type="thingML:ExternExpression" expression="-2);"/>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.14/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.49/@ports.0" message="//@types.51/@messages.4">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.6/@action/@actions.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.6/@action/@actions.1"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x0A"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="AttributeHandle">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.14/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.49/@ports.0" message="//@types.51/@messages.6">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.7/@action/@actions.0"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x0B"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="AttributeData">
              <typeRef type="//@types.59"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.8/@action/@actions.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=".length = ">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression="-1;"/>
              </segments>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="memcpy(&amp;">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.8/@action/@actions.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=".bytes, &amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1], ">
                  <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.1"/>
                  <segments xsi:type="thingML:ExternExpression" expression="-1);"/>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.14/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.49/@ports.0" message="//@types.51/@messages.7">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.8/@action/@actions.0"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x10"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="StartingHandle">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="EndingHandle">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[3])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="AttributeGroupType">
              <typeRef type="//@types.58"/>
              <init xsi:type="thingML:FunctionCallExpression" function="//@types.52/@functions.0">
                <parameters xsi:type="thingML:MinusExpression">
                  <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.1"/>
                  <rhs xsi:type="thingML:IntegerLiteral" intValue="5"/>
                </parameters>
                <parameters xsi:type="thingML:ExternExpression" expression="&amp;">
                  <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                  <segments xsi:type="thingML:ExternExpression" expression="[5]"/>
                </parameters>
              </init>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.14/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.49/@ports.0" message="//@types.51/@messages.9">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.9/@action/@actions.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.9/@action/@actions.1"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.9/@action/@actions.2"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x11"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="ALength">
              <typeRef type="//@types.1"/>
              <init xsi:type="thingML:ExternExpression" expression="">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1]"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="AttributeDataList">
              <typeRef type="//@types.59"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.10/@action/@actions.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=".length = ">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression="-2;"/>
              </segments>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="memcpy(&amp;">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.10/@action/@actions.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=".bytes, &amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[2], ">
                  <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.1"/>
                  <segments xsi:type="thingML:ExternExpression" expression="-2);"/>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.14/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.49/@ports.0" message="//@types.51/@messages.10">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.10/@action/@actions.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.10/@action/@actions.1"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x12"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="AttributeHandle">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="AttributeValue">
              <typeRef type="//@types.59"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.11/@action/@actions.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=".length = ">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression="-3;"/>
              </segments>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="memcpy(&amp;">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.11/@action/@actions.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=".bytes, &amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[3], ">
                  <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.1"/>
                  <segments xsi:type="thingML:ExternExpression" expression="-3);"/>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.14/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.49/@ports.0" message="//@types.51/@messages.12">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.11/@action/@actions.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.11/@action/@actions.1"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x13"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.14/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.49/@ports.0" message="//@types.51/@messages.13">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.0"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x52"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="AttributeHandle">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="AttributeValue">
              <typeRef type="//@types.59"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.13/@action/@actions.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=".length = ">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression="-3;"/>
              </segments>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="memcpy(&amp;">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.13/@action/@actions.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=".bytes, &amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[3], ">
                  <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.1"/>
                  <segments xsi:type="thingML:ExternExpression" expression="-3);"/>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.14/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.49/@ports.0" message="//@types.51/@messages.15">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.13/@action/@actions.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.13/@action/@actions.1"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x1B"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="AttributeHandle">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="AttributeValue">
              <typeRef type="//@types.59"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.14/@action/@actions.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=".length = ">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression="-3;"/>
              </segments>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="memcpy(&amp;">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.14/@action/@actions.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=".bytes, &amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[3], ">
                  <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.1"/>
                  <segments xsi:type="thingML:ExternExpression" expression="-3);"/>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.14/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.49/@ports.0" message="//@types.51/@messages.16">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.14/@action/@actions.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.14/@action/@actions.1"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x1D"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="AttributeHandle">
              <typeRef type="//@types.3"/>
              <init xsi:type="thingML:ExternExpression" expression="*((uint16_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[1])"/>
              </init>
            </actions>
            <actions xsi:type="thingML:LocalVariable" name="AttributeValue">
              <typeRef type="//@types.59"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.15/@action/@actions.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=".length = ">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression="-3;"/>
              </segments>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="memcpy(&amp;">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.15/@action/@actions.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=".bytes, &amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression="[3], ">
                  <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.1"/>
                  <segments xsi:type="thingML:ExternExpression" expression="-3);"/>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.14/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.49/@ports.0" message="//@types.51/@messages.17">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.15/@action/@actions.0"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.15/@action/@actions.1"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.0"/>
            <rhs xsi:type="thingML:ExternExpression" expression="0x1E"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:VariableAssignment" property="//@types.25/@functions.14/@body/@actions.1">
              <expression xsi:type="thingML:BooleanLiteral" boolValue="true"/>
            </actions>
            <actions xsi:type="thingML:SendAction" port="//@types.49/@ports.0" message="//@types.51/@messages.18">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.0"/>
            </actions>
          </action>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:NotExpression">
            <term xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@body/@actions.1"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:PrintAction">
              <msg xsi:type="thingML:StringLiteral" stringValue="[ERROR] Got unknown ATTData packet !!!\n"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="printf(&quot;  Handle=0x%04x, LENGTH=0x%02x, DATA=&quot;, ">
              <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=", ">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=" );"/>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.6">
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.2"/>
              <parameters xsi:type="thingML:PropertyReference" property="//@types.25/@functions.14/@parameters.1"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="printf(&quot;\n&quot;);"/>
          </action>
        </actions>
      </body>
    </functions>
    <behaviour name="Socket" initial="//@types.25/@behaviour/@substate.0">
      <substate name="Closed">
        <entry xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.1"/>
        <outgoing target="//@types.25/@behaviour/@substate.1">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.25/@ports.0" message="//@types.23/@messages.0"/>
        </outgoing>
      </substate>
      <substate name="Opening">
        <entry xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.0"/>
        <outgoing target="//@types.25/@behaviour/@substate.2">
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:GreaterExpression">
              <lhs xsi:type="thingML:FunctionCallExpression" function="//@types.25/@functions.2"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
          <action xsi:type="thingML:SendAction" port="//@types.25/@ports.0" message="//@types.23/@messages.2">
            <parameters xsi:type="thingML:FunctionCallExpression" function="//@types.25/@functions.3"/>
          </action>
        </outgoing>
        <outgoing target="//@types.25/@behaviour/@substate.0">
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:EqualsExpression">
              <lhs xsi:type="thingML:FunctionCallExpression" function="//@types.25/@functions.2"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
          <action xsi:type="thingML:SendAction" port="//@types.25/@ports.0" message="//@types.23/@messages.3"/>
        </outgoing>
      </substate>
      <substate name="Open">
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.25/@ports.1" message="//@types.45/@messages.7"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          disconnect_cp data;&#xA;          data.handle = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.0/@event" parameter="//@types.45/@messages.7/@parameters.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.reason = ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.0/@event" parameter="//@types.45/@messages.7/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.4">
              <parameters xsi:type="thingML:ExternExpression" expression="0x01"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0006"/>
              <parameters xsi:type="thingML:ExternExpression" expression="3"/>
              <parameters xsi:type="thingML:ExternExpression" expression="(uint8_t*)&amp;data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" port="//@types.25/@ports.1" message="//@types.45/@messages.0"/>
          <action xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.4">
            <parameters xsi:type="thingML:ExternExpression" expression="0x03"/>
            <parameters xsi:type="thingML:ExternExpression" expression="0x0003"/>
            <parameters xsi:type="thingML:ExternExpression" expression="0"/>
            <parameters xsi:type="thingML:ExternExpression" expression="NULL"/>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.25/@ports.1" message="//@types.45/@messages.2"/>
          <action xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.4">
            <parameters xsi:type="thingML:ExternExpression" expression="0x03"/>
            <parameters xsi:type="thingML:ExternExpression" expression="0x0001"/>
            <parameters xsi:type="thingML:ExternExpression" expression="8"/>
            <parameters xsi:type="thingML:ExternExpression" expression="(uint8_t*)&amp;">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.2/@event" parameter="//@types.45/@messages.2/@parameters.0"/>
            </parameters>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" port="//@types.25/@ports.1" message="//@types.45/@messages.3"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="Mask">
              <typeRef type="//@types.27"/>
              <init xsi:type="thingML:ExternExpression" expression="{ 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF }"/>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.4">
              <parameters xsi:type="thingML:ExternExpression" expression="0x03"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0001"/>
              <parameters xsi:type="thingML:ExternExpression" expression="8"/>
              <parameters xsi:type="thingML:ExternExpression" expression="(uint8_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@behaviour/@substate.2/@internal.3/@action/@actions.0"/>
              </parameters>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.25/@ports.1" message="//@types.45/@messages.11"/>
          <action xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.4">
            <parameters xsi:type="thingML:ExternExpression" expression="0x08"/>
            <parameters xsi:type="thingML:ExternExpression" expression="0x0001"/>
            <parameters xsi:type="thingML:ExternExpression" expression="8"/>
            <parameters xsi:type="thingML:ExternExpression" expression="(uint8_t*)&amp;">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.4/@event" parameter="//@types.45/@messages.11/@parameters.0"/>
            </parameters>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" port="//@types.25/@ports.1" message="//@types.45/@messages.12"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:LocalVariable" name="Mask">
              <typeRef type="//@types.27"/>
              <init xsi:type="thingML:ExternExpression" expression="{ 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF }"/>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.4">
              <parameters xsi:type="thingML:ExternExpression" expression="0x08"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0001"/>
              <parameters xsi:type="thingML:ExternExpression" expression="8"/>
              <parameters xsi:type="thingML:ExternExpression" expression="(uint8_t*)&amp;">
                <segments xsi:type="thingML:PropertyReference" property="//@types.25/@behaviour/@substate.2/@internal.5/@action/@actions.0"/>
              </parameters>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.25/@ports.1" message="//@types.45/@messages.14"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          le_set_advertising_parameters_cp data;&#xA;          data.min_interval = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.6/@event" parameter="//@types.45/@messages.14/@parameters.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.max_interval = ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.6/@event" parameter="//@types.45/@messages.14/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.advtype = ">
                  <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.6/@event" parameter="//@types.45/@messages.14/@parameters.2"/>
                  <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.own_bdaddr_type = ">
                    <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.6/@event" parameter="//@types.45/@messages.14/@parameters.3"/>
                    <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.direct_bdaddr_type = ">
                      <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.6/@event" parameter="//@types.45/@messages.14/@parameters.4"/>
                      <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.direct_bdaddr = ">
                        <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.6/@event" parameter="//@types.45/@messages.14/@parameters.5"/>
                        <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.chan_map = ">
                          <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.6/@event" parameter="//@types.45/@messages.14/@parameters.6"/>
                          <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.filter = ">
                            <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.6/@event" parameter="//@types.45/@messages.14/@parameters.7"/>
                            <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
                          </segments>
                        </segments>
                      </segments>
                    </segments>
                  </segments>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.4">
              <parameters xsi:type="thingML:ExternExpression" expression="0x08"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0006"/>
              <parameters xsi:type="thingML:ExternExpression" expression="15"/>
              <parameters xsi:type="thingML:ExternExpression" expression="(uint8_t*)&amp;data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.25/@ports.1" message="//@types.45/@messages.18"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          le_set_advertising_data_cp data;&#xA;          data.length = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.7/@event" parameter="//@types.45/@messages.18/@parameters.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          memcpy(data.data, ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.7/@event" parameter="//@types.45/@messages.18/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=".bytes, 31);&#xA;        "/>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.4">
              <parameters xsi:type="thingML:ExternExpression" expression="0x08"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0008"/>
              <parameters xsi:type="thingML:ExternExpression" expression="32"/>
              <parameters xsi:type="thingML:ExternExpression" expression="(uint8_t*)&amp;data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.25/@ports.1" message="//@types.45/@messages.20"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          le_set_scan_response_data_cp data;&#xA;          data.length = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.8/@event" parameter="//@types.45/@messages.20/@parameters.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          memcpy(data.data, ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.8/@event" parameter="//@types.45/@messages.20/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=".bytes, 31);&#xA;        "/>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.4">
              <parameters xsi:type="thingML:ExternExpression" expression="0x08"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0009"/>
              <parameters xsi:type="thingML:ExternExpression" expression="32"/>
              <parameters xsi:type="thingML:ExternExpression" expression="(uint8_t*)&amp;data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.25/@ports.1" message="//@types.45/@messages.16"/>
          <action xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.4">
            <parameters xsi:type="thingML:ExternExpression" expression="0x08"/>
            <parameters xsi:type="thingML:ExternExpression" expression="0x000A"/>
            <parameters xsi:type="thingML:ExternExpression" expression="1"/>
            <parameters xsi:type="thingML:ExternExpression" expression="(uint8_t*)&amp;">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.9/@event" parameter="//@types.45/@messages.16/@parameters.0"/>
            </parameters>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.25/@ports.1" message="//@types.45/@messages.23"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          le_set_scan_parameters_cp data;&#xA;          data.type = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.10/@event" parameter="//@types.45/@messages.23/@parameters.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.interval = ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.10/@event" parameter="//@types.45/@messages.23/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.window = ">
                  <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.10/@event" parameter="//@types.45/@messages.23/@parameters.2"/>
                  <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.own_bdaddr_type = ">
                    <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.10/@event" parameter="//@types.45/@messages.23/@parameters.3"/>
                    <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.filter = ">
                      <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.10/@event" parameter="//@types.45/@messages.23/@parameters.4"/>
                      <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
                    </segments>
                  </segments>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.4">
              <parameters xsi:type="thingML:ExternExpression" expression="0x08"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x000B"/>
              <parameters xsi:type="thingML:ExternExpression" expression="7"/>
              <parameters xsi:type="thingML:ExternExpression" expression="(uint8_t*)&amp;data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.25/@ports.1" message="//@types.45/@messages.25"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          le_set_scan_enable_cp data;&#xA;          data.enable = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.11/@event" parameter="//@types.45/@messages.25/@parameters.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.filter_dup = ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.11/@event" parameter="//@types.45/@messages.25/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.4">
              <parameters xsi:type="thingML:ExternExpression" expression="0x08"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x000C"/>
              <parameters xsi:type="thingML:ExternExpression" expression="2"/>
              <parameters xsi:type="thingML:ExternExpression" expression="(uint8_t*)&amp;data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.25/@ports.1" message="//@types.45/@messages.27"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          le_create_connection_cp data;&#xA;          data.interval = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.12/@event" parameter="//@types.45/@messages.27/@parameters.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.window = ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.12/@event" parameter="//@types.45/@messages.27/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.initiator_filter = ">
                  <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.12/@event" parameter="//@types.45/@messages.27/@parameters.2"/>
                  <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.peer_bdaddr_type = ">
                    <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.12/@event" parameter="//@types.45/@messages.27/@parameters.3"/>
                    <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.peer_bdaddr = ">
                      <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.12/@event" parameter="//@types.45/@messages.27/@parameters.4"/>
                      <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.own_bdaddr_type = ">
                        <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.12/@event" parameter="//@types.45/@messages.27/@parameters.5"/>
                        <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.min_interval = ">
                          <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.12/@event" parameter="//@types.45/@messages.27/@parameters.6"/>
                          <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.max_interval = ">
                            <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.12/@event" parameter="//@types.45/@messages.27/@parameters.7"/>
                            <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.latency = ">
                              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.12/@event" parameter="//@types.45/@messages.27/@parameters.8"/>
                              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.supervision_timeout = ">
                                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.12/@event" parameter="//@types.45/@messages.27/@parameters.9"/>
                                <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.min_ce_length = ">
                                  <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.12/@event" parameter="//@types.45/@messages.27/@parameters.10"/>
                                  <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data.max_ce_length = ">
                                    <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.12/@event" parameter="//@types.45/@messages.27/@parameters.11"/>
                                    <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
                                  </segments>
                                </segments>
                              </segments>
                            </segments>
                          </segments>
                        </segments>
                      </segments>
                    </segments>
                  </segments>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.4">
              <parameters xsi:type="thingML:ExternExpression" expression="0x08"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x000D"/>
              <parameters xsi:type="thingML:ExternExpression" expression="25"/>
              <parameters xsi:type="thingML:ExternExpression" expression="(uint8_t*)&amp;data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" port="//@types.25/@ports.1" message="//@types.45/@messages.29"/>
          <action xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.4">
            <parameters xsi:type="thingML:ExternExpression" expression="0x08"/>
            <parameters xsi:type="thingML:ExternExpression" expression="0x000E"/>
            <parameters xsi:type="thingML:ExternExpression" expression="0"/>
            <parameters xsi:type="thingML:ExternExpression" expression="NULL"/>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" port="//@types.25/@ports.1" message="//@types.45/@messages.33"/>
          <action xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.4">
            <parameters xsi:type="thingML:ExternExpression" expression="0x08"/>
            <parameters xsi:type="thingML:ExternExpression" expression="0x0018"/>
            <parameters xsi:type="thingML:ExternExpression" expression="0"/>
            <parameters xsi:type="thingML:ExternExpression" expression="NULL"/>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.25/@ports.1" message="//@types.45/@messages.35"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          ble_random_number_t data[2];&#xA;          data[0] = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.15/@event" parameter="//@types.45/@messages.35/@parameters.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data[1] = ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.15/@event" parameter="//@types.45/@messages.35/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.4">
              <parameters xsi:type="thingML:ExternExpression" expression="0x08"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0017"/>
              <parameters xsi:type="thingML:ExternExpression" expression="32"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.25/@ports.1" message="//@types.45/@messages.37"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[28];&#xA;          *((uint16_t*)&amp;data[0]) = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.16/@event" parameter="//@types.45/@messages.37/@parameters.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          *((ble_random_part_t*)&amp;data[2]) = ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.16/@event" parameter="//@types.45/@messages.37/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          *((uint16_t*)&amp;data[10]) = ">
                  <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.16/@event" parameter="//@types.45/@messages.37/@parameters.2"/>
                  <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          *((ble_random_number_t*)&amp;data[12]) = ">
                    <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.16/@event" parameter="//@types.45/@messages.37/@parameters.3"/>
                    <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
                  </segments>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.4">
              <parameters xsi:type="thingML:ExternExpression" expression="0x08"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0019"/>
              <parameters xsi:type="thingML:ExternExpression" expression="28"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.47/@ports.0" message="//@types.50/@messages.0"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:PrintAction">
              <msg xsi:type="thingML:StringLiteral" stringValue="********** SEND PAIRING REQUEST !!!!!!"/>
            </actions>
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[7];&#xA;          data[0] = 0x01;&#xA;          data[1] = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.17/@event" parameter="//@types.50/@messages.0/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data[2] = (">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.17/@event" parameter="//@types.50/@messages.0/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=") ? 0x01 : 0x00;&#xA;          data[3] = ( ((">
                  <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.17/@event" parameter="//@types.50/@messages.0/@parameters.3"/>
                  <segments xsi:type="thingML:ExternExpression" expression=") ? 0x01 : 0x00) | ((">
                    <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.17/@event" parameter="//@types.50/@messages.0/@parameters.4"/>
                    <segments xsi:type="thingML:ExternExpression" expression=") ? 0x04 : 0x00) | ((">
                      <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.17/@event" parameter="//@types.50/@messages.0/@parameters.5"/>
                      <segments xsi:type="thingML:ExternExpression" expression=") ? 0x08 : 0x00) | ((">
                        <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.17/@event" parameter="//@types.50/@messages.0/@parameters.6"/>
                        <segments xsi:type="thingML:ExternExpression" expression=") ? 0x10 : 0x00) );&#xA;          data[4] = ">
                          <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.17/@event" parameter="//@types.50/@messages.0/@parameters.7"/>
                          <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data[5] = ">
                            <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.17/@event" parameter="//@types.50/@messages.0/@parameters.8"/>
                            <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data[6] = ">
                              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.17/@event" parameter="//@types.50/@messages.0/@parameters.9"/>
                              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
                            </segments>
                          </segments>
                        </segments>
                      </segments>
                    </segments>
                  </segments>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.17/@event" parameter="//@types.50/@messages.0/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0006"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="7"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.47/@ports.0" message="//@types.50/@messages.1"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[7];&#xA;          data[0] = 0x02;&#xA;          data[1] = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.18/@event" parameter="//@types.50/@messages.1/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data[2] = (">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.18/@event" parameter="//@types.50/@messages.1/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=") ? 0x01 : 0x00;&#xA;          data[3] = ( ((">
                  <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.18/@event" parameter="//@types.50/@messages.1/@parameters.3"/>
                  <segments xsi:type="thingML:ExternExpression" expression=") ? 0x01 : 0x00) | ((">
                    <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.18/@event" parameter="//@types.50/@messages.1/@parameters.4"/>
                    <segments xsi:type="thingML:ExternExpression" expression=") ? 0x04 : 0x00) | ((">
                      <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.18/@event" parameter="//@types.50/@messages.1/@parameters.5"/>
                      <segments xsi:type="thingML:ExternExpression" expression=") ? 0x08 : 0x00) | ((">
                        <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.18/@event" parameter="//@types.50/@messages.1/@parameters.6"/>
                        <segments xsi:type="thingML:ExternExpression" expression=") ? 0x10 : 0x00) );&#xA;          data[4] = ">
                          <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.18/@event" parameter="//@types.50/@messages.1/@parameters.7"/>
                          <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data[5] = ">
                            <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.18/@event" parameter="//@types.50/@messages.1/@parameters.8"/>
                            <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data[6] = ">
                              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.18/@event" parameter="//@types.50/@messages.1/@parameters.9"/>
                              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
                            </segments>
                          </segments>
                        </segments>
                      </segments>
                    </segments>
                  </segments>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.18/@event" parameter="//@types.50/@messages.1/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0006"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="7"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.47/@ports.0" message="//@types.50/@messages.2"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[17];&#xA;          data[0] = 0x03;&#xA;          *((ble_random_number_t*)&amp;data[1]) = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.19/@event" parameter="//@types.50/@messages.2/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.19/@event" parameter="//@types.50/@messages.2/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0006"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="17"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.47/@ports.0" message="//@types.50/@messages.3"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[17];&#xA;          data[0] = 0x04;&#xA;          *((ble_random_number_t*)&amp;data[1]) = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.20/@event" parameter="//@types.50/@messages.3/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.20/@event" parameter="//@types.50/@messages.3/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0006"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="17"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.47/@ports.0" message="//@types.50/@messages.4"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[2];&#xA;          data[0] = 0x05;&#xA;          data[1] = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.21/@event" parameter="//@types.50/@messages.4/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.21/@event" parameter="//@types.50/@messages.4/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0006"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="2"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.47/@ports.0" message="//@types.50/@messages.8"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[17];&#xA;          data[0] = 0x06;&#xA;          *((ble_random_number_t*)&amp;data[1]) = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.22/@event" parameter="//@types.50/@messages.8/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.22/@event" parameter="//@types.50/@messages.8/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0006"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="17"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.47/@ports.0" message="//@types.50/@messages.9"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[11];&#xA;          data[0] = 0x07;&#xA;          *((uint16_t*)&amp;data[1]) = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.23/@event" parameter="//@types.50/@messages.9/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          *((ble_random_part_t*)&amp;data[3]) = ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.23/@event" parameter="//@types.50/@messages.9/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.23/@event" parameter="//@types.50/@messages.9/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0006"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="11"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.47/@ports.0" message="//@types.50/@messages.10"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[17];&#xA;          data[0] = 0x08;&#xA;          *((ble_random_number_t*)&amp;data[1]) = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.24/@event" parameter="//@types.50/@messages.10/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.24/@event" parameter="//@types.50/@messages.10/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0006"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="17"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.47/@ports.0" message="//@types.50/@messages.11"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[8];&#xA;          data[0] = 0x09;&#xA;          data[1] = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.25/@event" parameter="//@types.50/@messages.11/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          *((bdaddr_t*)&amp;data[2]) = ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.25/@event" parameter="//@types.50/@messages.11/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.25/@event" parameter="//@types.50/@messages.11/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0006"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="8"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.47/@ports.0" message="//@types.50/@messages.12"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[17];&#xA;          data[0] = 0x0A;&#xA;          *((ble_random_number_t*)&amp;data[1]) = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.26/@event" parameter="//@types.50/@messages.12/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.26/@event" parameter="//@types.50/@messages.12/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0006"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="17"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.47/@ports.0" message="//@types.50/@messages.13"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[2];&#xA;          data[0] = 0x0B;&#xA;          data[1] = ( ((">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.27/@event" parameter="//@types.50/@messages.13/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=") ? 0x01 : 0x00) | ((">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.27/@event" parameter="//@types.50/@messages.13/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=") ? 0x04 : 0x00) | ((">
                  <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.27/@event" parameter="//@types.50/@messages.13/@parameters.3"/>
                  <segments xsi:type="thingML:ExternExpression" expression=") ? 0x08 : 0x00) | ((">
                    <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.27/@event" parameter="//@types.50/@messages.13/@parameters.4"/>
                    <segments xsi:type="thingML:ExternExpression" expression=") ? 0x10 : 0x00) );&#xA;        "/>
                  </segments>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.27/@event" parameter="//@types.50/@messages.13/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0006"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="2"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.47/@ports.0" message="//@types.50/@messages.5"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[65];&#xA;          data[0] = 0x0C;&#xA;          *((smp_public_key_t*)&amp;data[1]) = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.28/@event" parameter="//@types.50/@messages.5/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          *((smp_public_key_t*)&amp;data[33]) = ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.28/@event" parameter="//@types.50/@messages.5/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.28/@event" parameter="//@types.50/@messages.5/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0006"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="65"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.47/@ports.0" message="//@types.50/@messages.6"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[17];&#xA;          data[0] = 0x0D;&#xA;          *((ble_random_number_t*)&amp;data[1]) = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.29/@event" parameter="//@types.50/@messages.6/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.29/@event" parameter="//@types.50/@messages.6/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0006"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="17"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.47/@ports.0" message="//@types.50/@messages.7"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[2];&#xA;          data[0] = 0x0E;&#xA;          data[1] = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.30/@event" parameter="//@types.50/@messages.7/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.30/@event" parameter="//@types.50/@messages.7/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0006"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="2"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.49/@ports.0" message="//@types.51/@messages.0"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[5];&#xA;          data[0] = 0x04;&#xA;          *((uint16_t*)&amp;data[1]) = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.31/@event" parameter="//@types.51/@messages.0/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          *((uint16_t*)&amp;data[3]) = ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.31/@event" parameter="//@types.51/@messages.0/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.31/@event" parameter="//@types.51/@messages.0/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0004"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="5"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.49/@ports.0" message="//@types.51/@messages.1"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[25];&#xA;          data[0] = 0x05;&#xA;          data[1] = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.32/@event" parameter="//@types.51/@messages.1/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          memcpy(&amp;data[2], ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.32/@event" parameter="//@types.51/@messages.1/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=".bytes, ">
                  <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.32/@event" parameter="//@types.51/@messages.1/@parameters.2"/>
                  <segments xsi:type="thingML:ExternExpression" expression=".length);&#xA;        "/>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.32/@event" parameter="//@types.51/@messages.1/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0004"/>
              <parameters xsi:type="thingML:ExternExpression" expression="2+">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.32/@event" parameter="//@types.51/@messages.1/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=".length"/>
              </parameters>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.49/@ports.0" message="//@types.51/@messages.2"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[5];&#xA;          data[0] = 0x01;&#xA;          data[1] = 0x04;&#xA;          *((uint16_t*)&amp;data[2]) = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.33/@event" parameter="//@types.51/@messages.2/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data[4] = ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.33/@event" parameter="//@types.51/@messages.2/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.33/@event" parameter="//@types.51/@messages.2/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0004"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="5"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.49/@ports.0" message="//@types.51/@messages.3"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[21];&#xA;          data[0] = 0x08;&#xA;          *((uint16_t*)&amp;data[1]) = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.34/@event" parameter="//@types.51/@messages.3/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          *((uint16_t*)&amp;data[3]) = ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.34/@event" parameter="//@types.51/@messages.3/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          memcpy(&amp;data[5], &amp;">
                  <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.34/@event" parameter="//@types.51/@messages.3/@parameters.3"/>
                  <segments xsi:type="thingML:ExternExpression" expression=", 16);&#xA;        "/>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.34/@event" parameter="//@types.51/@messages.3/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0004"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="21"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.49/@ports.0" message="//@types.51/@messages.4"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[25];&#xA;          data[0] = 0x09;&#xA;          data[1] = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.35/@event" parameter="//@types.51/@messages.4/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          memcpy(&amp;data[2], ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.35/@event" parameter="//@types.51/@messages.4/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=".bytes, ">
                  <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.35/@event" parameter="//@types.51/@messages.4/@parameters.2"/>
                  <segments xsi:type="thingML:ExternExpression" expression=".length);&#xA;        "/>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.35/@event" parameter="//@types.51/@messages.4/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0004"/>
              <parameters xsi:type="thingML:ExternExpression" expression="2+">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.35/@event" parameter="//@types.51/@messages.4/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=".length"/>
              </parameters>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.49/@ports.0" message="//@types.51/@messages.5"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[5];&#xA;          data[0] = 0x01;&#xA;          data[1] = 0x08;&#xA;          *((uint16_t*)&amp;data[2]) = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.36/@event" parameter="//@types.51/@messages.5/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data[4] = ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.36/@event" parameter="//@types.51/@messages.5/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.36/@event" parameter="//@types.51/@messages.5/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0004"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="5"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.49/@ports.0" message="//@types.51/@messages.6"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[3];&#xA;          data[0] = 0x0A;&#xA;          *((uint16_t*)&amp;data[1]) = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.37/@event" parameter="//@types.51/@messages.6/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.37/@event" parameter="//@types.51/@messages.6/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0004"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="3"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.49/@ports.0" message="//@types.51/@messages.7"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[24];&#xA;          data[0] = 0x0B;&#xA;          memcpy(&amp;data[1], ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.38/@event" parameter="//@types.51/@messages.7/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=".bytes, ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.38/@event" parameter="//@types.51/@messages.7/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=".length);&#xA;        "/>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.38/@event" parameter="//@types.51/@messages.7/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0004"/>
              <parameters xsi:type="thingML:ExternExpression" expression="1+">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.38/@event" parameter="//@types.51/@messages.7/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=".length"/>
              </parameters>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.49/@ports.0" message="//@types.51/@messages.8"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[5];&#xA;          data[0] = 0x01;&#xA;          data[1] = 0x0A;&#xA;          *((uint16_t*)&amp;data[2]) = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.39/@event" parameter="//@types.51/@messages.8/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data[4] = ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.39/@event" parameter="//@types.51/@messages.8/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.39/@event" parameter="//@types.51/@messages.8/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0004"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="5"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.49/@ports.0" message="//@types.51/@messages.9"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[21];&#xA;          data[0] = 0x10;&#xA;          *((uint16_t*)&amp;data[1]) = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.40/@event" parameter="//@types.51/@messages.9/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          *((uint16_t*)&amp;data[3]) = ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.40/@event" parameter="//@types.51/@messages.9/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          memcpy(&amp;data[5], &amp;">
                  <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.40/@event" parameter="//@types.51/@messages.9/@parameters.3"/>
                  <segments xsi:type="thingML:ExternExpression" expression=", 16);&#xA;        "/>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.40/@event" parameter="//@types.51/@messages.9/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0004"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="21"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.49/@ports.0" message="//@types.51/@messages.10"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[25];&#xA;          data[0] = 0x11;&#xA;          data[1] = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.41/@event" parameter="//@types.51/@messages.10/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          memcpy(&amp;data[2], ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.41/@event" parameter="//@types.51/@messages.10/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=".bytes, ">
                  <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.41/@event" parameter="//@types.51/@messages.10/@parameters.2"/>
                  <segments xsi:type="thingML:ExternExpression" expression=".length);&#xA;        "/>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.41/@event" parameter="//@types.51/@messages.10/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0004"/>
              <parameters xsi:type="thingML:ExternExpression" expression="2+">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.41/@event" parameter="//@types.51/@messages.10/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=".length"/>
              </parameters>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.49/@ports.0" message="//@types.51/@messages.11"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[5];&#xA;          data[0] = 0x01;&#xA;          data[1] = 0x10;&#xA;          *((uint16_t*)&amp;data[2]) = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.42/@event" parameter="//@types.51/@messages.11/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data[4] = ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.42/@event" parameter="//@types.51/@messages.11/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.42/@event" parameter="//@types.51/@messages.11/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0004"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="5"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.49/@ports.0" message="//@types.51/@messages.12"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[26];&#xA;          data[0] = 0x12;&#xA;          *((uint16_t*)&amp;data[1]) = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.43/@event" parameter="//@types.51/@messages.12/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          memcpy(&amp;data[3], ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.43/@event" parameter="//@types.51/@messages.12/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=".bytes, ">
                  <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.43/@event" parameter="//@types.51/@messages.12/@parameters.2"/>
                  <segments xsi:type="thingML:ExternExpression" expression=".length);&#xA;        "/>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.43/@event" parameter="//@types.51/@messages.12/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0004"/>
              <parameters xsi:type="thingML:ExternExpression" expression="3+">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.43/@event" parameter="//@types.51/@messages.12/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=".length"/>
              </parameters>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.49/@ports.0" message="//@types.51/@messages.13"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[1];&#xA;          data[0] = 0x13;&#xA;        "/>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.44/@event" parameter="//@types.51/@messages.13/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0004"/>
              <parameters xsi:type="thingML:ExternExpression" expression="1"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.49/@ports.0" message="//@types.51/@messages.14"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[5];&#xA;          data[0] = 0x01;&#xA;          data[1] = 0x12;&#xA;          *((uint16_t*)&amp;data[2]) = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.45/@event" parameter="//@types.51/@messages.14/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          data[4] = ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.45/@event" parameter="//@types.51/@messages.14/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=";&#xA;        "/>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.45/@event" parameter="//@types.51/@messages.14/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0004"/>
              <parameters xsi:type="thingML:IntegerLiteral" intValue="5"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.49/@ports.0" message="//@types.51/@messages.15"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[26];&#xA;          data[0] = 0x52;&#xA;          *((uint16_t*)&amp;data[1]) = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.46/@event" parameter="//@types.51/@messages.15/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          memcpy(&amp;data[3], ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.46/@event" parameter="//@types.51/@messages.15/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=".bytes, ">
                  <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.46/@event" parameter="//@types.51/@messages.15/@parameters.2"/>
                  <segments xsi:type="thingML:ExternExpression" expression=".length);&#xA;        "/>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.46/@event" parameter="//@types.51/@messages.15/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0004"/>
              <parameters xsi:type="thingML:ExternExpression" expression="3+">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.46/@event" parameter="//@types.51/@messages.15/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=".length"/>
              </parameters>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.49/@ports.0" message="//@types.51/@messages.16"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[26];&#xA;          data[0] = 0x1B;&#xA;          *((uint16_t*)&amp;data[1]) = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.47/@event" parameter="//@types.51/@messages.16/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          memcpy(&amp;data[3], ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.47/@event" parameter="//@types.51/@messages.16/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=".bytes, ">
                  <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.47/@event" parameter="//@types.51/@messages.16/@parameters.2"/>
                  <segments xsi:type="thingML:ExternExpression" expression=".length);&#xA;        "/>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.47/@event" parameter="//@types.51/@messages.16/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0004"/>
              <parameters xsi:type="thingML:ExternExpression" expression="3+">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.47/@event" parameter="//@types.51/@messages.16/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=".length"/>
              </parameters>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.49/@ports.0" message="//@types.51/@messages.17"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[26];&#xA;          data[0] = 0x1D;&#xA;          *((uint16_t*)&amp;data[1]) = ">
              <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.48/@event" parameter="//@types.51/@messages.17/@parameters.1"/>
              <segments xsi:type="thingML:ExternExpression" expression=";&#xA;          memcpy(&amp;data[3], ">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.48/@event" parameter="//@types.51/@messages.17/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=".bytes, ">
                  <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.48/@event" parameter="//@types.51/@messages.17/@parameters.2"/>
                  <segments xsi:type="thingML:ExternExpression" expression=".length);&#xA;        "/>
                </segments>
              </segments>
            </actions>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.48/@event" parameter="//@types.51/@messages.17/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0004"/>
              <parameters xsi:type="thingML:ExternExpression" expression="3+">
                <segments xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.48/@event" parameter="//@types.51/@messages.17/@parameters.2"/>
                <segments xsi:type="thingML:ExternExpression" expression=".length"/>
              </parameters>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <internal>
          <event xsi:type="thingML:ReceiveMessage" name="e" port="//@types.49/@ports.0" message="//@types.51/@messages.18"/>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="&#xA;          uint8_t data[1];&#xA;          data[0] = 0x1E;&#xA;        "/>
            <actions xsi:type="thingML:FunctionCallStatement" function="//@types.25/@functions.5">
              <parameters xsi:type="thingML:EventReference" receiveMsg="//@types.25/@behaviour/@substate.2/@internal.49/@event" parameter="//@types.51/@messages.18/@parameters.0"/>
              <parameters xsi:type="thingML:ExternExpression" expression="0x0004"/>
              <parameters xsi:type="thingML:ExternExpression" expression="1"/>
              <parameters xsi:type="thingML:ExternExpression" expression="data"/>
            </actions>
          </action>
        </internal>
        <outgoing target="//@types.25/@behaviour/@substate.0">
          <guard xsi:type="thingML:ExpressionGroup">
            <term xsi:type="thingML:EqualsExpression">
              <lhs xsi:type="thingML:FunctionCallExpression" function="//@types.25/@functions.2"/>
              <rhs xsi:type="thingML:IntegerLiteral"/>
            </term>
          </guard>
          <action xsi:type="thingML:SendAction" port="//@types.25/@ports.0" message="//@types.23/@messages.3"/>
        </outgoing>
        <outgoing target="//@types.25/@behaviour/@substate.0">
          <event xsi:type="thingML:ReceiveMessage" port="//@types.25/@ports.0" message="//@types.23/@messages.1"/>
          <action xsi:type="thingML:SendAction" port="//@types.25/@ports.0" message="//@types.23/@messages.3"/>
        </outgoing>
      </substate>
    </behaviour>
  </types>
  <types xsi:type="thingML:Thing" name="ModuleMsgs" fragment="true">
    <messages name="Start"/>
    <messages name="Stop"/>
    <messages name="Started"/>
    <messages name="Stopped"/>
    <messages name="Failure"/>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="HCIEventMask" ByteSize="8">
    <annotations name="c_type" value="set_event_mask_cp"/>
    <annotations name="c_header" value="#include &lt;bluetooth/bluetooth.h>"/>
    <annotations name="c_header" value="#include &lt;bluetooth/hci.h>"/>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="BTLocalName" ByteSize="248">
    <annotations name="c_type" value="change_local_name_cp"/>
    <annotations name="c_header" value="#include &lt;bluetooth/bluetooth.h>"/>
    <annotations name="c_header" value="#include &lt;bluetooth/hci.h>"/>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="BTAddress" ByteSize="6">
    <annotations name="c_type" value="bdaddr_t"/>
    <annotations name="c_header" value="#include &lt;bluetooth/bluetooth.h>"/>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="BLEAdvertiseData" ByteSize="31">
    <annotations name="c_type" value="ble_adv_data_t"/>
    <annotations name="c_header" value="#ifndef BLE_ADV_DATA_T_H"/>
    <annotations name="c_header" value="#define BLE_ADV_DATA_T_H"/>
    <annotations name="c_header" value="typedef struct { uint8_t bytes[31]; } ble_adv_data_t;"/>
    <annotations name="c_header" value="#endif"/>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="BLERandomPart" ByteSize="8">
    <annotations name="c_type" value="ble_random_part_t"/>
    <annotations name="c_header" value="#ifndef BLE_RANDOM_PART_T_H"/>
    <annotations name="c_header" value="#define BLE_RANDOM_PART_T_H"/>
    <annotations name="c_header" value="typedef struct { uint8_t bytes[8]; } ble_random_part_t;"/>
    <annotations name="c_header" value="#endif"/>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="BLERandomNumber" ByteSize="16">
    <annotations name="c_type" value="ble_random_number_t"/>
    <annotations name="c_header" value="#ifndef BLE_RANDOM_NUMBER_T_H"/>
    <annotations name="c_header" value="#define BLE_RANDOM_NUMBER_T_H"/>
    <annotations name="c_header" value="typedef struct { uint8_t bytes[16]; } ble_random_number_t;"/>
    <annotations name="c_header" value="#endif"/>
  </types>
  <types xsi:type="thingML:Enumeration" name="BLEAdvertisingType">
    <annotations name="c_type" value="uint8_t"/>
    <annotations name="c_byte_size" value="1"/>
    <literals name="ADV_IND">
      <annotations name="enum_val" value="0x00"/>
    </literals>
    <literals name="ADV_DIRECT_IND_HIGH">
      <annotations name="enum_val" value="0x01"/>
    </literals>
    <literals name="ADV_SCAN_IND">
      <annotations name="enum_val" value="0x02"/>
    </literals>
    <literals name="ADV_NONCONN_IND">
      <annotations name="enum_val" value="0x03"/>
    </literals>
    <literals name="ADV_DIRECT_IND_LOW">
      <annotations name="enum_val" value="0x05"/>
    </literals>
  </types>
  <types xsi:type="thingML:Enumeration" name="BLEAddressType">
    <annotations name="c_type" value="uint8_t"/>
    <annotations name="c_byte_size" value="1"/>
    <literals name="PUBLIC">
      <annotations name="enum_val" value="0x00"/>
    </literals>
    <literals name="RANDOM">
      <annotations name="enum_val" value="0x01"/>
    </literals>
  </types>
  <types xsi:type="thingML:Enumeration" name="BLEAdvertisingChannel">
    <annotations name="c_type" value="uint8_t"/>
    <annotations name="c_byte_size" value="1"/>
    <literals name="CHANNEL_37">
      <annotations name="enum_val" value="0x01"/>
    </literals>
    <literals name="CHANNEL_38">
      <annotations name="enum_val" value="0x02"/>
    </literals>
    <literals name="CHANNEL_39">
      <annotations name="enum_val" value="0x04"/>
    </literals>
    <literals name="ALL">
      <annotations name="enum_val" value="0x07"/>
    </literals>
  </types>
  <types xsi:type="thingML:Enumeration" name="BLEAdvertisingFilterPolicy">
    <annotations name="c_type" value="uint8_t"/>
    <annotations name="c_byte_size" value="1"/>
    <literals name="ALL">
      <annotations name="enum_val" value="0x00"/>
    </literals>
    <literals name="CONN_ALL_SCAN_WHITELIST">
      <annotations name="enum_val" value="0x01"/>
    </literals>
    <literals name="CONN_WHITELIST_SCAN_ALL">
      <annotations name="enum_val" value="0x02"/>
    </literals>
    <literals name="CONN_SCAN_WHITELIST">
      <annotations name="enum_val" value="0x03"/>
    </literals>
  </types>
  <types xsi:type="thingML:Enumeration" name="BLEScanType">
    <annotations name="c_type" value="uint8_t"/>
    <annotations name="c_byte_size" value="1"/>
    <literals name="PASSIVE">
      <annotations name="enum_val" value="0x00"/>
    </literals>
    <literals name="ACTIVE">
      <annotations name="enum_val" value="0x01"/>
    </literals>
  </types>
  <types xsi:type="thingML:Enumeration" name="BLEScanFilterPolicy">
    <annotations name="c_type" value="uint8_t"/>
    <annotations name="c_byte_size" value="1"/>
    <literals name="ALL">
      <annotations name="enum_val" value="0x00"/>
    </literals>
    <literals name="ONLY_FROM_WHITELISTED">
      <annotations name="enum_val" value="0x01"/>
    </literals>
    <literals name="DIRECTED_RESOLVABLE">
      <annotations name="enum_val" value="0x02"/>
    </literals>
    <literals name="DIRECTED_RESOLVABLE_WHITELISTED">
      <annotations name="enum_val" value="0x03"/>
    </literals>
  </types>
  <types xsi:type="thingML:Enumeration" name="BLEAdvertisementReportType">
    <annotations name="c_type" value="uint8_t"/>
    <annotations name="c_byte_size" value="1"/>
    <literals name="ADV_IND">
      <annotations name="enum_val" value="0x00"/>
    </literals>
    <literals name="ADV_DIRECT_IND">
      <annotations name="enum_val" value="0x01"/>
    </literals>
    <literals name="ADV_SCAN_IND">
      <annotations name="enum_val" value="0x02"/>
    </literals>
    <literals name="ADV_NONCONN_IND">
      <annotations name="enum_val" value="0x03"/>
    </literals>
    <literals name="SCAN_RSP">
      <annotations name="enum_val" value="0x04"/>
    </literals>
  </types>
  <types xsi:type="thingML:Enumeration" name="BLEInitiatorFilterPolicy">
    <annotations name="c_type" value="uint8_t"/>
    <annotations name="c_byte_size" value="1"/>
    <literals name="WHITELIST_NOT_USED">
      <annotations name="enum_val" value="0x00"/>
    </literals>
    <literals name="WHITELIST_USED">
      <annotations name="enum_val" value="0x01"/>
    </literals>
  </types>
  <types xsi:type="thingML:Enumeration" name="BLELinkRole">
    <annotations name="c_type" value="uint8_t"/>
    <annotations name="c_byte_size" value="1"/>
    <literals name="MASTER">
      <annotations name="enum_val" value="0x00"/>
    </literals>
    <literals name="SLAVE">
      <annotations name="enum_val" value="0x01"/>
    </literals>
  </types>
  <types xsi:type="thingML:Enumeration" name="BTDisconnectReason">
    <annotations name="c_type" value="uint8_t"/>
    <annotations name="c_byte_size" value="1"/>
    <literals name="AUTHENTICATION_FAILURE">
      <annotations name="enum_val" value="0x05"/>
    </literals>
    <literals name="REMOTE_USER">
      <annotations name="enum_val" value="0x13"/>
    </literals>
    <literals name="REMOTE_LOW_RESOURCES">
      <annotations name="enum_val" value="0x14"/>
    </literals>
    <literals name="REMOTE_POWER_OFF">
      <annotations name="enum_val" value="0x15"/>
    </literals>
    <literals name="UNSUPPORTED_REMOTE_FEATURE">
      <annotations name="enum_val" value="0x1A"/>
    </literals>
    <literals name="UNIT_KEY_NOT_SUPPORTED">
      <annotations name="enum_val" value="0x29"/>
    </literals>
    <literals name="UNACCEPTABLE_CONNECTION_PARAMETERS">
      <annotations name="enum_val" value="0x3B"/>
    </literals>
  </types>
  <types xsi:type="thingML:Enumeration" name="ACLPacketBoundaryFlag">
    <annotations name="c_type" value="uint8_t"/>
    <annotations name="c_byte_size" value="1"/>
    <literals name="FIRST_NOFLUSH">
      <annotations name="enum_val" value="0x00"/>
    </literals>
    <literals name="CONT_FRAGMENT">
      <annotations name="enum_val" value="0x01"/>
    </literals>
    <literals name="FIRST_FLUSHABLE">
      <annotations name="enum_val" value="0x02"/>
    </literals>
    <literals name="COMPLETE">
      <annotations name="enum_val" value="0x03"/>
    </literals>
  </types>
  <types xsi:type="thingML:Enumeration" name="ACLBroadcastFlag">
    <annotations name="c_type" value="uint8_t"/>
    <annotations name="c_byte_size" value="1"/>
    <literals name="POINTTOPOINT">
      <annotations name="enum_val" value="0x00"/>
    </literals>
    <literals name="ACTIVE_SLAVE">
      <annotations name="enum_val" value="0x01"/>
    </literals>
    <literals name="PARKED_SLAVE">
      <annotations name="enum_val" value="0x02"/>
    </literals>
  </types>
  <types xsi:type="thingML:Thing" name="HCIControllerMsgs" fragment="true">
    <messages name="Reset"/>
    <messages name="ResetCompleted">
      <parameters name="NumberAllowedCommandPackets">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Status">
        <typeRef type="//@types.1"/>
      </parameters>
    </messages>
    <messages name="SetEventMask">
      <parameters name="Mask">
        <typeRef type="//@types.27"/>
      </parameters>
    </messages>
    <messages name="SetEventMaskAll"/>
    <messages name="SetEventMaskCompleted">
      <parameters name="NumberAllowedCommandPackets">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Status">
        <typeRef type="//@types.1"/>
      </parameters>
    </messages>
    <messages name="SetLocalName">
      <parameters name="Name">
        <typeRef type="//@types.28"/>
      </parameters>
    </messages>
    <messages name="SetLocalNameCompleted">
      <parameters name="NumberAllowedCommandPackets">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Status">
        <typeRef type="//@types.1"/>
      </parameters>
    </messages>
    <messages name="Disconnect">
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Reason">
        <typeRef type="//@types.42"/>
      </parameters>
    </messages>
    <messages name="DisconnectStatus">
      <parameters name="NumberAllowedCommandPackets">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Status">
        <typeRef type="//@types.1"/>
      </parameters>
    </messages>
    <messages name="DisconnectionCompleted">
      <parameters name="Status">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Reason">
        <typeRef type="//@types.42"/>
      </parameters>
    </messages>
    <messages name="EncryptionChanged">
      <parameters name="Status">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Enabled">
        <typeRef type="//@types.1"/>
      </parameters>
    </messages>
    <messages name="SetLEEventMask">
      <parameters name="Mask">
        <typeRef type="//@types.27"/>
      </parameters>
    </messages>
    <messages name="SetLEEventMaskAll"/>
    <messages name="SetLEEventMaskCompleted">
      <parameters name="NumberAllowedCommandPackets">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Status">
        <typeRef type="//@types.1"/>
      </parameters>
    </messages>
    <messages name="SetLEAdvertisementParameters">
      <parameters name="MinInterval">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="MaxInterval">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Type">
        <typeRef type="//@types.33"/>
      </parameters>
      <parameters name="OwnAddressType">
        <typeRef type="//@types.34"/>
      </parameters>
      <parameters name="PeerAddressType">
        <typeRef type="//@types.34"/>
      </parameters>
      <parameters name="PeerAddress">
        <typeRef type="//@types.29"/>
      </parameters>
      <parameters name="Channel">
        <typeRef type="//@types.35"/>
      </parameters>
      <parameters name="FilterPolicy">
        <typeRef type="//@types.36"/>
      </parameters>
    </messages>
    <messages name="SetLEAdvertisementParametersCompleted">
      <parameters name="NumberAllowedCommandPackets">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Status">
        <typeRef type="//@types.1"/>
      </parameters>
    </messages>
    <messages name="SetLEAdvertiseEnable">
      <parameters name="Enable">
        <typeRef type="//@types.1"/>
      </parameters>
    </messages>
    <messages name="SetLEAdvertiseEnableCompleted">
      <parameters name="NumberAllowedCommandPackets">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Status">
        <typeRef type="//@types.1"/>
      </parameters>
    </messages>
    <messages name="SetLEAdvertisingData">
      <parameters name="Length">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Data">
        <typeRef type="//@types.30"/>
      </parameters>
    </messages>
    <messages name="SetLEAdvertisingDataCompleted">
      <parameters name="NumberAllowedCommandPackets">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Status">
        <typeRef type="//@types.1"/>
      </parameters>
    </messages>
    <messages name="SetLEScanResponseData">
      <parameters name="Length">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Data">
        <typeRef type="//@types.30"/>
      </parameters>
    </messages>
    <messages name="SetLEScanResponseDataCompleted">
      <parameters name="NumberAllowedCommandPackets">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Status">
        <typeRef type="//@types.1"/>
      </parameters>
    </messages>
    <messages name="LEAdvertisementReport">
      <parameters name="Type">
        <typeRef type="//@types.39"/>
      </parameters>
      <parameters name="AddressType">
        <typeRef type="//@types.34"/>
      </parameters>
      <parameters name="Address">
        <typeRef type="//@types.29"/>
      </parameters>
      <parameters name="Length">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Data">
        <typeRef type="//@types.30"/>
      </parameters>
    </messages>
    <messages name="SetLEScanParameters">
      <parameters name="Type">
        <typeRef type="//@types.37"/>
      </parameters>
      <parameters name="Interval">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Window">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="OwnAddressType">
        <typeRef type="//@types.34"/>
      </parameters>
      <parameters name="FilterPolicy">
        <typeRef type="//@types.38"/>
      </parameters>
    </messages>
    <messages name="SetLEScanParametersCompleted">
      <parameters name="NumberAllowedCommandPackets">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Status">
        <typeRef type="//@types.1"/>
      </parameters>
    </messages>
    <messages name="SetLEScanEnable">
      <parameters name="Enable">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="FilterDuplicates">
        <typeRef type="//@types.1"/>
      </parameters>
    </messages>
    <messages name="SetLEScanEnableCompleted">
      <parameters name="NumberAllowedCommandPackets">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Status">
        <typeRef type="//@types.1"/>
      </parameters>
    </messages>
    <messages name="LECreateConnection">
      <parameters name="Interval">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Window">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="FilterPolicy">
        <typeRef type="//@types.40"/>
      </parameters>
      <parameters name="PeerAddressType">
        <typeRef type="//@types.34"/>
      </parameters>
      <parameters name="PeerAddress">
        <typeRef type="//@types.29"/>
      </parameters>
      <parameters name="OwnAddressType">
        <typeRef type="//@types.34"/>
      </parameters>
      <parameters name="ConnIntervalMin">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="ConnIntervalMax">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="ConnLatency">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="SupervisionTimeout">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="CELengthMin">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="CELengthMax">
        <typeRef type="//@types.3"/>
      </parameters>
    </messages>
    <messages name="LECreateConnectionStatus">
      <parameters name="NumberAllowedCommandPackets">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Status">
        <typeRef type="//@types.1"/>
      </parameters>
    </messages>
    <messages name="LECreateConnectionCancel"/>
    <messages name="LECreateConnectionCancelCompleted">
      <parameters name="NumberAllowedCommandPackets">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Status">
        <typeRef type="//@types.1"/>
      </parameters>
    </messages>
    <messages name="LEConnectionComplete">
      <parameters name="Status">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Role">
        <typeRef type="//@types.41"/>
      </parameters>
      <parameters name="PeerAddressType">
        <typeRef type="//@types.34"/>
      </parameters>
      <parameters name="PeerAddress">
        <typeRef type="//@types.29"/>
      </parameters>
      <parameters name="ConnInterval">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="ConnLatency">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="SupervisionTimeout">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="MasterClockAccuracy">
        <typeRef type="//@types.1"/>
      </parameters>
    </messages>
    <messages name="LEEnhancedConnectionComplete">
      <parameters name="Status">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Role">
        <typeRef type="//@types.41"/>
      </parameters>
      <parameters name="PeerAddressType">
        <typeRef type="//@types.34"/>
      </parameters>
      <parameters name="PeerAddress">
        <typeRef type="//@types.29"/>
      </parameters>
      <parameters name="LocalResolvablePrivateAddress">
        <typeRef type="//@types.29"/>
      </parameters>
      <parameters name="PeerResolvablePrivateAddress">
        <typeRef type="//@types.29"/>
      </parameters>
      <parameters name="ConnInterval">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="ConnLatency">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="SupervisionTimeout">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="MasterClockAccuracy">
        <typeRef type="//@types.1"/>
      </parameters>
    </messages>
    <messages name="LERand"/>
    <messages name="LERandCompleted">
      <parameters name="NumberAllowedCommandPackets">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Status">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Random">
        <typeRef type="//@types.31"/>
      </parameters>
    </messages>
    <messages name="LEEncrypt">
      <parameters name="Key">
        <typeRef type="//@types.32"/>
      </parameters>
      <parameters name="Plaintext">
        <typeRef type="//@types.32"/>
      </parameters>
    </messages>
    <messages name="LEEncryptCompleted">
      <parameters name="NumberAllowedCommandPackets">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Status">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Encrypted">
        <typeRef type="//@types.32"/>
      </parameters>
    </messages>
    <messages name="LEStartEncryption">
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Random">
        <typeRef type="//@types.31"/>
      </parameters>
      <parameters name="EDIV">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="LTK">
        <typeRef type="//@types.32"/>
      </parameters>
    </messages>
    <messages name="LEStartEncryptionStatus">
      <parameters name="NumberAllowedCommandPackets">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="Status">
        <typeRef type="//@types.1"/>
      </parameters>
    </messages>
  </types>
  <types xsi:type="thingML:Thing" name="SMP" fragment="true" includes="//@types.50">
    <ports xsi:type="thingML:RequiredPort" name="SMP" sends="//@types.50/@messages.0 //@types.50/@messages.1 //@types.50/@messages.2 //@types.50/@messages.3 //@types.50/@messages.4 //@types.50/@messages.5 //@types.50/@messages.6 //@types.50/@messages.7 //@types.50/@messages.8 //@types.50/@messages.9 //@types.50/@messages.10 //@types.50/@messages.11 //@types.50/@messages.12 //@types.50/@messages.13" receives="//@types.50/@messages.0 //@types.50/@messages.1 //@types.50/@messages.2 //@types.50/@messages.3 //@types.50/@messages.4 //@types.50/@messages.5 //@types.50/@messages.6 //@types.50/@messages.7 //@types.50/@messages.8 //@types.50/@messages.9 //@types.50/@messages.10 //@types.50/@messages.11 //@types.50/@messages.12 //@types.50/@messages.13"/>
  </types>
  <types xsi:type="thingML:Thing" name="SMPProxy" fragment="true" includes="//@types.50">
    <ports xsi:type="thingML:ProvidedPort" name="SMP" sends="//@types.50/@messages.0 //@types.50/@messages.1 //@types.50/@messages.2 //@types.50/@messages.3 //@types.50/@messages.4 //@types.50/@messages.5 //@types.50/@messages.6 //@types.50/@messages.7 //@types.50/@messages.8 //@types.50/@messages.9 //@types.50/@messages.10 //@types.50/@messages.11 //@types.50/@messages.12 //@types.50/@messages.13" receives="//@types.50/@messages.0 //@types.50/@messages.1 //@types.50/@messages.2 //@types.50/@messages.3 //@types.50/@messages.4 //@types.50/@messages.5 //@types.50/@messages.6 //@types.50/@messages.7 //@types.50/@messages.8 //@types.50/@messages.9 //@types.50/@messages.10 //@types.50/@messages.11 //@types.50/@messages.12 //@types.50/@messages.13"/>
  </types>
  <types xsi:type="thingML:Thing" name="ATT" fragment="true" includes="//@types.51 //@types.52">
    <ports xsi:type="thingML:RequiredPort" name="ATT" sends="//@types.51/@messages.0 //@types.51/@messages.1 //@types.51/@messages.2 //@types.51/@messages.3 //@types.51/@messages.4 //@types.51/@messages.5 //@types.51/@messages.6 //@types.51/@messages.7 //@types.51/@messages.8 //@types.51/@messages.9 //@types.51/@messages.10 //@types.51/@messages.11 //@types.51/@messages.12 //@types.51/@messages.13 //@types.51/@messages.14 //@types.51/@messages.15 //@types.51/@messages.16 //@types.51/@messages.17 //@types.51/@messages.18" receives="//@types.51/@messages.0 //@types.51/@messages.1 //@types.51/@messages.2 //@types.51/@messages.3 //@types.51/@messages.4 //@types.51/@messages.5 //@types.51/@messages.6 //@types.51/@messages.7 //@types.51/@messages.8 //@types.51/@messages.9 //@types.51/@messages.10 //@types.51/@messages.11 //@types.51/@messages.12 //@types.51/@messages.13 //@types.51/@messages.14 //@types.51/@messages.15 //@types.51/@messages.16 //@types.51/@messages.17 //@types.51/@messages.18"/>
  </types>
  <types xsi:type="thingML:Thing" name="ATTProxy" fragment="true" includes="//@types.51 //@types.52">
    <ports xsi:type="thingML:ProvidedPort" name="ATT" sends="//@types.51/@messages.0 //@types.51/@messages.1 //@types.51/@messages.2 //@types.51/@messages.3 //@types.51/@messages.4 //@types.51/@messages.5 //@types.51/@messages.6 //@types.51/@messages.7 //@types.51/@messages.8 //@types.51/@messages.9 //@types.51/@messages.10 //@types.51/@messages.11 //@types.51/@messages.12 //@types.51/@messages.13 //@types.51/@messages.14 //@types.51/@messages.15 //@types.51/@messages.16 //@types.51/@messages.17 //@types.51/@messages.18" receives="//@types.51/@messages.0 //@types.51/@messages.1 //@types.51/@messages.2 //@types.51/@messages.3 //@types.51/@messages.4 //@types.51/@messages.5 //@types.51/@messages.6 //@types.51/@messages.7 //@types.51/@messages.8 //@types.51/@messages.9 //@types.51/@messages.10 //@types.51/@messages.11 //@types.51/@messages.12 //@types.51/@messages.13 //@types.51/@messages.14 //@types.51/@messages.15 //@types.51/@messages.16 //@types.51/@messages.17 //@types.51/@messages.18"/>
  </types>
  <types xsi:type="thingML:Thing" name="SMPMsgs" fragment="true">
    <messages name="SMPPairingRequest">
      <parameters name="Handle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="IOCapability">
        <typeRef type="//@types.54"/>
      </parameters>
      <parameters name="OOBDataPresent">
        <typeRef type="//@types.6"/>
      </parameters>
      <parameters name="Bonding">
        <typeRef type="//@types.6"/>
      </parameters>
      <parameters name="MITM">
        <typeRef type="//@types.6"/>
      </parameters>
      <parameters name="SecureConnection">
        <typeRef type="//@types.6"/>
      </parameters>
      <parameters name="Keypress">
        <typeRef type="//@types.6"/>
      </parameters>
      <parameters name="MaximumEncryptionKeySize">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="InitiatorKeyDistribution">
        <typeRef type="//@types.55"/>
      </parameters>
      <parameters name="ResponderKeyDistribution">
        <typeRef type="//@types.55"/>
      </parameters>
    </messages>
    <messages name="SMPPairingResponse">
      <parameters name="Handle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="IOCapability">
        <typeRef type="//@types.54"/>
      </parameters>
      <parameters name="OOBDataPresent">
        <typeRef type="//@types.6"/>
      </parameters>
      <parameters name="Bonding">
        <typeRef type="//@types.6"/>
      </parameters>
      <parameters name="MITM">
        <typeRef type="//@types.6"/>
      </parameters>
      <parameters name="SecureConnection">
        <typeRef type="//@types.6"/>
      </parameters>
      <parameters name="Keypress">
        <typeRef type="//@types.6"/>
      </parameters>
      <parameters name="MaximumEncryptionKeySize">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="InitiatorKeyDistribution">
        <typeRef type="//@types.55"/>
      </parameters>
      <parameters name="ResponderKeyDistribution">
        <typeRef type="//@types.55"/>
      </parameters>
    </messages>
    <messages name="SMPPairingConfirm">
      <parameters name="Handle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="ConfirmValue">
        <typeRef type="//@types.32"/>
      </parameters>
    </messages>
    <messages name="SMPPairingRandom">
      <parameters name="Handle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="RandomValue">
        <typeRef type="//@types.32"/>
      </parameters>
    </messages>
    <messages name="SMPPairingFailed">
      <parameters name="Handle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Reason">
        <typeRef type="//@types.56"/>
      </parameters>
    </messages>
    <messages name="SMPPairingPublicKey">
      <parameters name="Handle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="KeyX">
        <typeRef type="//@types.53"/>
      </parameters>
      <parameters name="KeyY">
        <typeRef type="//@types.53"/>
      </parameters>
    </messages>
    <messages name="SMPPairingDHKeyCheck">
      <parameters name="Handle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="DHKeyCheck">
        <typeRef type="//@types.32"/>
      </parameters>
    </messages>
    <messages name="SMPKeypressNotification">
      <parameters name="Handle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Type">
        <typeRef type="//@types.57"/>
      </parameters>
    </messages>
    <messages name="SMPEncryptionInformation">
      <parameters name="Handle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="LongTermKey">
        <typeRef type="//@types.32"/>
      </parameters>
    </messages>
    <messages name="SMPMasterIdentification">
      <parameters name="Handle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="EDIV">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Rand">
        <typeRef type="//@types.31"/>
      </parameters>
    </messages>
    <messages name="SMPIdentityInformation">
      <parameters name="Handle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="IdentityResolvingKey">
        <typeRef type="//@types.32"/>
      </parameters>
    </messages>
    <messages name="SMPIdentityAddressInformation">
      <parameters name="Handle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="AddressType">
        <typeRef type="//@types.34"/>
      </parameters>
      <parameters name="Address">
        <typeRef type="//@types.29"/>
      </parameters>
    </messages>
    <messages name="SMPSigningInformation">
      <parameters name="Handle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="SignatureKey">
        <typeRef type="//@types.32"/>
      </parameters>
    </messages>
    <messages name="SMPSecurityRequest">
      <parameters name="Handle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Bonding">
        <typeRef type="//@types.6"/>
      </parameters>
      <parameters name="MITM">
        <typeRef type="//@types.6"/>
      </parameters>
      <parameters name="SecureConnection">
        <typeRef type="//@types.6"/>
      </parameters>
      <parameters name="Keypress">
        <typeRef type="//@types.6"/>
      </parameters>
    </messages>
  </types>
  <types xsi:type="thingML:Thing" name="ATTMsgs" fragment="true">
    <messages name="ATTFindInformationRequest">
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="StartingHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="EndingHandle">
        <typeRef type="//@types.3"/>
      </parameters>
    </messages>
    <messages name="ATTFindInformationResponse">
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Format">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="InformationData">
        <typeRef type="//@types.59"/>
      </parameters>
    </messages>
    <messages name="ATTFindInformationError">
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="AttributeHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Error">
        <typeRef type="//@types.60"/>
      </parameters>
    </messages>
    <messages name="ATTReadByTypeRequest">
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="StartingHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="EndingHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="AttributeType">
        <typeRef type="//@types.58"/>
      </parameters>
    </messages>
    <messages name="ATTReadByTypeResponse">
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Length">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="AttributeDataList">
        <typeRef type="//@types.59"/>
      </parameters>
    </messages>
    <messages name="ATTReadByTypeError">
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="AttributeHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Error">
        <typeRef type="//@types.60"/>
      </parameters>
    </messages>
    <messages name="ATTReadRequest">
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="AttributeHandle">
        <typeRef type="//@types.3"/>
      </parameters>
    </messages>
    <messages name="ATTReadResponse">
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="AttributeValue">
        <typeRef type="//@types.59"/>
      </parameters>
    </messages>
    <messages name="ATTReadError">
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="AttributeHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Error">
        <typeRef type="//@types.60"/>
      </parameters>
    </messages>
    <messages name="ATTReadByGroupTypeRequest">
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="StartingHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="EndingHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="AttributeGroupType">
        <typeRef type="//@types.58"/>
      </parameters>
    </messages>
    <messages name="ATTReadByGroupTypeResponse">
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Length">
        <typeRef type="//@types.1"/>
      </parameters>
      <parameters name="AttributeDataList">
        <typeRef type="//@types.59"/>
      </parameters>
    </messages>
    <messages name="ATTReadByGroupTypeError">
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="AttributeHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Error">
        <typeRef type="//@types.60"/>
      </parameters>
    </messages>
    <messages name="ATTWriteRequest">
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="AttributeHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="AttributeValue">
        <typeRef type="//@types.59"/>
      </parameters>
    </messages>
    <messages name="ATTWriteResponse">
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
    </messages>
    <messages name="ATTWriteError">
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="AttributeHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Error">
        <typeRef type="//@types.60"/>
      </parameters>
    </messages>
    <messages name="ATTWriteCommand">
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="AttributeHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="AttributeValue">
        <typeRef type="//@types.59"/>
      </parameters>
    </messages>
    <messages name="ATTHandleValueNotification">
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="AttributeHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="AttributeValue">
        <typeRef type="//@types.59"/>
      </parameters>
    </messages>
    <messages name="ATTHandleValueIndication">
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="AttributeHandle">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="AttributeValue">
        <typeRef type="//@types.59"/>
      </parameters>
    </messages>
    <messages name="ATTHandleValueConfirmation">
      <parameters name="ConnectionHandle">
        <typeRef type="//@types.3"/>
      </parameters>
    </messages>
  </types>
  <types xsi:type="thingML:Thing" name="UUIDFunctions" fragment="true">
    <functions name="ReadUUID">
      <parameters name="Length">
        <typeRef type="//@types.3"/>
      </parameters>
      <parameters name="Data">
        <typeRef type="//@types.5"/>
      </parameters>
      <typeRef type="//@types.58"/>
      <body xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:LocalVariable" name="Value">
          <typeRef type="//@types.58"/>
          <init xsi:type="thingML:ExternExpression" expression="{ 0xFB, 0x34, 0x9B, 0x5F, 0x80, 0x00/*-*/, 0x00, 0x80/*-*/, 0x00, 0x10/*-*/, 0x00, 0x00/*-*/, 0x00, 0x00, 0x00, 0x00 }"/>
        </actions>
        <actions xsi:type="thingML:ConditionalAction">
          <condition xsi:type="thingML:EqualsExpression">
            <lhs xsi:type="thingML:PropertyReference" property="//@types.52/@functions.0/@parameters.0"/>
            <rhs xsi:type="thingML:IntegerLiteral" intValue="16"/>
          </condition>
          <action xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ExternStatement" statement="memcpy(&amp;">
              <segments xsi:type="thingML:PropertyReference" property="//@types.52/@functions.0/@body/@actions.0"/>
              <segments xsi:type="thingML:ExternExpression" expression=", ">
                <segments xsi:type="thingML:PropertyReference" property="//@types.52/@functions.0/@parameters.1"/>
                <segments xsi:type="thingML:ExternExpression" expression=", 16);"/>
              </segments>
            </actions>
          </action>
          <elseAction xsi:type="thingML:ActionBlock">
            <actions xsi:type="thingML:ConditionalAction">
              <condition xsi:type="thingML:OrExpression">
                <lhs xsi:type="thingML:EqualsExpression">
                  <lhs xsi:type="thingML:PropertyReference" property="//@types.52/@functions.0/@parameters.0"/>
                  <rhs xsi:type="thingML:IntegerLiteral" intValue="2"/>
                </lhs>
                <rhs xsi:type="thingML:EqualsExpression">
                  <lhs xsi:type="thingML:PropertyReference" property="//@types.52/@functions.0/@parameters.0"/>
                  <rhs xsi:type="thingML:IntegerLiteral" intValue="4"/>
                </rhs>
              </condition>
              <action xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:ExternStatement" statement="memcpy(&amp;(((uint8_t*)&amp;">
                  <segments xsi:type="thingML:PropertyReference" property="//@types.52/@functions.0/@body/@actions.0"/>
                  <segments xsi:type="thingML:ExternExpression" expression=")[12]), ">
                    <segments xsi:type="thingML:PropertyReference" property="//@types.52/@functions.0/@parameters.1"/>
                    <segments xsi:type="thingML:ExternExpression" expression=", ">
                      <segments xsi:type="thingML:PropertyReference" property="//@types.52/@functions.0/@parameters.0"/>
                      <segments xsi:type="thingML:ExternExpression" expression=");"/>
                    </segments>
                  </segments>
                </actions>
              </action>
              <elseAction xsi:type="thingML:ActionBlock">
                <actions xsi:type="thingML:PrintAction">
                  <msg xsi:type="thingML:StringLiteral" stringValue="[ERROR]: Trying to decode a UUID that was not 16, 32 or 128 bits long!\n"/>
                </actions>
              </elseAction>
            </actions>
          </elseAction>
        </actions>
        <actions xsi:type="thingML:ReturnAction">
          <exp xsi:type="thingML:PropertyReference" property="//@types.52/@functions.0/@body/@actions.0"/>
        </actions>
      </body>
    </functions>
    <functions name="MakeUUID">
      <parameters name="Text">
        <typeRef type="//@types.4"/>
      </parameters>
      <typeRef type="//@types.58"/>
      <body xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:LocalVariable" name="Value">
          <typeRef type="//@types.58"/>
          <init xsi:type="thingML:ExternExpression" expression="{ 0xFB, 0x34, 0x9B, 0x5F, 0x80, 0x00/*-*/, 0x00, 0x80/*-*/, 0x00, 0x10/*-*/, 0x00, 0x00/*-*/, 0x00, 0x00, 0x00, 0x00 }"/>
        </actions>
        <actions xsi:type="thingML:ExternStatement" statement="&#xA;      uint8_t *val = (uint8_t*)&amp;">
          <segments xsi:type="thingML:PropertyReference" property="//@types.52/@functions.1/@body/@actions.0"/>
          <segments xsi:type="thingML:ExternExpression" expression=";&#xA;      const char *str = ">
            <segments xsi:type="thingML:PropertyReference" property="//@types.52/@functions.1/@parameters.0"/>
            <segments xsi:type="thingML:ExternExpression" expression=";&#xA;      size_t length = strlen(str);&#xA;      if (length == 36 &amp;&amp; str[8] == '-' &amp;&amp; str[13] == '-' &amp;&amp; str[18] == '-' &amp;&amp; str[23] == '-') {&#xA;        // 128-bit UUID&#xA;        if (sscanf(str, &quot;%02hhx%02hhx%02hhx%02hhx-%02hhx%02hhx-%02hhx%02hhx-%02hhx%02hhx-%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx&quot;&#xA;                      , &amp;val[15], &amp;val[14], &amp;val[13], &amp;val[12], &amp;val[11], &amp;val[10], &amp;val[9], &amp;val[8], &amp;val[7], &amp;val[6], &amp;val[5], &amp;val[4], &amp;val[3], &amp;val[2], &amp;val[1], &amp;val[0] ) == 16 ) {&#xA;            // Should be valid, and have stored the values in the Value-memory&#xA;        } else {&#xA;          printf(&quot;[ERROR]: String is not a valid UUID!\n&quot;);&#xA;        }&#xA;&#xA;      } else if (length == 4 || length == 6 || length == 8 || length == 10) {&#xA;        // 16-bit or 32-bit UUID&#xA;        uint32_t id;&#xA;        char *end = NULL;&#xA;        id = strtol(str, &amp;end, 16);&#xA;&#xA;        if (id &amp;&amp; end &amp;&amp; *end == '\0') {&#xA;          // Should be valid&#xA;          *(uint32_t*)&amp;val[12] = id;&#xA;        } else {&#xA;          printf(&quot;[ERROR]: String is not a valid UUID!\n&quot;);&#xA;        }&#xA;      } else {&#xA;        printf(&quot;[ERROR]: String is not a valid UUID!\n&quot;);&#xA;      }&#xA;    "/>
          </segments>
        </actions>
        <actions xsi:type="thingML:ReturnAction">
          <exp xsi:type="thingML:PropertyReference" property="//@types.52/@functions.1/@body/@actions.0"/>
        </actions>
      </body>
    </functions>
    <functions name="PrintUUID">
      <parameters name="ID">
        <typeRef type="//@types.58"/>
      </parameters>
      <body xsi:type="thingML:ActionBlock">
        <actions xsi:type="thingML:ExternStatement" statement="&#xA;      uint8_t *v = &amp;">
          <segments xsi:type="thingML:PropertyReference" property="//@types.52/@functions.2/@parameters.0"/>
          <segments xsi:type="thingML:ExternExpression" expression=";&#xA;      printf(&quot;%2.2X%2.2X%2.2X%2.2X-&quot;,v[15],v[14],v[13],v[12]);&#xA;      printf(&quot;%2.2X%2.2X-&quot;,v[11],v[10]);&#xA;      printf(&quot;%2.2X%2.2X-&quot;,v[9],v[8]);&#xA;      printf(&quot;%2.2X%2.2X-&quot;,v[7],v[6]);&#xA;      printf(&quot;%2.2X%2.2X%2.2X%2.2X%2.2X%2.2X\n&quot;,v[5],v[4],v[3],v[2],v[1],v[0]);&#xA;    "/>
        </actions>
      </body>
    </functions>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="SMPPublicKey" ByteSize="32">
    <annotations name="c_type" value="smp_public_key_t"/>
    <annotations name="c_header" value="#ifndef SMP_PUBLIC_KEY_T_H"/>
    <annotations name="c_header" value="#define SMP_PUBLIC_KEY_T_H"/>
    <annotations name="c_header" value="typedef struct { uint8_t bytes[32]; } smp_public_key_t;"/>
    <annotations name="c_header" value="#endif"/>
  </types>
  <types xsi:type="thingML:Enumeration" name="SMPIOCapabilities">
    <annotations name="c_type" value="uint8_t"/>
    <annotations name="c_byte_size" value="1"/>
    <literals name="DISPLAY_ONLY">
      <annotations name="enum_val" value="0x00"/>
    </literals>
    <literals name="DISPLAY_YESNO">
      <annotations name="enum_val" value="0x01"/>
    </literals>
    <literals name="KEYBOARD_ONLY">
      <annotations name="enum_val" value="0x02"/>
    </literals>
    <literals name="NO_INPUT_NO_OUTPUT">
      <annotations name="enum_val" value="0x03"/>
    </literals>
    <literals name="KEYBOARD_DISPLAY">
      <annotations name="enum_val" value="0x04"/>
    </literals>
  </types>
  <types xsi:type="thingML:Enumeration" name="SMPKeyDistribution">
    <annotations name="c_type" value="uint8_t"/>
    <annotations name="c_byte_size" value="1"/>
    <literals name="NOENCKEY_NOIDKEY_NOSIGN_NOLINKKEY">
      <annotations name="enum_val" value="0x00"/>
    </literals>
    <literals name="ENCKEY_NOIDKEY_NOSIGN_NOLINKKEY">
      <annotations name="enum_val" value="0x01"/>
    </literals>
    <literals name="NOENCKEY_IDKEY_NOSIGN_NOLINKKEY">
      <annotations name="enum_val" value="0x02"/>
    </literals>
    <literals name="ENCKEY_IDKEY_NOSIGN_NOLINKKEY">
      <annotations name="enum_val" value="0x03"/>
    </literals>
    <literals name="NOENCKEY_NOIDKEY_SIGN_NOLINKKEY">
      <annotations name="enum_val" value="0x04"/>
    </literals>
    <literals name="ENCKEY_NOIDKEY_SIGN_NOLINKKEY">
      <annotations name="enum_val" value="0x05"/>
    </literals>
    <literals name="NOENCKEY_IDKEY_SIGN_NOLINKKEY">
      <annotations name="enum_val" value="0x06"/>
    </literals>
    <literals name="ENCKEY_IDKEY_SIGN_NOLINKKEY">
      <annotations name="enum_val" value="0x07"/>
    </literals>
    <literals name="NOENCKEY_NOIDKEY_NOSIGN_LINKKEY">
      <annotations name="enum_val" value="0x08"/>
    </literals>
    <literals name="ENCKEY_NOIDKEY_NOSIGN_LINKKEY">
      <annotations name="enum_val" value="0x09"/>
    </literals>
    <literals name="NOENCKEY_IDKEY_NOSIGN_LINKKEY">
      <annotations name="enum_val" value="0x0A"/>
    </literals>
    <literals name="ENCKEY_IDKEY_NOSIGN_LINKKEY">
      <annotations name="enum_val" value="0x0B"/>
    </literals>
    <literals name="NOENCKEY_NOIDKEY_SIGN_LINKKEY">
      <annotations name="enum_val" value="0x0C"/>
    </literals>
    <literals name="ENCKEY_NOIDKEY_SIGN_LINKKEY">
      <annotations name="enum_val" value="0x0D"/>
    </literals>
    <literals name="NOENCKEY_IDKEY_SIGN_LINKKEY">
      <annotations name="enum_val" value="0x0E"/>
    </literals>
    <literals name="ENCKEY_IDKEY_SIGN_LINKKEY">
      <annotations name="enum_val" value="0x0F"/>
    </literals>
  </types>
  <types xsi:type="thingML:Enumeration" name="SMPPairingFailReason">
    <annotations name="c_type" value="uint8_t"/>
    <annotations name="c_byte_size" value="1"/>
    <literals name="PASSKEY_ENTRY_FAILED">
      <annotations name="enum_val" value="0x01"/>
    </literals>
    <literals name="OOB_NOT_AVAILABLE">
      <annotations name="enum_val" value="0x02"/>
    </literals>
    <literals name="AUTHENTICATION_REQUIREMENTS">
      <annotations name="enum_val" value="0x03"/>
    </literals>
    <literals name="CONFIRM_VALUE_FAILED">
      <annotations name="enum_val" value="0x03"/>
    </literals>
    <literals name="PAIRING_NOT_SUPPORTED">
      <annotations name="enum_val" value="0x04"/>
    </literals>
    <literals name="ENCRYPTION_KEY_SIZE">
      <annotations name="enum_val" value="0x06"/>
    </literals>
    <literals name="COMMAND_NOT_SUPPORTED">
      <annotations name="enum_val" value="0x07"/>
    </literals>
    <literals name="UNSPECIFIED">
      <annotations name="enum_val" value="0x08"/>
    </literals>
    <literals name="REPEATED_ATTEMPTS">
      <annotations name="enum_val" value="0x09"/>
    </literals>
    <literals name="INVALID_PARAMETERS">
      <annotations name="enum_val" value="0x0A"/>
    </literals>
    <literals name="DHKEY_FAILED">
      <annotations name="enum_val" value="0x0B"/>
    </literals>
    <literals name="NUMERIC_COMPARISON_FAILED">
      <annotations name="enum_val" value="0x0C"/>
    </literals>
    <literals name="BREDR_PAIRING_PROGRESS">
      <annotations name="enum_val" value="0x0D"/>
    </literals>
    <literals name="CROSS_TRANSPORT_KEY">
      <annotations name="enum_val" value="0x0E"/>
    </literals>
  </types>
  <types xsi:type="thingML:Enumeration" name="SMPKeypressNotification">
    <annotations name="c_type" value="uint8_t"/>
    <annotations name="c_byte_size" value="1"/>
    <literals name="ENTRY_STARTED">
      <annotations name="enum_val" value="0x00"/>
    </literals>
    <literals name="DIGIT_ENTERED">
      <annotations name="enum_val" value="0x01"/>
    </literals>
    <literals name="DIGIT_ERASED">
      <annotations name="enum_val" value="0x02"/>
    </literals>
    <literals name="CLEARED">
      <annotations name="enum_val" value="0x03"/>
    </literals>
    <literals name="ENTRY_COMPLETED">
      <annotations name="enum_val" value="0x04"/>
    </literals>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="UUID" ByteSize="16">
    <annotations name="c_type" value="ble_uuid_t"/>
    <annotations name="c_header" value="#ifndef BLE_UUID_T_H"/>
    <annotations name="c_header" value="#define BLE_UUID_T_H"/>
    <annotations name="c_header" value="typedef struct { uint8_t bytes[16]; } ble_uuid_t;"/>
    <annotations name="c_header" value="#endif"/>
  </types>
  <types xsi:type="thingML:PrimitiveType" name="GATTData" ByteSize="24">
    <annotations name="c_type" value="ble_gatt_data_t"/>
    <annotations name="c_header" value="#ifndef BLE_GATT_DATA_T_H"/>
    <annotations name="c_header" value="#define BLE_GATT_DATA_T_H"/>
    <annotations name="c_header" value="typedef struct { uint8_t length; uint8_t bytes[23]; } ble_gatt_data_t;"/>
    <annotations name="c_header" value="#endif"/>
  </types>
  <types xsi:type="thingML:Enumeration" name="ATTErrorCode">
    <annotations name="c_type" value="uint8_t"/>
    <annotations name="c_byte_size" value="1"/>
    <literals name="INVALID_HANDLE">
      <annotations name="enum_val" value="0x01"/>
    </literals>
    <literals name="READ_NOT_PERMITTED">
      <annotations name="enum_val" value="0x02"/>
    </literals>
    <literals name="WRITE_NOT_PERMITTED">
      <annotations name="enum_val" value="0x03"/>
    </literals>
    <literals name="INVALID_PDU">
      <annotations name="enum_val" value="0x04"/>
    </literals>
    <literals name="INSUFFICIENT_AUTHENTICATION">
      <annotations name="enum_val" value="0x05"/>
    </literals>
    <literals name="REQUEST_NOT_SUPPORTED">
      <annotations name="enum_val" value="0x06"/>
    </literals>
    <literals name="INVALID_OFFSET">
      <annotations name="enum_val" value="0x07"/>
    </literals>
    <literals name="INSUFFICIENT_AUTHORIZATION">
      <annotations name="enum_val" value="0x08"/>
    </literals>
    <literals name="PREPARE_QUEUE_FULL">
      <annotations name="enum_val" value="0x09"/>
    </literals>
    <literals name="ATTRIBUTE_NOT_FOUND">
      <annotations name="enum_val" value="0x0A"/>
    </literals>
    <literals name="ATTRIBUTE_NOT_LONG">
      <annotations name="enum_val" value="0x0B"/>
    </literals>
    <literals name="INSUFFICIENT_ENCRYPTION_KEY_SIZE">
      <annotations name="enum_val" value="0x0C"/>
    </literals>
    <literals name="INVALID_ATTRIBUTE_VALUE_LENGTH">
      <annotations name="enum_val" value="0x0D"/>
    </literals>
    <literals name="UNLIKELY_ERROR">
      <annotations name="enum_val" value="0x0E"/>
    </literals>
    <literals name="INSUFICIENT_ENCRYPTION">
      <annotations name="enum_val" value="0x0F"/>
    </literals>
    <literals name="UNSUPPORTED_GROUP_TYPE">
      <annotations name="enum_val" value="0x10"/>
    </literals>
    <literals name="INSUFICIENT_RESOURCES">
      <annotations name="enum_val" value="0x11"/>
    </literals>
  </types>
  <protocols name="MQTT">
    <annotations name="serializer" value="JSON"/>
    <annotations name="mqtt_broker_address" value="tryggi3d"/>
    <annotations name="mqtt_publish_topic" value="tryggi3d/speech"/>
    <annotations name="mqtt_subscribe_topic" value="tryggi3d/speech"/>
    <annotations name="trace_level" value="1"/>
  </protocols>
  <configs name="MedicalGWBPTest">
    <annotations name="add_c_libraries" value="bluetooth"/>
    <instances name="handler" type="//@types.12"/>
    <instances name="hci" type="//@types.13"/>
    <instances name="main" type="//@types.0"/>
    <instances name="initialiser" type="//@types.16"/>
    <instances name="scanner" type="//@types.19"/>
    <instances name="connecter" type="//@types.22"/>
    <connectors xsi:type="thingML:Connector" cli="//@configs.0/@instances.2" required="//@types.0/@ports.1" srv="//@configs.0/@instances.0" provided="//@types.12/@ports.0"/>
    <connectors xsi:type="thingML:Connector" cli="//@configs.0/@instances.2" required="//@types.15/@ports.0" srv="//@configs.0/@instances.3" provided="//@types.16/@ports.0"/>
    <connectors xsi:type="thingML:Connector" cli="//@configs.0/@instances.2" required="//@types.18/@ports.0" srv="//@configs.0/@instances.4" provided="//@types.19/@ports.0"/>
    <connectors xsi:type="thingML:Connector" cli="//@configs.0/@instances.2" required="//@types.21/@ports.0" srv="//@configs.0/@instances.5" provided="//@types.22/@ports.0"/>
    <connectors xsi:type="thingML:Connector" cli="//@configs.0/@instances.2" required="//@types.48/@ports.0" srv="//@configs.0/@instances.1" provided="//@types.49/@ports.0"/>
    <connectors xsi:type="thingML:ExternalConnector" inst="//@configs.0/@instances.2" port="//@types.0/@ports.0" protocol="//@protocols.0"/>
    <connectors xsi:type="thingML:Connector" cli="//@configs.0/@instances.3" required="//@types.24/@ports.0" srv="//@configs.0/@instances.1" provided="//@types.25/@ports.0"/>
    <connectors xsi:type="thingML:Connector" cli="//@configs.0/@instances.3" required="//@types.24/@ports.1" srv="//@configs.0/@instances.1" provided="//@types.25/@ports.1"/>
    <connectors xsi:type="thingML:Connector" cli="//@configs.0/@instances.3" required="//@types.24/@ports.2" srv="//@configs.0/@instances.1" provided="//@types.25/@ports.2"/>
    <connectors xsi:type="thingML:Connector" cli="//@configs.0/@instances.3" required="//@types.48/@ports.0" srv="//@configs.0/@instances.1" provided="//@types.49/@ports.0"/>
    <connectors xsi:type="thingML:Connector" cli="//@configs.0/@instances.3" required="//@types.46/@ports.0" srv="//@configs.0/@instances.1" provided="//@types.47/@ports.0"/>
    <connectors xsi:type="thingML:Connector" cli="//@configs.0/@instances.4" required="//@types.24/@ports.0" srv="//@configs.0/@instances.1" provided="//@types.25/@ports.0"/>
    <connectors xsi:type="thingML:Connector" cli="//@configs.0/@instances.4" required="//@types.24/@ports.1" srv="//@configs.0/@instances.1" provided="//@types.25/@ports.1"/>
    <connectors xsi:type="thingML:Connector" cli="//@configs.0/@instances.4" required="//@types.24/@ports.2" srv="//@configs.0/@instances.1" provided="//@types.25/@ports.2"/>
    <connectors xsi:type="thingML:Connector" cli="//@configs.0/@instances.4" required="//@types.48/@ports.0" srv="//@configs.0/@instances.1" provided="//@types.49/@ports.0"/>
    <connectors xsi:type="thingML:Connector" cli="//@configs.0/@instances.4" required="//@types.46/@ports.0" srv="//@configs.0/@instances.1" provided="//@types.47/@ports.0"/>
    <connectors xsi:type="thingML:Connector" cli="//@configs.0/@instances.5" required="//@types.24/@ports.0" srv="//@configs.0/@instances.1" provided="//@types.25/@ports.0"/>
    <connectors xsi:type="thingML:Connector" cli="//@configs.0/@instances.5" required="//@types.24/@ports.1" srv="//@configs.0/@instances.1" provided="//@types.25/@ports.1"/>
    <connectors xsi:type="thingML:Connector" cli="//@configs.0/@instances.5" required="//@types.24/@ports.2" srv="//@configs.0/@instances.1" provided="//@types.25/@ports.2"/>
    <connectors xsi:type="thingML:Connector" cli="//@configs.0/@instances.5" required="//@types.48/@ports.0" srv="//@configs.0/@instances.1" provided="//@types.49/@ports.0"/>
    <connectors xsi:type="thingML:Connector" cli="//@configs.0/@instances.5" required="//@types.46/@ports.0" srv="//@configs.0/@instances.1" provided="//@types.47/@ports.0"/>
    <propassigns instance="//@configs.0/@instances.1" property="//@types.25/@properties.0">
      <init xsi:type="thingML:StringLiteral" stringValue="hci0"/>
    </propassigns>
  </configs>
</thingML:ThingMLModel>
